<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>怪诞的小站</title>
  
  <subtitle>无聊</subtitle>
  <link href="https://cqlkc.top/atom.xml" rel="self"/>
  
  <link href="https://cqlkc.top/"/>
  <updated>2024-06-09T15:18:15.242Z</updated>
  <id>https://cqlkc.top/</id>
  
  <author>
    <name>cqlkc</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>穷玩游戏--PC Game Pass</title>
    <link href="https://cqlkc.top/posts/202469.html"/>
    <id>https://cqlkc.top/posts/202469.html</id>
    <published>2024-06-09T14:05:14.000Z</published>
    <updated>2024-06-09T15:18:15.242Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在开头">写在开头</h2><p>Xbox Game Pass，可谓是全球最受欢迎的游戏订阅服务，在用户规模和内容体量上都十分庞大。得益于巨硬的气大财粗以及Xbox旗下一系列工作室（如Playground Studio）产出的大量第一方游戏，XGP中也就不乏高质量的游戏。</p><p>经典的热门游戏如：<strong>极限竞速：地平线4</strong>、<strong>极限竞速：地平线5</strong>、<strong>Minecraft:Java &amp; Bedrock Edition</strong></p><p>爆火的现象级游戏如：<strong>幻兽帕鲁</strong>、<strong>庄园领主</strong></p><p>（这俩甚至是首发登录XGP）</p><p>稍小众的高质量游戏如：<strong>HiFi RUSH</strong>、<strong>Persona 3 Reload</strong>、<strong>都市：天际线2</strong></p><p>其他大作：<strong>星空</strong>、<strong>原子之心</strong>、<strong>星球大战：绝地幸存者</strong>(EA Play)</p><p>以上仅是我个人比较感兴趣的部分游戏，实际XGP中还包含很多游戏但我可能不知道（或者并不关心），而且XGP Ultimate还有云游戏等服务这里不作阐述</p><p><strong>但是</strong>，对于大多数PC玩家来说，我们需要购买的只有PC Game Pass（即Xbox Game Pass for PC）。而PC Game Pass不仅国区无法正常购买，而且价格不菲。对于新用户来说是10港币/月，也就是大约9元/月，而老用户为27元/月，若购买一年订阅则将花费超300元。对于学生党来说，可能一个月就只能玩10个小时左右，承担如此订阅费用会略有些压力。</p><p><img src="https://bu.dusays.com/2024/06/09/6665c67c27380.webp" alt=""></p><p>因此，PC Game Pass共享号应运而生。</p><h2 id="共享号？">共享号？</h2><p>目前，PC Game Pass共享号一年花费约在15元左右，甚至可以更低</p><p>一听见“共享号”再结合这个价格，似乎这个方案显得很不靠谱</p><p>实则不然，大多数卖PC Game Pass共享号的商家都采取了如下模式</p><ol><li>用新号购买一整年的XGPU,成本最多300</li><li>出售PC 登录位*10，15元</li><li>出售主机 HOME位*1，129元</li><li>出售主机 登录位*1，99元</li><li>出售EA Play账号*1，49元</li><li>出售战网*1，69元</li><li>出售拳头绑定*1，69元</li><li>出售云游戏服务，99元</li></ol><p>上述总共加和约<strong>565元</strong>，对比成本来说就很合理了。即使在最坏情况的下，只卖出了PC登录位和Xbox主机 HOME位、EA Play商家也是能赚钱的。</p><p>而且更重要的是，PC登录位一年只能有10个账号，这不能由号主删除或添加，所以店家也就没有了跑路的必要，即便跑了也不能多赚钱。</p><h2 id="Xbox账号问题">Xbox账号问题</h2><p>PC Game Pass共享号很好的一点就是——它只需要登录微软商店用于验证所有权，而玩游戏时用的Xbox是登录的自己的账号。也就是说，虽然是用的共享号，但如云存档、XBox点数、成就、在线游戏联机等都在自己的号上。（这点真的非常好</p><h2 id="关于购买">关于购买</h2><p>随便找一家评价时间跨度长一点的老店即可</p><h2 id="成品">成品</h2><p><img src="https://bu.dusays.com/2024/06/09/6665c5e18331e.webp" alt="最终成品"></p>]]></content>
    
    
    <summary type="html">10元拿下各种游戏</summary>
    
    
    
    <category term="水文" scheme="https://cqlkc.top/categories/%E6%B0%B4%E6%96%87/"/>
    
    
    <category term="游戏" scheme="https://cqlkc.top/tags/%E6%B8%B8%E6%88%8F/"/>
    
    <category term="pgp" scheme="https://cqlkc.top/tags/pgp/"/>
    
    <category term="xbox" scheme="https://cqlkc.top/tags/xbox/"/>
    
  </entry>
  
  <entry>
    <title>从6600xt到4060ti</title>
    <link href="https://cqlkc.top/posts/undefined.html"/>
    <id>https://cqlkc.top/posts/undefined.html</id>
    <published>2024-03-30T13:22:51.000Z</published>
    <updated>2024-03-30T14:33:36.034Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>GPT-sovits 革命性的TTS开源项目</title>
    <link href="https://cqlkc.top/posts/23423.html"/>
    <id>https://cqlkc.top/posts/23423.html</id>
    <published>2024-03-29T14:13:26.000Z</published>
    <updated>2024-06-22T14:37:18.986Z</updated>
    
    <content type="html"><![CDATA[<h1>Demo演示</h1><p>所需：</p><ol><li>5min及以上的人声</li><li>一张支持cuda的显卡</li></ol><p>成果：</p>  <div class="tag-plugin audio">  <audio controls preload>  <source src="https://music734.4everland.store/1_1_1_1vocalxv9mwlfx.flac_0000249920_0000496640.wav" type="audio/mp3">Your browser does not support the audio tag.  </audio>  </div>    <div class="tag-plugin audio">  <audio controls preload>  <source src="https://music734.4everland.store/%E4%BD%A0%E8%AF%B4%E7%9A%84%E5%AF%B9.wav" type="audio/mp3">Your browser does not support the audio tag.  </audio>  </div>  <h1>未完待续</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;Demo演示&lt;/h1&gt;
&lt;p&gt;所需：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;5min及以上的人声&lt;/li&gt;
&lt;li&gt;一张支持cuda的显卡&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;成果：&lt;/p&gt;

  &lt;div class=&quot;tag-plugin audio&quot;&gt;
  &lt;audio control</summary>
      
    
    
    
    <category term="水文" scheme="https://cqlkc.top/categories/%E6%B0%B4%E6%96%87/"/>
    
    
    <category term="AI" scheme="https://cqlkc.top/tags/AI/"/>
    
    <category term="整货" scheme="https://cqlkc.top/tags/%E6%95%B4%E8%B4%A7/"/>
    
  </entry>
  
  <entry>
    <title>浅谈高考赋分制</title>
    <link href="https://cqlkc.top/posts/62312.html"/>
    <id>https://cqlkc.top/posts/62312.html</id>
    <published>2024-03-09T13:22:38.000Z</published>
    <updated>2024-03-30T15:25:04.862Z</updated>
    
    <content type="html"><![CDATA[<h1>前言</h1><p>不久之前，进入高一下以来也是分科后的第一次考试结束了。最开始听别人说这次考试不赋分，心里面就有些窃喜。因为很早之前在初二就从 zq 口中听说了赋分的威力，后面结果出来后先拿到原始分很开心，觉得这次稳了，结果再选学科一赋分，排名一下子就往后滑了不少(；′⌒`)。</p><h1>不理性分析</h1><h2 id="溯其本源">溯其本源</h2><p>赋分制本身是重庆近几年实行<strong>3+1+2新高考模式</strong>带来的产物，将原先的大文综、大理综拆成了四个再选学科可供自由选择，但录取时只分物理类和历史类，为保证公平，四个再选学科分数必须进行转换以消除学科间分数差异，于是以排名为基础的<strong>赋分制</strong>诞生了</p><h2 id="算法简述">算法简述</h2><p>重庆市高考再选学科转换分满分为100分，赋分起点为30分。将没门选择考再选学科考生的原始分从高到低划分到A、B、C、D、E共五个等级，各个等级人数比例分别为15%、35%、35%、13%和2%，赋分区间以此为100~86、85~71、70~56、55~41和40~30</p><h2 id="Influence">Influence</h2><p>注意到，A、B两等级（即是说71~100）分数段的人就占了足足50%的比例，这说起来可能没什么直观感受，但如果再想想自己学校平时月考原始分的中位数大概是多少呢？？在 bz，中间名次大概是在1000名左右，这个时候的分数一般都有点一般，甚至是很一般，但是却能轻松赋到80分的高分，直接带来了20~30分左右的分数跃升（真的有点恐怖了。而且，越到高分段赋分带来的增长越来越弱，在一些学校高考的再选学科甚至有扁平化的趋势。</p><p>赋分不会影响在这个再选学科的排名，但是对于总分影响就真的<strong>相当大</strong>了。记得尊敬的 xy 老师从高一入学前的暑假开始就在强调<strong>主科的重要性</strong>而且再选学科可以暂时不去管他。当时我还没意识到事情的严重性，觉得自己多摸过几年化学，就搞了本《天利》来刷</p><p>（当然最后 xy 布置的任务是一个也没完成</p><p>就拿我来说，我化学考试赋分之后大约只涨了有3分，生物也差不多；然而我周围原始分与我相当的同学几乎都有10~20分的涨幅，直接把我吊打了(<em>^_^</em>)。</p><h1>结语</h1><p>总之，教训很显然：</p><div class="tag-plugin quot"><p class="content" type="text"><span class="empty"></span><span class="text">主科 comes first.</span><span class="empty"></span></p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;前言&lt;/h1&gt;
&lt;p&gt;不久之前，进入高一下以来也是分科后的第一次考试结束了。最开始听别人说这次考试不赋分，心里面就有些窃喜。因为很早之前在初二就从 zq 口中听说了赋分的威力，后面结果出来后先拿到原始分很开心，觉得这次稳了，结果再选学科一赋分，排名一下子就往后滑了不少(；</summary>
      
    
    
    
    <category term="学习" scheme="https://cqlkc.top/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="高考" scheme="https://cqlkc.top/tags/%E9%AB%98%E8%80%83/"/>
    
    <category term="赋分" scheme="https://cqlkc.top/tags/%E8%B5%8B%E5%88%86/"/>
    
    <category term="学习" scheme="https://cqlkc.top/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Caddy -- 一款优秀的Web服务器</title>
    <link href="https://cqlkc.top/posts/51203.html"/>
    <id>https://cqlkc.top/posts/51203.html</id>
    <published>2023-08-28T06:50:42.000Z</published>
    <updated>2024-06-01T14:32:12.559Z</updated>
    
    <content type="html"><![CDATA[<h1>前言</h1><p>这几天一直在折腾家里的旧手机（参照前文），在用传统的 Nginx 搭建https服务的时候，证书问题真的超级麻烦而且 Nginx 的文件也很复杂，对一些新特性支持也一般，对我这种又懒又想折腾的人及其不友好。</p><p>结果在网上冲浪的时候，偶然发现了 Caddy 这个宝藏软件</p><p>官网：<a href="https://caddyserver.com/docs/">https://caddyserver.com/docs/</a></p><h1>独特之处</h1><p>首先，最重要的是是它的<strong>SSL证书自动申请续期</strong>，过程完全自动而且速度快，自己只需要提供token（或者开放80端口）</p><p>其次，它对<strong>新特性的支持优秀</strong>，无需配置便支持 HTTP/3 quic、Markdown自动翻译、ipv6 等特性</p><p><img src="../img/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-08-28%20150439.png" alt="支持http3/quic,ipv6"></p><p>最后，配置文件简单，配置三个站点仅用短短几行就能解决</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">ipv6.pan.cqlkc.top:29565 &#123;</span><br><span class="line">    reverse_proxy / 127.0.0.1:5244</span><br><span class="line">    encode gzip</span><br><span class="line">    tls &#123;</span><br><span class="line">        dns dnspod &quot;ID,Token&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">ipv6.cqlkc.top:443 mirror1.cqlkc.top:23232 &#123;</span><br><span class="line">    root * /home/cqlkc/cqlkc.github.io</span><br><span class="line">    file_server</span><br><span class="line">    encode gzip</span><br><span class="line">    tls &#123;</span><br><span class="line">        dns dnspod &quot;ID,Token&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是，Caddy 相比 Nginx 在性能方面仍有劣势，Nginx 资源占用更低，速度更快（但是它更麻烦啊！</p><p>所以小站点可能会更推荐 Caddy，可以大大降低维护成本（利好学生党</p><h1>配置教程</h1><p>参照<a href="https://caddyserver.com/docs/">官方文档</a>和我的Caddyfile示例即可</p><p>需要注意的是，国内家宽的80端口被封锁，因此 Caddy 默认的 HTTP-01 验证无法正常检验域名所有权</p><h2 id="非80端口验证域名所有权">非80端口验证域名所有权</h2><p>解决方法就是用 XCaddy 编译第三方插件和 Caddy 源码第三方插件即可</p><p>第三方插件列表在 <a href="https://caddyserver.com/docs/modules/">https://caddyserver.com/docs/modules/</a> 里面找</p><p>我这里有编译过的 DNSpod 插件的 <a href="https://pan.cqlkc.top:29565/d/%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98/Caddy/caddy">Caddy 二进制文件（ARM64）</a>，可以直接用</p><h1>总结</h1><p>Caddy 很好用很好用很好用，懒人必备（笑</p>]]></content>
    
    
    <summary type="html">用起来比nginx方便太多了...</summary>
    
    
    
    
    <category term="web" scheme="https://cqlkc.top/tags/web/"/>
    
    <category term="caddy" scheme="https://cqlkc.top/tags/caddy/"/>
    
  </entry>
  
  <entry>
    <title>给老手机部署上Alist服务</title>
    <link href="https://cqlkc.top/posts/13283.html"/>
    <id>https://cqlkc.top/posts/13283.html</id>
    <published>2023-06-29T04:55:37.000Z</published>
    <updated>2023-09-16T12:43:59.379Z</updated>
    
    <content type="html"><![CDATA[<p>家里有一台闲置的小米8（dipper），已经提前解锁Bootloader，中考后就想着在上面架设linux终端跑点东西</p><h1>准备过程</h1><p>所需材料:</p><ol><li>安卓手机一台</li><li>windows电脑一台</li></ol><p>安卓手机推荐解锁bl并root，方便后续实现插电运行，避免电池损耗鼓包，后续也以root为准</p><p>国内开放解锁bl的手机品牌有：小米、一加、oppo、realme</p><p>（小米为绑定后7天解锁，一加可以直接解锁，oppo、realme需要申请名额很难）</p><p>有些较老安卓机可以直接fastboot解锁另说</p><h2 id="刷入合适的刷机包">刷入合适的刷机包</h2><p>由于手上的小米8当时更新到了拉胯的MIUI12.5，又卡又费电不适合长期运行，所以决定回滚到MIUI10.3.5</p><p><strong>如果手机当前状况良好可以不管</strong></p><p>具体过程参照</p><p><a href="https://www.coolapk.com/feed/45223331">https://www.coolapk.com/feed/45223331</a></p><h2 id="提前下载所需应用">提前下载所需应用</h2><p>解锁bl以后会清空手机数据，到时候一个一个下载很麻烦，所以提前下好，节约时间</p><p>手机应用列表：</p><p>Magisk Delta : <a href="https://github.com/HuskyDG/magisk-files/releases">https://github.com/HuskyDG/magisk-files/releases</a></p><p>Termux  : <a href="https://github.com/termux/termux-app/releases">https://github.com/termux/termux-app/releases</a></p><p>AccA : <a href="https://github.com/MatteCarra/AccA/releases">https://github.com/MatteCarra/AccA/releases</a></p><p>MT管理器 : <a href="https://www.coolapk.com/apk/bin.mt.plus">https://www.coolapk.com/apk/bin.mt.plus</a></p><p>电脑所需：</p><p>Miflash : <a href="https://pan.cqlkc.top:29565/123">https://pan.cqlkc.top:29565/123</a></p><p>Fastboot工具箱 : <a href="https://pan.cqlkc.top:29565/123">https://pan.cqlkc.top:29565/123</a></p><h2 id="提前准备boot镜像">提前准备boot镜像</h2><p>首先在手机设置中确定系统版本，如MIUI10.3.5</p><p>在相关渠道找到该版本的线刷包（fastboot刷机包）</p><p>经过几次解压后，打开Image文件夹，找到boot.img拷贝到手机中备用</p><p><img src="https://img.cqlkc.top/202306/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-29%20131920.webp" alt=""></p><p><img src="https://img.cqlkc.top/202306/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-29%20132036.webp" alt=""></p><h1>操作流程</h1><h2 id="Root-手机（可选）">Root 手机（可选）</h2><p>注：需要解锁Bootloader</p><h3 id="安装Magisk">安装Magisk</h3><p>安装Magisk Delta，这是Magisk的一个好用的第三方分支</p><p><img src="https://img.cqlkc.top/202306/Screenshot_2023-06-29-13-41-28-085_com.miui.home.webp" alt=""></p><p>打开后，在主页找到Magisk 安装</p><p><img src="https://img.cqlkc.top/202306/Screenshot_2023-06-29-13-41-33-805_io.github.huskydg.magisk.webp" alt="选择Magisk右侧的安装"></p><p>选择选择并修补一个文件，选项不用打钩</p><p>在文件管理中找到先前准备的boot.img进行修补</p><p><img src="https://img.cqlkc.top/202306/Screenshot_2023-06-29-13-41-40-542_io.github.huskydg.magisk.webp" alt=""></p><p>跑码跑到最后提示Done即为成功</p><p>再将修补好的boot.img（形如&quot;magisk_patched_XXXXX.img&quot;）拷贝至电脑</p><p>将手机关机，同时按住电源键和音量-键，出现Fastboot标志后松手，连接电脑</p><p>打开fastboot工具箱中的“打开CMD命令行.bat”</p><p>输入fastboot flash boot 修补好的boot镜像</p><h3 id="配置AccA、Termux">配置AccA、Termux</h3><p>重启手机，安装Termux、AccA</p><p>打开Magisk Delta</p><p>在设置中开启Magisk Hide和强制使用超级用户列表</p><p>在超级用户列表中勾选系统界面、设置、以及Termux和AccA</p><p>打开AccA，授权超级用户权限</p><p><img src="https://img.cqlkc.top/202306/Screenshot_2023-06-29-13-39-28-056_mattecarra.accapp.webp" alt=""></p><p>在配置一栏启用Default，并编辑开启电池闲置优先模式</p><p><img src="https://img.cqlkc.top/202306/Screenshot_2023-06-29-13-39-36-325_mattecarra.accapp.webp" alt=""></p><h2 id="配置-Termux">配置 Termux</h2><p>在系统设置中，将Termux的后台管理设为“无限制”</p><p>（各品牌UI设计不尽相同，不做阐释）</p><p>接下来就比较轻松了，Termux完全可以当成正常的Linux终端使用（补：完全不能！！！</p><p>（下载软件时注意架构为ARM64）</p><h2 id="固定-局域网IP">固定 局域网IP</h2><p>在手机中WLAN设置中，将IP分配方式设置为静态，记住这一IP</p><p>如图</p><p><img src="https://img.cqlkc.top/202306/Screenshot_2023-06-29-14-02-19-526_com.android.settings.png" alt=""></p><h1>部署 Alist</h1><p>Alist是一个轻量级的网盘管理项目，可以挂载很多网盘</p><p>这里尝试部署Alist项目在手机上</p><p>首先在Termux中输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install alist</span><br></pre></td></tr></table></figure><p>接着输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alist admin </span><br></pre></td></tr></table></figure><p>以确认admin密码</p><p>然后启动服务即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alist server</span><br></pre></td></tr></table></figure><p>这样Alist就运行在5244端口上了</p><p>在同一局域网内的设备，可以通过IP:端口的方式打开Alist面板</p><p>如192.168.31.77:5244</p><p>但是这样只能在内网访问，很不方便，需要将其开放至外网</p><h2 id="部署内网穿透">部署内网穿透</h2><p>推荐服务商<a href="https://www.natfrp.com">SakuraFrp</a></p><p>提供2条隧道，10Mbps网速，以及内地节点使用</p><p>下面以SakuraFrp为例部署内网穿透</p><h2 id="SakuraFrp网页端配置">SakuraFrp网页端配置</h2><p>注册账号并进行实名认证（或者不实名使用日本NTT节点也可）</p><p>服务-隧道列表创建隧道，在普通节点中选择一个合适的节点</p><p><img src="https://img.cqlkc.top/202306/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-29%20141337.webp" alt=""></p><p>这里我选择了离得比较近的成都电信7节点</p><p>隧道类型为TCP隧道，本地IP选择0.0.0.0</p><p>本地端口为5244</p><p>远程端口随意，之后访问要用到</p><p>自动HTTPS一栏要注意，如果选择自动会出现证书错误，影响体验</p><p>因此建议输入自己的域名，我这里输入pan.cqlkc.top</p><p>到这里就创建成功了</p><p>接下来在操作中，选择配置文件，下载配置文件保存，后续要用</p><h2 id="SSL证书配置">SSL证书配置</h2><p>由于绑定到了自己的域名下，因此需要自己去申请SSL证书</p><p>建议使用<a href="https://freessl.cn">FreeSSL</a>申请免费证书</p><p><img src="https://img.cqlkc.top/202306/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-29%20142246.webp" alt=""></p><p><img src="https://img.cqlkc.top/202306/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-29%20142326.webp" alt=""></p><p>如图选择即可，CSR选择离线生成，用他提供的KeyManager软件导出Nginx格式的证书（包含.key和.crt两个格式的文件）</p><p><img src="https://img.cqlkc.top/202306/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-29%20142421.webp" alt=""></p><p>重命名证书为 你的域名.key 和 你的域名.crt</p><p>如 pan.cqlkc.top.crt</p><p>完成后拷贝到手机备用</p><h2 id="Termux文件交互">Termux文件交互</h2><p>安装并打开MT管理器，按要求授权后点击左上角，再点击菜单右上角的三个点添加本地储存，选择Termux即可</p><p><img src="https://img.cqlkc.top/202306/Screenshot_2023-06-29-14-28-38-868_bin.mt.plus.png" alt=""></p><p><img src="https://img.cqlkc.top/202306/Screenshot_2023-06-29-14-28-49-313_bin.mt.plus.png" alt=""></p><p>然后将frpc.ini、网站证书一起复制到根目录</p><h3 id="Termux端配置">Termux端配置</h3><p>根据<a href="https://doc.natfrp.com/frpc/usage.html">frpc 基本使用指南 | SakuraFrp 帮助文档 (natfrp.com)</a>，我们这里要使用的是Frpc（建议按照下列步骤进行，原指南不适用于Termux环境）</p><p>首先我们完善一下Termux组件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install wget vim aria2 -y</span><br></pre></td></tr></table></figure><p>然后下载frpc并授权（可能会遇到TooManyRequests报错，等一会再下载即可）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget -O https://getfrp.sh/d/frpc_linux_arm64_noupx</span><br><span class="line"><span class="built_in">chmod</span> 755 frpc</span><br></pre></td></tr></table></figure><p>运行frpc</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./frpc</span><br></pre></td></tr></table></figure><p>如无误，会在3秒后自动载入配置文件并提示TCP隧道启动成功</p><p>并提示你通过某个域名:端口连接隧道</p><p>这时回到DNS网站，添加CNAME类型解析，记录值为提示域名</p><p><img src="https://img.cqlkc.top/202306/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-29%20143609.webp" alt=""></p><p>但此时alist服务还没有运行，我们还需要将两者同时运行</p><p>回到Termux，按Crtl+C退出frpc</p><p>输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alist server &amp; ./frpc</span><br></pre></td></tr></table></figure><p>大功告成，接下来通过你绑定的域名打开Alist吧</p><p>（记得带端口号</p><h1>2023.8.27更新</h1><p>Termux 的文件结构是被魔改过的，而且在权限上有些bug</p><p>所以有能力刷机或者root手机的建议不再使用 Termux 部署 linux</p><p>可以使用 Ubuntu Touch （推荐）或者 PostmarketOS 等原生Linux发行版，体验会好很多</p><p>如果原生Linux对于使用的手机缺少驱动支持，再考虑使用 Linux Deploy 等在chroot容器上运行Linux发行版，体验会好很多</p><p>注:</p><ol><li>Docker需要内核支持，Android手机的内核是基于Linux魔改过的，无法运行Docker，因此在Android上就需要自行修改编译内核（Android手机的内核一般都是开源的）</li></ol><p>附小米内核源码仓库 <a href="https://github.com/MiCode/Xiaomi_Kernel_OpenSource">https://github.com/MiCode/Xiaomi_Kernel_OpenSource</a></p><p>clone以后可以自己先编译测试一下，再添加kernelsu、docker等特性编译（不然容易出问题</p><ol start="2"><li>sakurafrp也可以选择其他替代品，如mefrp，在实名认证和带宽方面更友好</li><li>可以用 caddy 自动配置tls，详见另一篇文章</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;家里有一台闲置的小米8（dipper），已经提前解锁Bootloader，中考后就想着在上面架设linux终端跑点东西&lt;/p&gt;
&lt;h1&gt;准备过程&lt;/h1&gt;
&lt;p&gt;所需材料:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;安卓手机一台&lt;/li&gt;
&lt;li&gt;windows电脑一台&lt;/li&gt;
&lt;/ol</summary>
      
    
    
    
    
    <category term="瞎搞" scheme="https://cqlkc.top/tags/%E7%9E%8E%E6%90%9E/"/>
    
  </entry>
  
  <entry>
    <title>A卡、I卡如何愉快地使用UVR5</title>
    <link href="https://cqlkc.top/posts/37966.html"/>
    <id>https://cqlkc.top/posts/37966.html</id>
    <published>2023-05-27T01:34:58.000Z</published>
    <updated>2023-09-16T12:43:59.373Z</updated>
    
    <content type="html"><![CDATA[<h1>DirectML 分支解决方案</h1><p>UVR5项目在GitHub有人为它做了DirectML分支，能够在支持DX12的GPU上启用GPU加速</p><p>项目链接：<a href="https://github.com/Aloereed/ultimatevocalremovergui-directml">Aloereed/ultimatevocalremovergui-directml</a></p><p>但是该分支目前<strong>仅支持VR Architecture算法</strong></p><ol><li><p>git clone <a href="https://github.com/Aloereed/ultimatevocalremovergui-directml.git">https://github.com/Aloereed/ultimatevocalremovergui-directml.git</a></p></li><li><p>pip install -r requirements.txt</p></li><li><p>将已下载的模型拖入model文件夹（或者在GUI中下载）</p></li><li><p>python <a href="http://UVR.py">UVR.py</a></p></li></ol><h1>ROCM 解决方案</h1><p>注意：此方案仅支持A卡，要求Linux环境（推荐Ubuntu20.04）</p><p>首先，安装显卡驱动和ROCM</p><p>可以通过其他人制作的一键工具，或者根据他人教程安装</p><p><a href="https://blog.csdn.net/u011450629/article/details/129793402">AMD显卡 Ubuntu 部署Stable DIffusion WebUI基于Pytorch2.0.0 Rocm5.4.2_Ha7nk的博客-CSDN博客</a></p><p>不过这个教程直接用的自带的python3进行安装（<strong>不推荐</strong>）</p><p>建议使用conda创建一个虚拟环境进行安装</p><p><a href="https://github.com/k7212519/ksd-launcher">k7212519/ksd-launcher: AMD专用stable-diffusion-webui 图形化安装启动器 KSD-Launcher (github.com)</a></p><p>这个执行到安装完成驱动就行，实测可用</p><p>首先下载<a href="https://github.com/Anjok07/ultimatevocalremovergui/archive/refs/heads/master.zip">https://github.com/Anjok07/ultimatevocalremovergui/archive/refs/heads/master.zip</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update &amp;&amp; sudo apt upgrade</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt install ffmpeg</span><br><span class="line">sudo apt install python3-pip</span><br><span class="line">sudo apt-get -y install python3-tk</span><br><span class="line">pip3 install -r requirements.txt</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">要玩AI就别买A卡</summary>
    
    
    
    
    <category term="水文" scheme="https://cqlkc.top/tags/%E6%B0%B4%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>红米9A “Windows未识别的USB设备” 深度救砖</title>
    <link href="https://cqlkc.top/posts/34206.html"/>
    <id>https://cqlkc.top/posts/34206.html</id>
    <published>2023-03-18T04:57:37.000Z</published>
    <updated>2023-09-16T12:43:59.369Z</updated>
    
    <content type="html"><![CDATA[<h1>前言</h1><p>用了一年多的低端机Redmi 9a感觉就非常的卡，放假有时间打算刷个qeui官改用用</p><p>解锁bootloader的时候，小米的官解当时还要等23h，就选择了mtk强解bl</p><p>第一次解很顺利，只是fastboot被阉割了点，问题不大</p><p>然而，线刷降级回miui12.5.12时不小心又给bootloader锁上了</p><p>当再次强解时，不幸翻车</p><p>手机黑屏，长按电源键无反应，电脑显示“Windows未识别的USB设备”</p><p>（无法进入rec或fastboot</p><h1>过程</h1><h2 id="拆后盖">拆后盖</h2><p>注：该步骤或许可以省略，在保机器最好先别弄，若深刷步骤无法进行再拆后盖也行</p><ol><li><p><strong>取出SIM卡槽</strong>，很重要，不取无法撬开后盖</p></li><li><p><strong>用刀片或者指甲沿着屏幕边缘撬开后盖</strong>，塑料后盖直接闭着眼睛撬就行</p></li><li><p><strong>拧开主板保护盖的螺丝，取下电池排线</strong></p><p><img src="https://img.cqlkc.top/2023/03/10fdb4ee8a4a072c04df8d3640b875a0.webp" alt="如图排线"></p></li><li><p><strong>半合上后盖</strong>，确保可以按到电源键，+/-音量键</p></li></ol><h2 id="深度刷机">深度刷机</h2><h3 id="准备">准备</h3><p>链接：<a href="https://pan.quark.cn/s/f58efcfa9bfa">https://pan.quark.cn/s/f58efcfa9bfa</a></p><ol><li>解压后先进入 工具–驱动 安装里面的两个驱动</li><li>打开SP FLASH TOOL后，会有如图界面</li><li>导入DA文件，直接用 SP FLASH TOOL 里的 MTK_AllInOne_DA.bin 即可</li><li>导入配置文件，该文件在线刷包中的Image中，形如 MT6765_Android_scatter.txt 字样的文件</li></ol><p>最终效果如图<img src="https://img.cqlkc.top/2023/03/7b0d295deaad1e7786e11c08dacaa761.webp" alt=""></p><h3 id="稳深刷端口">稳深刷端口</h3><p>mtk的深刷端口是不稳定的，但可以用bypass工具稳定端口</p><p>注：此时手机黑屏，先不插数据线</p><ol><li>打开 工具–稳深刷模式</li><li>点击下方 <strong>Disable Auth</strong> 按钮，同时按下手机<strong>电源键</strong>和 **+ - 声量键 **三个键不放约10s后，再插入数据线</li><li>出现如图信息，即为成功，可以进行下一步操作<img src="https://img.cqlkc.top/2023/03/9538242c0d66eb35ab781792009c6e92.webp" alt=""></li></ol><h3 id="开始刷机">开始刷机</h3><p>稳定了深刷端口后，在设备管理器中应该能看到mtk端口，没有那就重来上一个步骤</p><p>若一切正常，点击SP FLASH TOOL中的 <strong>下载</strong> 按钮，开始刷机（先跑红条，然后马上跑黄条即为正常）</p><p>刷完后会提示一个大绿勾，接着拔掉数据线，安装好电池排线和主板保护盖后合上后盖开机即可</p><p>最终成果，顺利开机</p><p><img src="https://img.cqlkc.top/2023/03/16c524b830d063b9f5dfad52b41f180f.webp" alt=""></p><h2 id="遇到过的问题">遇到过的问题</h2><h3 id="只跑红条，报错ERROR-STATUS-EXT-RAM-EXCEPTION-0xC0050005">只跑红条，报错ERROR <em>STATUS_EXT_RAM_EXCEPTION</em> (0xC0050005)</h3><p>一般为线刷包有问题，推荐使用miui12.5的最早期版本</p><p>下载地址去miuirom找对应型号即可</p><h3 id="稳深刷端口失败">稳深刷端口失败</h3><p>多试几次就行了（</p><h1>总结</h1><p><strong>搞机有风险，刷机需谨慎</strong></p><p>推荐走官解bl锁（非小米机型除外</p><p>新手不要在晚上刷机（大雾，不然睡不了觉</p>]]></content>
    
    
    <summary type="html">没事瞎折腾</summary>
    
    
    
    <category term="水文" scheme="https://cqlkc.top/categories/%E6%B0%B4%E6%96%87/"/>
    
    
    <category term="瞎折腾" scheme="https://cqlkc.top/tags/%E7%9E%8E%E6%8A%98%E8%85%BE/"/>
    
  </entry>
  
  <entry>
    <title>a卡视频开启插帧功能</title>
    <link href="https://cqlkc.top/posts/59508.html"/>
    <id>https://cqlkc.top/posts/59508.html</id>
    <published>2022-12-15T07:56:51.000Z</published>
    <updated>2024-03-30T14:13:02.578Z</updated>
    
    <content type="html"><![CDATA[<h1>写在开头</h1><p>月考结束后又是快乐的网课时光，所以决定水一篇文章证明我还活着（大雾</p><p>我们知道一般的视频帧率大多约为24fps，而通过 <strong>Bluesky Frame Rate Converter 视频滤镜</strong>我们可以将24fps补全至60fps ( 甚至更高 ) 以<strong>增加视频流畅度</strong></p><p>当然，这个有硬件限制，那就是必须是GCN架构的AMD GPU</p><p>2024更：RDNA架构也可用</p><hr><h1>准备</h1><ul><li><strong>GCN架构的GPU（当然要装驱动</strong></li><li><a href="https://potplayer.daum.net/">Potplayer播放器</a></li><li><a href="https://bluesky-soft.com/en/BlueskyFRC.html">Bluesky Frame Rate Converter 视频滤镜</a></li></ul><h2 id="如何判断我的GPU是不是GCN架构？">如何判断我的GPU是不是GCN架构？</h2><p>一般来说，AMD的独立显卡系列从HD 7000系列开始 <s>(不会还有人在用这么老的显卡吧</s>，一直到RX 500系列都是用的GCN架构</p><p>核心显卡应该是笔记本系列<strong>锐龙5000系及其以前</strong>的几乎所有型号，台式机系列<strong>除锐龙7000系</strong>所有型号也都是GCN架构</p><h1>配置</h1><p>在准备并安装好上述软件后，就可以开始我们的配置工作了</p><h2 id="Bluesky-FRC配置">Bluesky FRC配置</h2><p>首先，打开刚刚安装的Bluesky FRC</p><p>按照如图进行配置即可，部分配置可以自己微调</p><p>比如:</p><ul><li>Output的输出帧率可以根据自身设备情况调，我的显示器是75Hz所以调到了72p，如果是60Hz的用60p即可</li></ul><p><img src="https://img.cqlkc.top/202212/eb379e85b24f6148bb73285e71cd272c.webp" alt=""></p><h2 id="AMD驱动配置">AMD驱动配置</h2><p>首先，桌面找个空白处右键，选择<strong>AMD Software: Adrenalin Edition</strong></p><p><img src="https://img.cqlkc.top/202212/f60859fd6676575e22d705d0b1992eb7.webp" alt=""></p><p>打开后，直接在右上角搜索框，输入：“<strong>音频和视频设置</strong>”</p><p>在<strong>视频配置文件</strong>一项中，选择自定义，然后会出现一个&quot;<strong>自定义选项</strong>&quot;</p><p>找到<strong>AMD Fluid Motion Video</strong>并开启即可</p><p><img src="https://img.cqlkc.top/202212/6c6a8604e5b5c9c32560e6264ca423b8.webp" alt=""></p><h2 id="Potplayer-配置">Potplayer 配置</h2><p>随便打开一个视频，右键找到&quot;<strong>选项</strong>&quot;</p><p>左侧侧边栏选择<strong>滤镜–全局滤镜优先权</strong></p><p>右侧点击<strong>添加系统滤镜</strong>，找到&quot;<strong>Bluesky Frame Rate Converter</strong>&quot;并添加</p><p>然后，别忘了优先顺序选择为&quot;<strong>强制使用</strong>&quot;</p><p><img src="https://img.cqlkc.top/202212/0f72daacb097fecd29fea4ec4055a764.webp" alt=""></p><h1>效果展示</h1><p>至此，所有配置工作都结束了，来看一下效果如何</p><p><img src="https://img.cqlkc.top/202212/57454b26023c196664bfa8810d17be47.webp" alt=""></p><p>可以看到帧率显示“23.976 -&gt; 71.92”，这就代表插帧成功了</p><p>当然这种即时插帧效果比较一般，而且像动漫这些还是得24fps看起来才对味</p><h1>深度折腾</h1><p>以上配置都是基于Potplayer进行的，这个播放器很有意思，可以搭配madVR+LAV实现一些很惊艳的视频显示效果</p><p>（当然我这种用着廉价显示器的，看着低码率资源的菜鸡就不用折腾就是了``</p>]]></content>
    
    
    <summary type="html">A卡特有的插帧功能</summary>
    
    
    
    <category term="水文" scheme="https://cqlkc.top/categories/%E6%B0%B4%E6%96%87/"/>
    
    
    <category term="插帧" scheme="https://cqlkc.top/tags/%E6%8F%92%E5%B8%A7/"/>
    
  </entry>
  
  <entry>
    <title>高考化学易考易错知识点总结</title>
    <link href="https://cqlkc.top/posts/10471.html"/>
    <id>https://cqlkc.top/posts/10471.html</id>
    <published>2022-11-30T14:46:13.000Z</published>
    <updated>2024-03-30T14:33:29.508Z</updated>
    
    <content type="html"><![CDATA[<h1>前言</h1><h2 id="笔者的碎碎念">笔者的碎碎念</h2><p>个人感觉高考化学思维要求不高，很多地方只是机械记忆即可。虽然如此，这里面的坑还是太多了</p><p>所以就总结一下自己遇到的易错点（顺便也是复习了</p><h2 id="概述">概述</h2><p>高中化学教学主要使用4本教材</p><ul><li>必修一，比较简单，有点初高中衔接的感觉，没有思维障碍（？</li><li>选择性必修一，主讲化学反应理论类，比较抽象（个人认为最难的部分</li><li>选择性必修二，主讲结构，需要记忆和一定的空间想象能力</li><li>选择性必修三，专讲有机物及有机反应，重推理和记忆能力</li></ul><h1>正片</h1><h2 id="选择题">选择题</h2><h3 id="T1">T1</h3><p>这个题目一般是考察基础概念，没有什么难度</p><h3 id="T2-5">T2-5</h3><p>考察方程式的书写，一般注意一下几点：</p><ol><li>最简单的，配平了没有</li><li>考虑反应能否发生，氧化性？酸性？条件？</li><li>其次，离子方程式考虑各物质的存在形式（石灰乳？石灰水？</li><li>产物在该环境下能否存在（酸性？碱性？</li></ol><p>考察阿伏伽德罗常数（感觉易错），注意：</p><ol><li>反应可逆与否，诸如合成氨、盐的水解等等</li></ol><p>离子共存，没什么特别的</p><h2 id="T6">T6</h2><p>考察有机物，常见已混概念：</p><ol><li>同系物，一定要求同类，不是差个(CH2)就可以！</li><li>分子式，记得环要算不饱和度、有N元素存在H的数量会有变化！</li><li>共面共线问题，注意问的是可能还是一定</li><li>酯类的水解，注意考虑有酚类生成的情况</li><li>未完待续</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;前言&lt;/h1&gt;
&lt;h2 id=&quot;笔者的碎碎念&quot;&gt;笔者的碎碎念&lt;/h2&gt;
&lt;p&gt;个人感觉高考化学思维要求不高，很多地方只是机械记忆即可。虽然如此，这里面的坑还是太多了&lt;/p&gt;
&lt;p&gt;所以就总结一下自己遇到的易错点（顺便也是复习了&lt;/p&gt;
&lt;h2 id=&quot;概述&quot;&gt;概述&lt;/h2</summary>
      
    
    
    
    <category term="学习" scheme="https://cqlkc.top/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="学习" scheme="https://cqlkc.top/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="化学" scheme="https://cqlkc.top/tags/%E5%8C%96%E5%AD%A6/"/>
    
    <category term="总结" scheme="https://cqlkc.top/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>白嫖gpu云服务器部署webui方案汇总</title>
    <link href="https://cqlkc.top/posts/39808.html"/>
    <id>https://cqlkc.top/posts/39808.html</id>
    <published>2022-11-23T14:26:40.000Z</published>
    <updated>2024-06-01T14:45:41.791Z</updated>
    
    <content type="html"><![CDATA[<h1>Paperspace方案（不推荐）</h1><p>官网：</p><p><a href="https://www.paperspace.com/">https://www.paperspace.com/</a></p><p>这里是自己写的终端命令全流程，直接CV到终端回车即可</p><p>用的anythingv3.0的3.7g模型，也可以用别的，自己改，但不能超过4.5g（数据瞎估的，反正太大存不下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/AUTOMATIC1111/stable-diffusion-webui</span><br><span class="line"><span class="built_in">cd</span> stable-diffusion-webui/</span><br><span class="line"><span class="built_in">mkdir</span> -p /notebooks/stable-diffusion-webui/models/Stable-diffusion /notebooks/stable-diffusion-webui/models/hypernetworks</span><br><span class="line">wget  -P /notebooks/stable-diffusion-webui/models/Stable-diffusion/  <span class="string">&quot;https://huggingface.co/Linaqruf/anything-v3.0/resolve/main/Anything-V3.0-pruned.ckpt&quot;</span></span><br><span class="line">COMMANDLINE_ARGS=<span class="string">&quot;--exit&quot;</span> REQS_FILE=<span class="string">&quot;requirements.txt&quot;</span> python launch.py</span><br><span class="line">python lauch.py --share</span><br></pre></td></tr></table></figure><p>最后一步的&quot;INFO bore_cli::client: listening at bore.pub:xxxxx&quot;中的pore.pub:xxxxx就是生成的隧道链接，直接打开即可</p><p>只能连续用6h用完了重启即可，没有限额</p><h1>Google Colab方案（不可用）</h1><h1>Kaggle（推荐）</h1><p>官网：<a href="https://www.kaggle.com">https://www.kaggle.com</a></p><p>直接创建一个空白的notebook即可</p><p>记得验证手机号以启用GPU（推荐使用T4*2并使用半精度）和 Internet 链接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/AUTOMATIC1111/stable-diffusion-webui</span><br><span class="line"><span class="built_in">cd</span> stable-diffusion-webui/</span><br><span class="line"><span class="built_in">mkdir</span> -p /kaggle/working/stable-diffusion-webui/models/Stable-diffusion /notebooks/stable-diffusion-webui/models/hypernetworks</span><br><span class="line">wget  -P /kaggle/working/stable-diffusion-webui/models/Stable-diffusion/  <span class="string">&quot;https://huggingface.co/gsdf/Counterfeit-V3.0/resolve/main/Counterfeit-V3.0_fp16.safetensors&quot;</span></span><br><span class="line">COMMANDLINE_ARGS=<span class="string">&quot;--exit&quot;</span> REQS_FILE=<span class="string">&quot;requirements.txt&quot;</span> python launch.py</span><br><span class="line">python lauch.py --share</span><br></pre></td></tr></table></figure><p>注：模型用的是Counterfeit-V3.0_fp16，感觉还不错<br><img src="./../img/00016-2381107994.png" alt="2381107994"></p>]]></content>
    
    
    <summary type="html">白嫖才是第一生产力（（</summary>
    
    
    
    <category term="水文" scheme="https://cqlkc.top/categories/%E6%B0%B4%E6%96%87/"/>
    
    
    <category term="白嫖" scheme="https://cqlkc.top/tags/%E7%99%BD%E5%AB%96/"/>
    
    <category term="GPU云服务器" scheme="https://cqlkc.top/tags/GPU%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>给你的A卡换张皮--强刷vBIOS开核</title>
    <link href="https://cqlkc.top/posts/59890.html"/>
    <id>https://cqlkc.top/posts/59890.html</id>
    <published>2022-11-21T13:48:30.000Z</published>
    <updated>2024-03-30T12:32:29.707Z</updated>
    
    <content type="html"><![CDATA[<h1>写在开头</h1><p>开核，一个AMD的产品特有的词汇。</p><p>对于CPU而言，在Zen架构之前的系列里，部分特定批次的CPU可以在主板BIOS中打开那些被AMD屏蔽掉的可用核心（都是稀缺货</p><p>对于GPU而言，同样也是打开AMD屏蔽掉的那些流处理器，不过显卡不能通过像CPU那样调节BIOS轻松实现，但是它一般具有普适性</p><p>即只要是这个核心的显卡，就能通过强刷vBIOS来打开被屏蔽的流处理器</p><p>（有时为了让黑苹果免驱（如RX580 2048SP刷RX570），为了变身专业卡（Vega56刷WX8200）等，我们也许也会称这种行为叫开核，但这并不是严格意义上的开核，这顶多算换了个皮</p><h1>实践前提</h1><h2 id="确认条件">确认条件</h2><p>首先，你先要有一块能够开核（或者开核有实际意义的）显卡</p><p>一般来说，有如下常见型号:（箭头具有传递性，也可以反着刷，只要你愿意XD）</p><ol><li><p>RX470D<a href="%22%E5%8F%AF%E4%BB%A5%E4%BA%A7%E7%94%9F%E9%A2%9D%E5%A4%96%E7%9A%84%E6%B5%81%E5%A4%84%E7%90%86%E5%99%A8%22">^1</a>–&gt;RX470–&gt;RX580 2048SP</p></li><li><p>RX460 --&gt; RX560</p></li><li><p>RX560d<a href="%22%E5%8F%AF%E4%BB%A5%E4%BA%A7%E7%94%9F%E9%A2%9D%E5%A4%96%E7%9A%84%E6%B5%81%E5%A4%84%E7%90%86%E5%99%A8%22">^1</a> --&gt; RX560</p></li><li><p>RX480 --&gt; RX580 --&gt; RX590GME</p></li><li><p>RX Vega56 --&gt; RX Vega64</p></li></ol><h2 id="准备vBIOS">准备vBIOS</h2><p>刷VBIOS具有极高的风险，要随时做好刷黑变砖的准备!</p><p>1.第一步打开<a href="https://www.techpowerup.com/download/techpowerup-gpu-z/">GPU-Z </a>&quot;（如果没有，曾经作为一名图钉，我推荐<a href="http://www.tbtool.cn/">图吧工具箱</a>，doge）</p><p>如果没有问题的话，你应该看到这个界面</p><p><img src="https://img.cqlkc.top/202212/cdbd0cb24a4c2126ae7fea631d1405b6.webp" alt="GPU-Z"></p><p>这是对你现在使用的VBIOS的备份，非常重要！！</p><p>2.点击如图标出的小箭头，选择一个你可以找到的地方保存下来</p><p>（同时记住标红的几个参数，图中“4096MB”处对应你的显存大小，“Hynix”对于你的显存品牌</p><p>3.接下来，进入<a href="https://www.techpowerup.com/vgabios/">VGA Bios Collection | TechPowerUp</a>检索适合你的显卡的VBIOS</p><p>这里简单说下选择VBIOS的原则：</p><ol><li>核心一样（RX480 4G–&gt;RX580 4G是允许的，RX460 --&gt; RX580是不被允许的）</li><li>显存容量，品牌一样（RX480 4G尔必达 --&gt; RX480 4G三星不被允许，RX480 4G海力士 --&gt; RX580 4G海力士 是允许的）</li></ol><p>如图就是RX480 4G（海力士）对应的一个比较好的VBIOS（高亮的地方均符合要求</p><p><img src="https://img.cqlkc.top/202212/0c0f91c8b63cabf819cb2264bfdb2699.jpg" alt=""></p><hr><h1>刷入vBIOS</h1><ol><li><p>到<a href="https://www.techpowerup.com/download/ati-atiflash/">AMDVBFlash / ATI ATIFlash (3.31) Download | TechPowerUp</a>下载软件 AMDVBFlash 并解压至一个你找得到的地方</p></li><li><p>将提前准备的待刷入的vBIOS，与amdvbflash放置在同一文件夹</p></li><li><p>右键，选择“在此处打开命令窗口”，输入</p><p>amdvbflash.exe -p -f 0 xxx.rom</p><p>其中，xxx.rom为准备的vBIOS</p></li><li><p>如果一切正常，他应该会提示你“Restart System To Complete VBIOS Update.”</p><p><img src="https://i0.hdslb.com/bfs/album/c66ffba0beca04d8bc6d2816544a0ad3c8246cbc.jpg" alt=""></p></li><li><p>重启电脑后，打开GPU-Z看看效果如何</p><p>如图，是我用RX480 4G刷的RX580 4G的成品图</p></li></ol><p><img src="https://img.cqlkc.top/202212/851b780760bcef4a1530a2ac2088c32f.webp" alt="变身RX580"></p><h1>刷黑救砖</h1><p>刷vBIOS是一件有极大风险的事（失败了显卡直接变砖</p><p>不过一般而言，仅是刷错了vBIOS的话，显卡都还能救回来</p><h2 id="对于有双vBIOS开关的卡">对于有双vBIOS开关的卡</h2><p>有双vBIOS开关的卡救卡难度是最低的</p><p>如果你发现刷入vBIOS后开机不过自检/黑屏，断电关机，切换vBIOS开关重启</p><p>进入系统后，直接切换vBIOS开关，依照<a href="#%E5%88%B7%E5%85%A5vBIOS">刷入vBIOS</a>的方法再次强刷回先前备份的原vBIOS</p><p>（因此说备份vBIOS很重要！）</p><h2 id="对于没双vBIOS开关的">对于没双vBIOS开关的</h2><p>可以在DOS环境下盲刷，具体教程：</p><p><a href="https://tieba.baidu.com/p/5500803523">https://tieba.baidu.com/p/5500803523</a></p><p>可以在PE（Windows）环境下盲刷，对电脑要有相当的熟悉才可以做到：</p><p><a href="https://tieba.baidu.com/p/6728462628">https://tieba.baidu.com/p/6728462628</a></p><p>还有一种要用到编程器，这里就不涉及了（我没有也不会</p><h1>最后</h1><p>刷vBIOS有意思归有意思，但他最后有没有用嘛，就是另一回事了</p><p>如我的RX480 4G刷上RX580 4G后</p><p>待机功耗52W --&gt; 90W</p><p>游戏功耗 90Ww --&gt; 148W</p><p>功耗增加了50%以上，然而性能反而下降了10%左右</p><p>因为虽然RX480 和RX580本质上没什么区别，都是魔改GCN北极星架构</p><p>但是RX480供电为8pin TDP约120W，而RX580为8+6pin TDP约180W</p><p>刷入RX580的vBIOS后，针对RX480设计的供电和散热纷纷撞墙，因此性能不增反减</p><p>不过也不失为一种打发时间的好方法doge</p>]]></content>
    
    
    <summary type="html">开核是A卡的优秀传统，不能丢doge</summary>
    
    
    
    <category term="水文" scheme="https://cqlkc.top/categories/%E6%B0%B4%E6%96%87/"/>
    
    
    <category term="电脑" scheme="https://cqlkc.top/tags/%E7%94%B5%E8%84%91/"/>
    
    <category term="显卡" scheme="https://cqlkc.top/tags/%E6%98%BE%E5%8D%A1/"/>
    
  </entry>
  
  <entry>
    <title>电脑续命四年计划(3)-CPU升级2667v2</title>
    <link href="https://cqlkc.top/posts/62402.html"/>
    <id>https://cqlkc.top/posts/62402.html</id>
    <published>2022-11-17T05:12:05.000Z</published>
    <updated>2024-06-01T14:45:39.872Z</updated>
    
    <content type="html"><![CDATA[<script defer src="https://cdn.jsdelivr.net/npm/echarts@5.4.0/dist/echarts.min.js" data-pjax type="text/javascript"></script><h1>写在开头</h1><p>这篇水文原本应该很久之前就动笔的，不过因为插进来个可恶的线上半期被迫延期</p><p>实际上，我也不是第一次换这台电脑的CPU了，总的路线图如下</p><p>E5-2670 --&gt; E5-1620v2 --&gt; E5-2667v2</p><p>第一次换呢，是为了提升单核性能，牺牲了多核性能（因为当时玩的游戏多核优化都很烂）</p><p>这一次换就是既要多核性能，还要单核性能（因此2667v2在当时是相当昂贵的U</p><hr><h1>CPU-Z参数图</h1><h2 id="E5-1620V2">E5-1620V2</h2><img src="https://i0.hdslb.com/bfs/album/9aae0b9ca05d1f30ca864a4883a02b0a284057bb.webp" alt = "1620v2" referrerPolicy="no-referrer" /><p>E5-1620v2参数实际上标得很迷惑，TDP标到了130W，但实际测试中顶天跑个90W（石锤了，1620v2就是i7-3770马甲）</p><h2 id="E5-2667V2">E5-2667V2</h2><p><img src="https://i0.hdslb.com/bfs/album/ab3cf21546741c92dc6f2d07f2c8de21b51db7c9.webp" alt="2667v2"></p><p>可以看到实际上两块CPU因为同代产品，都是用的Ivy-bridge架构（也就是3代酷睿架构），因此IPC应该相近</p><p>且2667v2的睿频跑的要比1620v2要低一些（1620v2全核3.7GHz，2667V2全核3.6GHz）</p><p>然而实测下来，2667v2的单线程跑分比1620v2还高</p><p>猜测有可能是因为，2667v2有比1620v2大得多的三级缓存（不过一般来说，三缓只对游戏体验的有较大的影响</p><hr><h1>不严谨理论测试</h1><div id="cpu-test1" style="width: 85%;height:400px;"></div><script data-pjax>var e1 = function(){  var myChart = echarts.init(document.getElementById('cpu-test1'));var option = {  title: {          text: 'CPU理论性能测试成绩'        },  legend: {},  tooltip: {},  dataset: {    dimensions: ['product', 'E5-1620v2', 'E5-2667v2', 'i5-10400F'],    source: [      {        product: 'CPU-Z单线程',        'E5-1620v2': 372.3,        'E5-2667v2': 376.4,        'i5-10400F': 479.1      },      {        product: 'CPU-Z多线程',        'E5-1620v2': 1862,        'E5-2667v2': 3536.8,        'i5-10400F': 3623.4      },      {        product: 'R15多线程',        'E5-1620v2': 621,        'E5-2667v2': 1141,        'i5-10400F': 1291      },      {        product: '国际象棋(取1/10)',        'E5-1620v2': 1331.4,        'E5-2667v2': 2202.2,        'i5-10400F': 2246.8      }    ]  },  xAxis: { type: 'category' },  yAxis: {},  // Declare several bar series, each will be mapped  // to a column of dataset.source by default.  series: [{ type: 'bar' }, { type: 'bar' }, { type: 'bar' }]}; myChart.setOption(option);  // 刷新调整  window.onresize = function () {    myChart.resize();  }}e1();    document.addEventListener('pjax:complete', function () {        e1();    });</script><p>这里为了方便对比洋垃圾v2与现在CPU性能差距，引入了一个I5-10400F的参考对比数据</p><p>不过不难看出，E5-2667v2几乎可以跟i5-10400f打个五五开（当然IPC是远远不如，尤其是面对新出的13代</p><p>而理论多线程性能约为1620v2的两倍</p><hr><h1>不严谨游戏测试</h1><h2 id="战地1-64人模式">战地1 64人模式</h2><p>画质设置: 高</p><p>环境温度:不知道</p><h3 id="E5-1620v2">E5-1620v2</h3><p><img src="https://i0.hdslb.com/bfs/album/d6cf9a56ff0e11458243180771a60b1bb66a0fd9.webp" alt=""></p><p>在非交战区域，<strong>FPS大约在69帧</strong>左右，勉强能玩</p><p>CPU占用跑到了79%，后台基本上不能挂东西</p><p>之前就某一次游戏全程掉帧，预估平均fps只有20左右~~（结果发现是后台挂了<a href = "https://oi.saiodgm.gq">@Saiodgm</a>的网站没有休眠，把CPU吃到了99%~~</p><p>GPU跑到了100%，还是很给力的（GPU一般都最好跑满，跑不满要么是优化问题，要么是其他硬件有瓶颈限制了发挥）</p><h3 id="E5-2667V2-2">E5-2667V2</h3><p><img src="https://i0.hdslb.com/bfs/album/51204f2e0537e138d55131495ac9b2eee9673f76.webp" alt="E5-2667v2"></p><p>在同一场景下，E5-2667v2为<strong>76fps</strong>，要比E5-1620v2高出7fps</p><p>而且CPU的占用仅有33%（缺点是功耗的温度都有显著上升</p><h2 id="战地5-64人线上模式">战地5 64人线上模式</h2><p>战地系列游戏特有的大战场场景非常适合用来测试CPU实际性能（而且优化做的很好，不像某P社只会用CPU0</p><p>在战地5中对CPU性能的要求比前作战地1还要高得多</p><p>画质设置：中（开启DX12和未来帧渲染，关闭垂直同步）</p><p>（原本想开高的，但是开高的话就爆显存了。。。）</p><p>环境温度：不知道</p><h3 id="E5-1620V2-2">E5-1620V2</h3><p><img src="https://i0.hdslb.com/bfs/album/290712973e1b65cab2ecb55c55fc72c7b11a5a16.webp" alt="E5-1620v2"></p><p>野外非交战区域，<strong>FPS大约为76</strong></p><p>此时CPU占用已经跑到97%了，已经接近满载，后台几乎不能挂东西（否则会严重掉帧</p><p>GPU跑到了98%，也还不错，基本性能是发挥到位了的</p><p>游戏过程偶尔会掉帧，在中心交战区域尤其显著</p><p>（这就是为啥我打战地1却不玩战地5的部分原因</p><p>（当然战地5的画风和武器手感不喜欢也是</p><h3 id="E5-2667V2-3">E5-2667V2</h3><p><img src="https://i0.hdslb.com/bfs/album/45c7f0027e573c4731f11408752c5fdacbc567e9.webp" alt=""></p><p>同样野外非交战场景，<strong>FPS大约为100</strong></p><p>遇到对CPU性能要求更高的战地5的时候，2667v2的双倍性能就得到了充分体现</p><p>这里CPU占用率仅为48%（后台可以随便挂了属于是），GPU占用率跑到了100%</p><p>帧数也相比1620v2有很大进步，76FPS --&gt; 100FPS</p><p><s>CPU功耗和温度也获得了显著提升</s></p><h3 id="表格汇总">表格汇总</h3><div id="cpu-test2" style="width: 85%;height:400px;"></div><script data-pjax="" type="text/javascript">var myChart = echarts.init(document.getElementById('cpu-test2'));var option = {  title: {          text: 'CPU实际游戏帧率'        },  legend: {},  tooltip: {},  dataset: {    dimensions: ['product', 'E5-1620v2', 'E5-2667v2'],    source: [      {        product: '战地1',        'E5-1620v2': 69,        'E5-2667v2': 78      },      {        product: '战地5',        'E5-1620v2': 76,        'E5-2667v2': 100      }    ]  },  xAxis: { type: 'category' },  yAxis: {},  // Declare several bar series, each will be mapped  // to a column of dataset.source by default.  series: [{ type: 'bar' }, { type: 'bar' }, { type: 'bar' }]}; myChart.setOption(option);  // 刷新调整  window.onresize = function () {    myChart.resize();  }</script><hr><h1>总结</h1><p>总的来说，这次升级还是非常值得的，不过这也仅限于升级来说</p><p>目前1620v2市场价90元左右（市场上需求真的很小，我挂咸鱼很久都卖不出去</p><p>2667v2市场价180元左右（还是最近价格大跳水才有的性价比，几个月前的价格是现在的好几倍</p><p>当然，如果你是全新装机，X79/X99这类<strong>洋垃圾一定要划入黑名单</strong>，老平台在最近的新架构面前没有<strong>任何性价比</strong></p>]]></content>
    
    
    <summary type="html">月考前还在折腾这些有的没的...</summary>
    
    
    
    <category term="电脑续命四年计划" scheme="https://cqlkc.top/categories/%E7%94%B5%E8%84%91%E7%BB%AD%E5%91%BD%E5%9B%9B%E5%B9%B4%E8%AE%A1%E5%88%92/"/>
    
    
    <category term="电脑" scheme="https://cqlkc.top/tags/%E7%94%B5%E8%84%91/"/>
    
    <category term="评测" scheme="https://cqlkc.top/tags/%E8%AF%84%E6%B5%8B/"/>
    
    <category term="生活" scheme="https://cqlkc.top/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>一些奇怪的想法</title>
    <link href="https://cqlkc.top/posts/27613.html"/>
    <id>https://cqlkc.top/posts/27613.html</id>
    <published>2022-10-22T14:05:23.000Z</published>
    <updated>2023-09-16T12:43:59.374Z</updated>
    
    <content type="html"><![CDATA[<h1>写在开头</h1><p>​emmm…这个页面呢, 主要是用来记录一些平时脑子里突然产生的一些想法或者说问题 <s>(像什么上课走神的时候)</s></p><p>这些可能有简洁明了的答案, 但也有可能没有,  但我一定尽力去寻找并作一些分享吧</p><h1>Part1 摩擦起电的一些思考</h1><p>​物理很早以前就已经讲了摩擦起电了, 但是这个内容是在更深层次的化学知识学习之前讲的, 并且对具体原理并没有作要求。而我们在学习了更多化学知识后， 会发现有些内容是难以理解的</p><h2 id="课本原文的引发">课本原文的引发</h2><blockquote><p>两个物体互相摩擦时，因为不同物体的原子核束缚核外电子的本领不同，所以其中必定有一个物体失去一些电子，另一个物体得到多余的电子。</p></blockquote><p>​课本原文似乎在最初学习时是可以理解的, 但学过一点点化学后就不禁会有疑问:</p><ol><li><strong>许多物质是由分子构成的, 这些分子的&quot;对电子的束缚能力&quot;又跟什么有关</strong></li><li><strong>许多物质化学构成中各原子是保持着相对稳定结构的，而摩擦起电的电子得失不会打破这种相对稳定结构引起物质的不稳定吗</strong>（而我们又知道摩擦起电被认为是物理变化）</li></ol><h2 id="摩擦起电的电子得失问题">摩擦起电的电子得失问题</h2><h3 id="Generic-Electron-Cloud-Potential模型">Generic Electron-Cloud-Potential模型</h3><p>这里需要查询一下万能的维基百科 <a href="https://en.wikipedia.org/wiki/Triboelectric_effect#Sparks">摩擦电效应</a></p><blockquote><p>Although the part ‘tribo-’ comes from the Greek for “rubbing”, <em>τρίβω</em> (τριβή: friction), the two materials only need to come into contact for electrons to be exchanged. After coming into contact, a chemical bond is formed between parts of the two surfaces, called <a href="https://en.wikipedia.org/wiki/Adhesion">adhesion</a>, and charges move from one material to the other to equalize their <a href="https://en.wikipedia.org/wiki/Electrochemical_potential">electrochemical potential</a>. This is what creates the net charge imbalance between the objects. When separated, some of the bonded atoms have a tendency to keep extra electrons, and some a tendency to give them away, though the imbalance will be partially destroyed by <a href="https://en.wikipedia.org/wiki/Quantum_tunneling">tunneling</a> or <a href="https://en.wikipedia.org/wiki/Electrical_breakdown">electrical breakdown</a> (usually <a href="https://en.wikipedia.org/wiki/Corona_discharge">corona discharge</a>). In addition, some materials may exchange ions of differing mobility, or exchange charged fragments of larger molecules.</p></blockquote><blockquote><p>The triboelectric effect is related to <a href="https://en.wikipedia.org/wiki/Friction">friction</a> only because they both involve <a href="https://en.wikipedia.org/wiki/Adhesion">adhesion</a>. However, the effect is greatly enhanced by rubbing the materials together, as they touch and separate many times.[<a href="https://en.wikipedia.org/wiki/Triboelectric_effect#cite_note-DiazFelix-Navarro2004-17">17]</a></p></blockquote><blockquote><p>For surfaces with differing geometry, rubbing may also lead to heating of protrusions, causing <a href="https://en.wikipedia.org/wiki/Pyroelectricity">pyroelectric</a> charge separation which may add to the existing <a href="https://en.wikipedia.org/wiki/Contact_electrification">contact electrification</a>, or which may oppose the existing polarity. Surface nano-effects are not well understood, and the <a href="https://en.wikipedia.org/wiki/Atomic_force_microscope">atomic force microscope</a> has enabled rapid progress in this field of physics.</p></blockquote><p>维基百科大概的意思是说:</p><p>这里有一个解释一般的摩擦起电的模型被称为<strong>generic electron-cloud-potential模型</strong><img src="https://cdn.afdelivr.top/npm/cqlkc_img@1.0.14/img/Electron_cloud_model.webp" alt=""></p><p>讲的就是，两种材料制成的物质只需要紧密接触(并不一定需要摩擦) , 电子即可发生交换</p><p>。在<strong>低于原子平衡距离</strong>接触后，两个表面的部分之间通过<strong>电子云的重叠</strong>形成<strong>化学键</strong> (这里可以是共价键也可以是离子键)。</p><p>而施加的外力，可以进一步<strong>减小</strong>这两材料间两个原子间的距离（也就是键长），这种电子云的高度重叠降低两原子的<strong>能垒</strong>促使其发生电子的转移。</p><p>此时若使两原子分离(摩擦实际上就是不断接触又分离的过程)，转移后的电子就保留了下来，形成了静电荷。</p><hr><h3 id="理论后的思考">理论后的思考</h3><p>可以看到这个非常高大上的理论解释了为什么会有电子的转移，但这个并没有问答上面的问题</p><p>而且随着研究的深入， 问题的探究深度已经远远超出了我的预期</p><p>这里提供一篇大佬的相关论文 <a href="https://cdn.afdelivr.top/npm/cqlkc_assets@1.0.2/pdf/ce.pdf">On the Electron-Transfer Mechanism in the ContactElectrification Effect</a></p><p>说了这么多， 对于一般的题目来说只需要记住结论就可以了，千万不要想太多🤣</p><h1>Part2 未完待续</h1>]]></content>
    
    
    <summary type="html">记录那些离谱而有趣的想法</summary>
    
    
    
    <category term="胡扯区" scheme="https://cqlkc.top/categories/%E8%83%A1%E6%89%AF%E5%8C%BA/"/>
    
    
    <category term="奇思妙想" scheme="https://cqlkc.top/tags/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/"/>
    
    <category term="胡扯" scheme="https://cqlkc.top/tags/%E8%83%A1%E6%89%AF/"/>
    
  </entry>
  
  <entry>
    <title>电脑续命四年计划(2)-PE4010两个月使用体验</title>
    <link href="https://cqlkc.top/posts/36101.html"/>
    <id>https://cqlkc.top/posts/36101.html</id>
    <published>2022-10-15T16:12:05.000Z</published>
    <updated>2024-03-29T15:49:04.729Z</updated>
    
    <content type="html"><![CDATA[<h1>写在开头</h1><p>这个使用体验为什么被划进了四年计划里面?</p><p>实际上是因为这块海力士的PE4010是要顶掉挂掉的机械硬盘之前所扮演的角色:</p><ul><li>存游戏: 主盘480g, 实际可用容量不足300G, 用起来难受</li><li>存不重要文件: 毕竟还是块洋垃圾, 不敢装重要文件(</li></ul><hr><h1>使用体验</h1><h2 id="购入经历">购入经历</h2><p>这块盘是在2022年8月21号购入 (正好在短短的暑假第二阶段的开头)</p><p>之前, 这台电脑一直是 2TB机械 + 480G SATA固态的搭配</p><p>其中2TB机械自从2020年以后, 工作状态就极为令人担忧, 比如:</p><p>当你打开游戏与网友联机时, 突然机械硬盘处传来一阵&quot;滋滋&quot;的掉盘声, 这个时候轻则卡顿掉线, 重则蓝屏, 然后你的队友的屏幕上缓缓升起:</p><p><img src="https://cdn.jsdelivr.net/npm/cqlkc_img@1.0.10/img/ceo-exit.webp" alt="心 脏 骤 停"></p><p>接着就在等待机械硬盘令人捉急的加载时长中, 被网友们QQ轰炸吧(</p><p>所以当这个硬盘终于挂掉的时候, 我甚至发了条说说来庆祝o(*￣▽￣*)ブ5</p><p><img src="https://cdn.jsdelivr.net/npm/cqlkc_img@1.0.11/img/qq-zone-1.webp" alt="而我上次发说说已经是2018年了..."></p><p>当然机械硬盘上面所有的数据也是全部挂掉了(但是大多都是游戏)</p><p>原来的游戏还需要一块盘来储存, 购入一块新硬盘的需求就很明显了</p><p>经过一些考虑, 最终选择了新靠岸的大船货PE4010:<br><img src="https://cdn.jsdelivr.net/npm/cqlkc_img@1.0.9/img/pe4010-1.webp" alt="现在已经买不到了"></p><p>商家说这块盘的写入量10t-20t左右, 通电时间100h以下(是不是清零盘存疑)</p><p>不过据网上的说法, 这块盘采用的主控马牌88SS1093是不能清零的, 无论如何这个价格要什么自行车</p><p>而为什么就写了10t就从服务器流入了市场,网上传言的解释是：</p><blockquote><p>PSA PE4010 和 PE6110 有极为严重的品控问题，具体表现为因焊料和 PCB 选材问题，在相对不够干净的环境下会出现铜绿腐蚀穿 PCB 和 NAND 的情况<br>南方高湿度的气候会显著加速这个过程</p><p>且厂商无妥善解决方案</p></blockquote><hr><h2 id="实物">实物</h2><p><img src="https://cdn.jsdelivr.net/npm/cqlkc_img@1.0.10/img/DSC_0379.webp" alt="转接卡+散热片完全体"></p><p>而受限于X79的扩展性 (没有m.2 22110插槽, 也不支持NVME引导)</p><p>所以这块盘的定位就只能是从盘 (从盘性能比主盘好就离谱)</p><p>只能用pcie转接卡, 并且紧贴显卡这一大热源, 而这个马牌主控本身就有惊人的发热量(裸奔情况下温度能破90)</p><p><img src="https://cdn.jsdelivr.net/npm/cqlkc_img@1.0.10/img/DSC_0383.webp" alt="没对焦好的主控特写"></p><p>为此特地买了散热片专门给主控散热(还涂了一堆硅脂), 日常使用温度就不会撞温度墙了</p><h2 id="不严谨测试">不严谨测试</h2><p>话不多说, 先看一下基本信息</p><p><img src="https://cdn.jsdelivr.net/npm/cqlkc_img@1.0.10/img/a2.webp" alt="Diskinfo"></p><p>由于在此之前, 博主已经用了将近两个月了, 减去过后这个状况还是很令人满意的</p><p>再给它来一个测速:</p><p><img src="https://cdn.jsdelivr.net/npm/cqlkc_img@1.0.10/img/a3.webp" alt="不严谨测速"></p><p>性能表现实际上很一般, 不过已经比主盘TC10 480G和机械硬盘好太多了(已经知足了</p><p>作为对比, 我们来看一下TC10孱弱的性能表现</p><p><img src="https://cdn.jsdelivr.net/npm/cqlkc_img@1.0.12/img/tc10.webp" alt="不做功课乱买的下场"></p><hr><h1>总结</h1><p>海力士PE4010 960G这块盘在当时250元左右的时候是性价比最高的, 我上车的时候就已经算晚了</p><p>至于现在960G 固态仓库盘的选择肯定不会推荐PE4010了</p><p>一是它的2字头价格已经一去不复返了, 二是它缺乏保障的稳定性</p><p>现在一般推荐加个几十上 pdd 的 SN350 1TB, 保修什么的都是实打实的, 而且性能作为仓库盘也足够了</p><h1>2023-08更新</h1><p>这下成大怨种了，现在2t的全新全速3.0固态盘也才400<img src="00F3ED01.png" alt="Alt text"></p>]]></content>
    
    
    <summary type="html">PE4010</summary>
    
    
    
    <category term="电脑续命四年计划" scheme="https://cqlkc.top/categories/%E7%94%B5%E8%84%91%E7%BB%AD%E5%91%BD%E5%9B%9B%E5%B9%B4%E8%AE%A1%E5%88%92/"/>
    
    
    <category term="电脑" scheme="https://cqlkc.top/tags/%E7%94%B5%E8%84%91/"/>
    
    <category term="评测" scheme="https://cqlkc.top/tags/%E8%AF%84%E6%B5%8B/"/>
    
    <category term="生活" scheme="https://cqlkc.top/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>电脑续命四年计划(0)-电脑情况概述</title>
    <link href="https://cqlkc.top/posts/26610.html"/>
    <id>https://cqlkc.top/posts/26610.html</id>
    <published>2022-10-15T10:17:43.000Z</published>
    <updated>2024-03-29T15:49:06.102Z</updated>
    
    <content type="html"><![CDATA[<h1>写在开头</h1><p>不知不觉, 手上这台电脑也已经服役将近6年(2017年1月购入并组装) 但是这台电脑目前的性能和工作状况一言难尽</p><p>且目前来看, 估计一直到高考结束(这期间有4年,故得名&quot;四年计划&quot;), 这台电脑都不可能有更新主要配件的机会</p><p>所以，保证这台电脑正常工作就显得至关重要</p><h1>配置概览</h1><h2 id="简单介绍">简单介绍</h2><p>先上图<br><img src="https://cdn.jsdelivr.net/npm/cqlkc_img@1.0.5/img/a5.webp" alt=""></p><p>可以看到这套配置就一纯种洋垃圾配置, 几乎包含了洋垃圾的全部要素:</p><ul><li>E5-1620v2 服务器cpu, 差不多是i7-3770的马甲(不过价格低很多</li><li>HUANAN X79 华南的寨板, 不过这块X79是用的原生X79南桥, 不是用B75魔改的(质量还不错?</li><li>4GB REG ECC DDR3 1333MHz *4  三星的服务器内存, 由于家用主板用不了recc所以价格相当的便宜</li><li>海力士PE4010 960G(HFS9600GD0TEG) 也是捡的服务器SSD</li><li>恺侠tc10 480G 这个属于是没做功课, pdd上随便乱买的, 性价比一般</li></ul><p>至于为什么要配这样一套配置，就得把时间拉回2017年1月了…(发现自己竟然这么早就在搞这个东西)</p><h2 id="为什么不换平台？">为什么不换平台？</h2><p>​你可能会说，怎么2202年了还搁着用X79呢？12代i3什么的不比这个老掉牙的E5香的多？</p><p>实际上，目前如果购入一套新平台的话，没有1000+预算根本拿不下来。（现有所有零件基本均不适配</p><p>并且目前X79的相关二手价格奇低无比（4g内存条价格可能还不够出运费</p><p>奇低的二手价格导致了换平台的高成本，但是如果换一个思路想：</p><p>​那它是不是也降低了我的<strong>升级成本</strong>呢？</p><p>答案是很显然的，目前情况如下：</p><ul><li>16g 1866recc单条只要50（64g内存指日可待？！</li><li>e5-2667v2单价200 （而e5-1620v2二手还能卖100</li></ul><p>所以短期来看，低投入的小修小补应该是最优解</p><h2 id="背景原因">背景原因</h2><p>在2017年的时候, AMD的锐龙系列还没有发售, 推土机之类的模块化架构IPC一言难尽</p><p>家用平台基本只能用intel的酷睿系列</p><p>由于缺乏竞争, 这个板u一套的价格嘛就一言难尽了</p><p>最为重要的是, 2017年内存市场的爆炸(感谢生产线火灾的馈赠</p><p><img src="https://cdn.jsdelivr.net/npm/cqlkc_img@1.0.6/img/memory-increasing-price.webp" alt="内存价格飙升"></p><p>但是随着一批批大船的靠岸, 大量被称为&quot;洋垃圾&quot;的淘汰服务器配件涌入国内市场, 包括但不限于:</p><ul><li>服务器内存(REGECC)</li><li>服务器主板(X79等)</li><li>服务器CPU(E5/E3等)</li><li>…</li></ul><p>博主当时选择的是e5-2670 , 8C16T 花了约420性价比还是很足的(一个缺点是单核性能较为拉跨)</p><p>4*4G REGECC也是相当的便宜,一根估计也就几十块钱(而且有4通道加成)</p><p>还有显卡用的是GTX780Ti   不过后来换成了RX480, 下篇文章有讲</p><h2 id="一些小插曲">一些小插曲</h2><p>不过便宜也有代价， 当时电脑最开始组装好后出现了一个致命问题困扰了我好几个月（且十分难以排查</p><p>这里描述一下现象，看一下你能不能猜出来是什么问题:</p><ul><li>CPU正常鲁大师(均为旧版)跑分应为11.9w，结果实际只有9w</li><li>GPU正常鲁大师跑分应为18.9w，结果只有11w</li><li>游戏内帧数如GTA5只有个位数FPS，MC表现要好一些(至少能上60fps)</li><li>游戏内GPU和CPU都跑不满，既没有爆内存也没有爆显存</li></ul><p>揭秘：有一根<strong>内存条</strong>有问题，他处于一个半正常工作状态(能点亮过自检，但有问题)</p><p>这是在某次开机的时候，这个内存条直接开摆连自检都过不了，我就随便拿了两根家用内存条去测试</p><p>结果开机后跑分时发现：跑分又<strong>恢复正常了?!</strong></p><p>可以直接断定内存条有问题，直接换下来即可（不过这个问题时隔5年又复发了，但我已经有经验也不就慌了…</p><h1>运行现状</h1><h2 id="一张图就能说明一切">一张图就能说明一切</h2><p><img src="https://cdn.jsdelivr.net/npm/cqlkc_img@1.0.7/img/DSC_0385.webp" alt="机箱侧面图"></p><p><strong>要素盘点:</strong></p><ul><li>缺乏安全感的水冷(水冷:从入门到索赔无门)</li><li>敞开体系运行(大号吸尘器)</li><li>灵 魂 走 线(哪天开不了机了记得看一下跳线是不是松了)</li><li>装饰兼玩具用光驱(没接SATA数据线,只连了电源线,等开机的时候按着玩…)</li><li>没有螺丝固定的风扇和固态(丑)</li><li>连接不全的跳线(只连了开机和重启跳线)</li></ul><p>以这个运行状况, 这电脑能用5年就已经是奇迹了(逃</p><h1>升级计划</h1><ul><li>[x] 把CPU换成E5-2667v2(4核e5打战地太捉急了)</li><li>[ ] 换下令人缺乏安全感的120水冷(已经过了质保期了…)</li><li>[x] 整理一下走线</li><li>[ ] …</li></ul>]]></content>
    
    
    <summary type="html">努力给电脑续续命</summary>
    
    
    
    <category term="电脑续命四年计划" scheme="https://cqlkc.top/categories/%E7%94%B5%E8%84%91%E7%BB%AD%E5%91%BD%E5%9B%9B%E5%B9%B4%E8%AE%A1%E5%88%92/"/>
    
    
    <category term="电脑" scheme="https://cqlkc.top/tags/%E7%94%B5%E8%84%91/"/>
    
    <category term="生活" scheme="https://cqlkc.top/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>电脑续命四年计划(1)-给老显卡改善一下散热条件</title>
    <link href="https://cqlkc.top/posts/23205.html"/>
    <id>https://cqlkc.top/posts/23205.html</id>
    <published>2022-10-15T09:47:54.000Z</published>
    <updated>2024-06-01T14:31:45.298Z</updated>
    
    <content type="html"><![CDATA[<h1>写在开头</h1><h2 id="为什么要换成RX484">为什么要换成RX484</h2><p>不知不觉，电脑上的这块RX480 4G也用了快5年了 <s>(能用5年就是奇迹)</s></p><p>实际上这台电脑最开始用的不是RX484, 最开始是用的老卡皇gtx780ti 3G</p><p>这gtx780ti呢, 给人最显著的感受就是: <strong>这功耗真的大啊！！</strong></p><p>为此电源是直接给到了额定700W, 用是可以用了, 但是老开普勒架构的表现也是不尽如人意:</p><ul><li>功耗问题：游戏时可以达到300W的功耗，这电费和温度谁顶得住</li><li>优化问题: 老架构对新游戏支持不够好</li></ul><h2 id="换了RX484后的表现">换了RX484后的表现</h2><p>综合了一些考虑以后， 果断在咸鱼上面卖掉换了RX484(并小赚几百)</p><p>至于RX484, 一看它的参数:</p><ul><li>功耗只有100W</li><li>有14nm制程加持(<s>想必这温度表现一定很好吧!</s>)</li></ul><p>结果这块RX484温度表现更为惊人, 正常游戏中就可以跑到780ti都难以企及的80度以上</p><p>权宜之计就是机箱不关侧盖，结果就是变身吸尘器+电热炉</p><p>这样一直用到了2021年…</p><p>到了2021年的时候, 大家都知道又一轮大规模的矿潮来了, 一时间各平台的显卡价格飞涨</p><p>甚至包括RX480 4G这块挖不了ETH的老兵, 当时挂咸鱼上时价格直接给到了2000元</p><p>但是由于我当时沉迷于游戏之中, 确实不愿意将显卡出手(谁知道什么时候矿难呢?</p><p>结果, 过了一周显卡价格直接跳水, 再过一两个月2000元就能买到新的丐版RX6600XT了</p><p>(追悔莫及中…😂)</p><hr><p>不过既然当时没有抛弃它, 未来也很难有机会甩掉它了</p><p>所以,我们的目标肯定不是只用5年就结束了, 既然叫四年计划目标就是尽量让它再战四年, (<s>让高中还能继续打游戏</s>)</p><hr><h1>第一阶段: 换硅脂</h1><p>简简单单换个硅脂, 毕竟干其他的, 我条件也有限。</p><p>现在用的硅脂是估计一年前左右买的便宜大碗的高导GD007(几块钱就有十多克), 对比一下7921甚至TFX, 这个性价比简直不能太高</p><p>但是这种便宜的硅脂一个很大的问题就是寿命有限, 越到后面这散热性能就越令人捉急</p><h2 id="初始表现">初始表现</h2><pre><code>测试条件: 敞开体系, 室温19℃</code></pre><p>驱动日用设置参数如图<br><img src="https://cdn.jsdelivr.net/npm/cqlkc_img@1.0.5/img/a6.webp" alt="驱动参数"></p><p>为了对比, 先跑一个甜甜圈看一下GD007的表现<br><img src="https://cdn.jsdelivr.net/npm/cqlkc_img@1.0.4/img/a1.webp" alt="直逼80度的骇人散热"><br><img src="https://cdn.jsdelivr.net/npm/cqlkc_img@1.0.4/img/a7.webp" alt="直逼112A的骇人电流"></p><p>可以看到核心温度基本稳定在79度, 功耗107W左右, 我就很疑惑这真的能用4年吗</p><h2 id="更换硅脂">更换硅脂</h2><p>先拆下这块久经沙场的RX480<br><img src="https://cdn.jsdelivr.net/npm/cqlkc_img@1.0.5/img/DSC_0377.webp" alt="黑狼丐中丐"></p><p>拧掉背板上的几颗螺丝后，就看见PCB板真面目了<br><img src="https://cdn.jsdelivr.net/npm/cqlkc_img@1.0.5/img/DSC_0378.webp" alt="PCB局部图"></p><p>把核心上原有的硅脂擦干净以后</p><p>(忽视旁边溢出的硅脂和有些焦黄的显存，这个核心还是很好看的</p><p>挤上硅脂7921, 插电正常亮机</p><h2 id="7921的表现">7921的表现</h2><p>保持显卡驱动设置不变再跑一次</p><p><img src="https://cdn.jsdelivr.net/npm/cqlkc_img@1.0.5/img/a4.webp" alt="7921的表现"></p><p>emmmmmm…这个好像并没有什么变化啊</p><p>不过核心我们一般认为还是很耐艹的, 76度也问题不大(麻痹自己中…)</p><h1>第二阶段: 降压但不超频</h1><h2 id="微调电压">微调电压</h2><h3 id="为什么">为什么?</h3><p>我们知道很多玩家拿到显卡后, 最喜欢做的就是看下显卡的体质来波降压超频(甚至是加压超频)</p><p>根据半导体芯片的功耗公式: (a,b对于同一芯片为常量,F指频率)</p><p>$$ P=a<em>b</em>F*U^2 $$</p><p>可以看到电压在其中是二次项, 调整电压的大小对于功耗来说有举足轻重的作用(再辅以降频)<br>可以达到降低功耗进而 (<s>践行低碳生活</s>) 降低散热压力</p><h3 id="实际操作">实际操作</h3><p>实际操作起来就是一点点地去降低电压, 比如:</p><p>我设置1150mV能过压测,我设置1130mV也能过压测,我设置1101mV还能过压测</p><p>但是如果跳到1100mV显卡终于绷不住了,那你就成功地把握住了显卡的底线1101mV(大雾)</p><p>不过并不建议就把电压设置为1101mV, 在低负载的时候可能会出问题…</p><p>这里是我自己测好的最优电压状态<br><img src="https://cdn.jsdelivr.net/npm/cqlkc_img@1.0.8/img/test1.webp" alt=""></p><h2 id="风扇策略">风扇策略</h2><p>这个的话就不展开了, 风扇策略实际上是取决于使用者本身的底线(对噪音的忍耐程度)</p><p>不过我都把机箱侧盖扔了, 噪音什么的也不在乎, 直接往上拉就行了</p><h1>第三阶段:未完待续</h1><h1>To Do List:</h1><ul><li>[ ] 给裸露的显存加一下散热片</li><li>[ ] 给mos管加导热垫</li></ul>]]></content>
    
    
    <summary type="html">给老显卡降降温</summary>
    
    
    
    <category term="电脑续命四年计划" scheme="https://cqlkc.top/categories/%E7%94%B5%E8%84%91%E7%BB%AD%E5%91%BD%E5%9B%9B%E5%B9%B4%E8%AE%A1%E5%88%92/"/>
    
    
    <category term="电脑" scheme="https://cqlkc.top/tags/%E7%94%B5%E8%84%91/"/>
    
    <category term="生活" scheme="https://cqlkc.top/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://cqlkc.top/posts/4a17b156.html"/>
    <id>https://cqlkc.top/posts/4a17b156.html</id>
    <published>2022-10-01T16:00:00.000Z</published>
    <updated>2023-09-16T12:43:59.373Z</updated>
    
    <content type="html"><![CDATA[<h1>不弃坑，坚持写</h1><p>本站从10月2日也就正式启用了，希望用这个官方生成的helloworld来作为纪念吧。</p><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start">Quick Start</h2><h3 id="Create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">梦开始的地方</summary>
    
    
    
    
  </entry>
  
</feed>
