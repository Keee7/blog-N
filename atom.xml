<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>怪诞的小站</title>
  
  <subtitle>开心就好。</subtitle>
  <link href="https://blog.keee.top/atom.xml" rel="self"/>
  
  <link href="https://blog.keee.top/"/>
  <updated>2025-09-27T14:55:56.000Z</updated>
  <id>https://blog.keee.top/</id>
  
  <author>
    <name>Keee</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>早课太困，咖啡续命</title>
    <link href="https://blog.keee.top/posts/50562.html"/>
    <id>https://blog.keee.top/posts/50562.html</id>
    <published>2025-07-05T21:08:19.000Z</published>
    <updated>2025-09-27T14:55:56.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="困😴"><a href="#困😴" class="headerlink" title="困😴"></a>困😴</h1><p>最近博主已经高三了，晚上作息调整为11点20熄灯，但是由于博主睡眠的前摇比较长，每次睡着可能都已经11点50左右了而第二天早上6点30分亮灯，因此每天下来的夜间睡眠时长平均只有6.5h左右。但是早上起床的时候并没有很困，甚至可以说很清醒，但到了教室，早读一结束，就真的恹恹欲睡。不是说睁不开眼的那种困，而是那种整个人很昏沉的困，如果第一二节是语文那更是雪上加霜，大脑可能直接彻底宕机，一方面听课效率很低，另一方面对我的意志力也是一个不小的挑战。</p><h1 id="咖啡续命"><a href="#咖啡续命" class="headerlink" title="咖啡续命"></a>咖啡续命</h1><p>此前很长一段时间尝试过用薄荷糖来提神，但是薄荷糖的作用效果真的太短了，而且个人感觉有点分神。嘴巴里面含着薄荷糖感觉精力也会受到一定的牵扯。于是我把目光转向了咖啡因。</p><h2 id="三顿半快饮系列（mix）"><a href="#三顿半快饮系列（mix）" class="headerlink" title="三顿半快饮系列（mix）"></a>三顿半快饮系列（mix）</h2><p>选择的第一款咖啡是<strong>三顿半的快饮系列</strong>。三顿半在速溶咖啡行业可谓是鼎鼎有名，一直宣传的是“精品咖啡”，价格一点也不便宜，即便打折下来也是<strong>3元&#x2F;颗</strong>。因此，我选择先买它，尝尝速溶咖啡的天花板，方便我后续评判其他的速溶咖啡。</p><p>先说优点，首先是超细的咖啡粉，溶解性很好，冷水也能轻松泡开；而且咖啡粉是一颗一颗的，每颗2g，很好控制量也不容易坏掉。其次咖啡香气很浓，这点给人的印象很好。</p><p>但是我个人还是不太喜欢，原因可能就在于它太“精品”了。首先是价格太贵，不适合天天喝，其次太过有特点的咖啡风味（苦&#x2F;酸），其实不太符合我个人的喜好。</p><p><strong>结论</strong>：贵，有咖啡香气，但拿铁风味有点苦，美式风味有点酸，属于特点分明的那类</p><h2 id="雀巢金标深烘"><a href="#雀巢金标深烘" class="headerlink" title="雀巢金标深烘"></a>雀巢金标深烘</h2><p>这是一款冻干咖啡，感觉比咖啡粉可能要高级一点，但是溶解性可能会稍逊一些（冷水条件下）。博主亲测的话，用冷牛奶大概率是泡不开的，第一口会明显比剩下的浓郁很多。</p><p>博主买成25元&#x2F;75g，价格上比三顿半便宜很多，风味的话不苦也不酸，有一股淡淡的咖啡香气。但我说实话确实有些太淡了，兑了牛奶以后就像在喝咖啡味牛奶一样，喝完回味的甚至都是甜味（但我实际一勺糖也没放）</p><p>但雀巢口碑更好的实际上是它的金牌系列，包括瑞士进口，日本进口等。所以我下一瓶冻干咖啡大概会选择雀巢的金牌（100%阿拉卡比咖啡豆那款），等喝完这瓶金标我就下单（顺便把图片补了doge）</p><h1 id="两难"><a href="#两难" class="headerlink" title="两难"></a>两难</h1><p>我喝咖啡本来是为了解困，但是早上喝咖啡并不能让我的早课清醒，但会让我睡不着午觉，反而影响一整天的状态。但是完全不喝咖啡吧，上午第二三节课真的会睡着…喝了吧，午觉睡不着，又很难受…</p><p>看来最好的办法应该是多睡觉，但如果我能多睡会儿的话也没咖啡的事了。</p>]]></content>
    
    
    <summary type="html">一直喜欢在周末点瑞幸，但这次开始周中也自己泡黑咖续命</summary>
    
    
    
    <category term="日常" scheme="https://blog.keee.top/categories/%E6%97%A5%E5%B8%B8/"/>
    
    
    <category term="咖啡" scheme="https://blog.keee.top/tags/%E5%92%96%E5%95%A1/"/>
    
    <category term="学习" scheme="https://blog.keee.top/tags/%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>如何在诺基亚上愉快的使用DeepSeek</title>
    <link href="https://blog.keee.top/posts/250913.html"/>
    <id>https://blog.keee.top/posts/250913.html</id>
    <published>2025-04-23T10:58:00.000Z</published>
    <updated>2025-09-13T14:21:48.000Z</updated>
    
    <content type="html"><![CDATA[<p>由于nokia的浏览器只能访问静态网页，无法加载js，所以我们用Cloudflare worker代理向api发送请求，再渲染为静态页面返回给浏览器即可。</p><p>下面是Cloudflare worker的代码实现。<br>注意要绑定KV，名字为CACHE，你也可以自己更改</p><p>注：</p><ol><li>可能存在部分网络情况下无法访问Cloudflare的情况，对此我的办法是走vercel反代，当然会有1min限时的问题但我也没想出别的办法。</li><li>连续对话功能没有实现，以后再做吧</li><li>deepseek可能会花过多时间思考，导致请求超时。这属于是硬伤，可能只有换成别的轻量模型会好点</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="variable constant_">CACHE_TTL</span> = <span class="number">864000</span>; <span class="comment">// 缓存有效期24小时（单位：秒）</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createHTML</span>(<span class="params">title, content</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="string">`&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="string">&lt;html&gt;</span></span><br><span class="line"><span class="string">&lt;head&gt;</span></span><br><span class="line"><span class="string">  &lt;title&gt;<span class="subst">$&#123;title&#125;</span>&lt;/title&gt;</span></span><br><span class="line"><span class="string">  &lt;meta charset=&quot;UTF-8&quot;&gt;</span></span><br><span class="line"><span class="string">  &lt;style&gt;</span></span><br><span class="line"><span class="string">    body &#123; </span></span><br><span class="line"><span class="string">      font-family: -apple-system, system-ui, sans-serif;</span></span><br><span class="line"><span class="string">      max-width: 800px;</span></span><br><span class="line"><span class="string">      margin: 1rem auto;</span></span><br><span class="line"><span class="string">      padding: 0 1rem;</span></span><br><span class="line"><span class="string">      line-height: 1.5</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    .box &#123; </span></span><br><span class="line"><span class="string">      background: #f8f9fa;</span></span><br><span class="line"><span class="string">      padding: 1rem;</span></span><br><span class="line"><span class="string">      margin: 1rem 0;</span></span><br><span class="line"><span class="string">      border-radius: 4px;</span></span><br><span class="line"><span class="string">      border: 1px solid #dee2e6</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">    .cache-link &#123; </span></span><br><span class="line"><span class="string">      color: #0d6efd;</span></span><br><span class="line"><span class="string">      word-break: break-all</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string">  &lt;/style&gt;</span></span><br><span class="line"><span class="string">&lt;/head&gt;</span></span><br><span class="line"><span class="string">&lt;body&gt;</span></span><br><span class="line"><span class="string">  <span class="subst">$&#123;content&#125;</span></span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;`</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 转义HTML特殊字符</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">escapeHTML</span>(<span class="params">str</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> str.<span class="title function_">replace</span>(<span class="regexp">/[&amp;&lt;&gt;&quot;&#x27;]/g</span>, <span class="function"><span class="params">m</span> =&gt;</span> </span><br><span class="line">    (&#123; <span class="string">&#x27;&amp;&#x27;</span>: <span class="string">&#x27;&amp;amp;&#x27;</span>, <span class="string">&#x27;&lt;&#x27;</span>: <span class="string">&#x27;&amp;lt;&#x27;</span>, <span class="string">&#x27;&gt;&#x27;</span>: <span class="string">&#x27;&amp;gt;&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>: <span class="string">&#x27;&amp;quot;&#x27;</span>, <span class="string">&quot;&#x27;&quot;</span>: <span class="string">&#x27;&amp;#39;&#x27;</span> &#125;)[m]</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* * * * * * * * * * * *</span></span><br><span class="line"><span class="comment"> *  micromarkdown .js  *</span></span><br><span class="line"><span class="comment"> *    Version 0.3.4    *</span></span><br><span class="line"><span class="comment"> *    License:  MIT    *</span></span><br><span class="line"><span class="comment"> *   Simon  Waldherr   *</span></span><br><span class="line"><span class="comment"> * * * * * * * * * * * */</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">markdownToHtml</span>(<span class="params">markdown</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> lines = markdown.<span class="title function_">split</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">  <span class="keyword">let</span> html = [];</span><br><span class="line">  <span class="keyword">let</span> inList = <span class="literal">false</span>;</span><br><span class="line">  <span class="keyword">let</span> currentParagraph = [];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">flushParagraph</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (currentParagraph.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      html.<span class="title function_">push</span>(<span class="string">`&lt;p&gt;<span class="subst">$&#123;processInline(currentParagraph.join(<span class="string">&#x27;&lt;br&gt;&#x27;</span>))&#125;</span>&lt;/p&gt;`</span>);</span><br><span class="line">      currentParagraph = [];</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">flushList</span> = (<span class="params"></span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">if</span> (inList) &#123;</span><br><span class="line">      html.<span class="title function_">push</span>(<span class="string">&#x27;&lt;/ul&gt;&#x27;</span>);</span><br><span class="line">      inList = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> <span class="title function_">processInline</span> = (<span class="params">text</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> text</span><br><span class="line">      .<span class="title function_">replace</span>(<span class="regexp">/!\[([^\]]*)\]\(([^)]+)\)/g</span>, <span class="string">&#x27;&lt;img src=&quot;$2&quot; alt=&quot;$1&quot;&gt;&#x27;</span>)</span><br><span class="line">      .<span class="title function_">replace</span>(<span class="regexp">/\[([^\]]+)\]\(([^)]+)\)/g</span>, <span class="string">&#x27;&lt;a href=&quot;$2&quot;&gt;$1&lt;/a&gt;&#x27;</span>)</span><br><span class="line">      .<span class="title function_">replace</span>(<span class="regexp">/\*\*(.*?)\*\*/g</span>, <span class="string">&#x27;&lt;strong&gt;$1&lt;/strong&gt;&#x27;</span>)</span><br><span class="line">      .<span class="title function_">replace</span>(<span class="regexp">/\*(.*?)\*/g</span>, <span class="string">&#x27;&lt;em&gt;$1&lt;/em&gt;&#x27;</span>);</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> line <span class="keyword">of</span> lines) &#123;</span><br><span class="line">    <span class="comment">// 处理标题</span></span><br><span class="line">    <span class="keyword">const</span> headingMatch = line.<span class="title function_">match</span>(<span class="regexp">/^(#+)\s+(.*)/</span>);</span><br><span class="line">    <span class="keyword">if</span> (headingMatch) &#123;</span><br><span class="line">      <span class="title function_">flushParagraph</span>();</span><br><span class="line">      <span class="title function_">flushList</span>();</span><br><span class="line">      <span class="keyword">const</span> level = <span class="title class_">Math</span>.<span class="title function_">min</span>(headingMatch[<span class="number">1</span>].<span class="property">length</span>, <span class="number">6</span>);</span><br><span class="line">      html.<span class="title function_">push</span>(<span class="string">`&lt;h<span class="subst">$&#123;level&#125;</span>&gt;<span class="subst">$&#123;processInline(headingMatch[<span class="number">2</span>])&#125;</span>&lt;/h<span class="subst">$&#123;level&#125;</span>&gt;`</span>);</span><br><span class="line">      <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 处理列表</span></span><br><span class="line">    <span class="keyword">const</span> listItemMatch = line.<span class="title function_">match</span>(<span class="regexp">/^[*\-]\s+(.*)/</span>);</span><br><span class="line">    <span class="keyword">if</span> (listItemMatch) &#123;</span><br><span class="line">      <span class="title function_">flushParagraph</span>();</span><br><span class="line">      <span class="keyword">if</span> (!inList) &#123;</span><br><span class="line">        html.<span class="title function_">push</span>(<span class="string">&#x27;&lt;ul&gt;&#x27;</span>);</span><br><span class="line">        inList = <span class="literal">true</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      html.<span class="title function_">push</span>(<span class="string">`&lt;li&gt;<span class="subst">$&#123;processInline(listItemMatch[<span class="number">1</span>])&#125;</span>&lt;/li&gt;`</span>);</span><br><span class="line">      <span class="keyword">continue</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (inList) &#123;</span><br><span class="line">      <span class="title function_">flushList</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 处理空行</span></span><br><span class="line">    <span class="keyword">if</span> (line.<span class="title function_">trim</span>() === <span class="string">&#x27;&#x27;</span>) &#123;</span><br><span class="line">      <span class="title function_">flushParagraph</span>();</span><br><span class="line">      <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 收集段落内容</span></span><br><span class="line">    currentParagraph.<span class="title function_">push</span>(line.<span class="title function_">trim</span>());</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 处理剩余内容</span></span><br><span class="line">  <span class="title function_">flushParagraph</span>();</span><br><span class="line">  <span class="title function_">flushList</span>();</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> html.<span class="title function_">join</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* /micromarkdown */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">handleRequest</span>(<span class="params">request,env</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> url = <span class="keyword">new</span> <span class="title function_">URL</span>(request.<span class="property">url</span>);</span><br><span class="line">  <span class="keyword">const</span> params = url.<span class="property">searchParams</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 优先检查缓存请求</span></span><br><span class="line">  <span class="keyword">const</span> id = params.<span class="title function_">get</span>(<span class="string">&#x27;id&#x27;</span>);</span><br><span class="line">  <span class="keyword">let</span> cacheId = params.<span class="title function_">get</span>(<span class="string">&#x27;cache_id&#x27;</span>);</span><br><span class="line">  <span class="keyword">if</span> (cacheId) &#123;</span><br><span class="line">    <span class="keyword">const</span> cachedData = <span class="keyword">await</span> env.<span class="property">CACHE</span>.<span class="title function_">get</span>(cacheId);</span><br><span class="line">    <span class="keyword">if</span> (cachedData) &#123;</span><br><span class="line">      <span class="keyword">const</span> &#123; question, convertedAnswer &#125; = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(cachedData);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="title function_">createHTML</span>(</span><br><span class="line">        <span class="string">`缓存内容 #<span class="subst">$&#123;cacheId&#125;</span>`</span>,</span><br><span class="line">        <span class="string">`&lt;h1&gt;缓存内容&lt;/h1&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;box&quot;&gt;</span></span><br><span class="line"><span class="string">          &lt;h3&gt;原始问题：&lt;/h3&gt;</span></span><br><span class="line"><span class="string">          &lt;div&gt;<span class="subst">$&#123;question&#125;</span>&lt;/div&gt;</span></span><br><span class="line"><span class="string">          &lt;h3&gt;AI回复：&lt;/h3&gt;</span></span><br><span class="line"><span class="string">          &lt;div&gt;<span class="subst">$&#123;convertedAnswer&#125;</span>&lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;p&gt;&lt;a href=&quot;<span class="subst">$&#123;url.origin&#125;</span>&quot;&gt;返回新提问&lt;/a&gt;&lt;/p&gt;`</span></span><br><span class="line">      ), &#123; <span class="attr">headers</span>: &#123; <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/html&#x27;</span> &#125; &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="title function_">createHTML</span>(</span><br><span class="line">      <span class="string">&#x27;缓存不存在&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;&lt;h1&gt;缓存不存在或已过期&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;/&quot;&gt;返回&lt;/a&gt;&lt;/p&gt;&#x27;</span></span><br><span class="line">    ), &#123; <span class="attr">status</span>: <span class="number">404</span>, <span class="attr">headers</span>: &#123; <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/html&#x27;</span> &#125; &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (id) &#123;</span><br><span class="line">    cacheId = id;</span><br><span class="line">    <span class="keyword">const</span> cachedData = <span class="keyword">await</span> env.<span class="property">CACHE</span>.<span class="title function_">get</span>(cacheId);</span><br><span class="line">    <span class="keyword">if</span> (cachedData) &#123;</span><br><span class="line">      <span class="keyword">const</span> &#123; question, convertedAnswer &#125; = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(cachedData);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="title function_">createHTML</span>(</span><br><span class="line">        <span class="string">`#<span class="subst">$&#123;cacheId&#125;</span> <span class="subst">$&#123;question&#125;</span>`</span>,</span><br><span class="line">        <span class="string">`&lt;h1&gt;缓存内容&lt;/h1&gt;</span></span><br><span class="line"><span class="string">        &lt;div class=&quot;box&quot;&gt;</span></span><br><span class="line"><span class="string">          &lt;h3&gt;原始问题：&lt;/h3&gt;</span></span><br><span class="line"><span class="string">          &lt;div&gt;<span class="subst">$&#123;question&#125;</span>&lt;/div&gt;</span></span><br><span class="line"><span class="string">          &lt;h3&gt;AI回复：&lt;/h3&gt;</span></span><br><span class="line"><span class="string">          &lt;div&gt;<span class="subst">$&#123;convertedAnswer&#125;</span>&lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;p&gt;&lt;a href=&quot;<span class="subst">$&#123;url.origin&#125;</span>&quot;&gt;返回新提问&lt;/a&gt;&lt;/p&gt;`</span></span><br><span class="line">      ), &#123; <span class="attr">headers</span>: &#123; <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/html&#x27;</span> &#125; &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// 处理新请求</span></span><br><span class="line">  <span class="keyword">const</span> question = params.<span class="title function_">get</span>(<span class="string">&#x27;content&#x27;</span>);</span><br><span class="line">  <span class="keyword">if</span> (!question) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="title function_">createHTML</span>(<span class="string">&#x27;JavaScript-free DeepSeek&#x27;</span>,<span class="string">&#x27;&lt;h2&gt;我是 DeepSeek-R1，不该问的别问&lt;/h2&gt;&lt;p&gt;我有可能可以帮你写代码、读文件、写作各种创意内容，请把你的任务交给我吧~&lt;/p&gt;&lt;p&gt;提示：上为content，下为id，注意区分&lt;/p&gt;&lt;form method=&quot;GET&quot; action=&quot;/&quot;&gt;&lt;input type=&quot;text&quot; name=&quot;content&quot; placeholder=&quot;向 DeepSeek-R1 询问任何问题&quot;&gt;&lt;input type=&quot;text&quot; name=&quot;id&quot; placeholder=&quot;请输入ID&quot;&gt;&lt;button type=&quot;submit&quot;&gt;发送&lt;/button&gt;&lt;/form&gt;&lt;p&gt;Created by Keee&lt;/p&gt;&#x27;</span>), &#123; <span class="attr">status</span>: <span class="number">400</span>, <span class="attr">headers</span>: &#123; <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/html&#x27;</span> &#125; &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 调用OpenAI API</span></span><br><span class="line">    <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">&#x27;https://integrate.api.nvidia.com/v1/chat/completions&#x27;</span>, &#123;</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">      <span class="attr">headers</span>: &#123;</span><br><span class="line">        <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;Authorization&#x27;</span>: <span class="string">`Bearer ***`</span></span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">body</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123;</span><br><span class="line">        <span class="attr">model</span>: <span class="string">&quot;deepseek-ai/deepseek-r1&quot;</span>,</span><br><span class="line">        <span class="attr">messages</span>: [&#123; <span class="attr">role</span>: <span class="string">&quot;user&quot;</span>, <span class="attr">content</span>: question &#125;],</span><br><span class="line">        <span class="attr">temperature</span>:<span class="number">0.6</span>,</span><br><span class="line">        <span class="attr">top_p</span>:<span class="number">0.7</span>,</span><br><span class="line">        <span class="attr">stream</span>:<span class="literal">false</span></span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> data = <span class="keyword">await</span> response.<span class="title function_">json</span>();</span><br><span class="line">    <span class="keyword">const</span> answer = data.<span class="property">choices</span>[<span class="number">0</span>].<span class="property">message</span>.<span class="property">content</span>;</span><br><span class="line">    <span class="keyword">const</span> convertedAnswer = <span class="title function_">markdownToHtml</span>(answer);</span><br><span class="line">    <span class="comment">// 生成缓存ID并存储</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">let</span> cacheId = <span class="title class_">Date</span>.<span class="title function_">now</span>().<span class="title function_">toString</span>(<span class="number">36</span>) + <span class="title class_">Math</span>.<span class="title function_">random</span>().<span class="title function_">toString</span>(<span class="number">36</span>).<span class="title function_">substr</span>(<span class="number">2</span>, <span class="number">5</span>)</span><br><span class="line">    <span class="keyword">if</span>(id) cacheId = id</span><br><span class="line">    <span class="keyword">await</span> env.<span class="property">CACHE</span>.<span class="title function_">put</span>(cacheId, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; question, convertedAnswer &#125;), &#123;</span><br><span class="line">      <span class="attr">expirationTtl</span>: <span class="variable constant_">CACHE_TTL</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="title function_">createHTML</span>(</span><br><span class="line">      question,</span><br><span class="line">      <span class="string">`&lt;h1&gt;Deepseek-R1&lt;/h1&gt;</span></span><br><span class="line"><span class="string">      &lt;div class=&quot;box&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;h3&gt;问题：&lt;/h3&gt;</span></span><br><span class="line"><span class="string">        &lt;div&gt;<span class="subst">$&#123;escapeHTML(question)&#125;</span>&lt;/div&gt;</span></span><br><span class="line"><span class="string">        &lt;h3&gt;AI回复：&lt;/h3&gt;</span></span><br><span class="line"><span class="string">        &lt;div&gt;<span class="subst">$&#123;convertedAnswer&#125;</span>&lt;/div&gt;</span></span><br><span class="line"><span class="string">      &lt;/div&gt;</span></span><br><span class="line"><span class="string">      &lt;p&gt;缓存链接：&lt;br&gt;</span></span><br><span class="line"><span class="string">        &lt;a class=&quot;cache-link&quot; href=&quot;?cache_id=<span class="subst">$&#123;cacheId&#125;</span>&quot;&gt;<span class="subst">$&#123;url.origin&#125;</span>/?cache_id=<span class="subst">$&#123;cacheId&#125;</span>&lt;/a&gt;</span></span><br><span class="line"><span class="string">      &lt;/p&gt;`</span></span><br><span class="line">    ), &#123; <span class="attr">headers</span>: &#123; <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/html&#x27;</span> &#125; &#125;);</span><br><span class="line"></span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="title function_">createHTML</span>(</span><br><span class="line">      <span class="string">&#x27;发生错误&#x27;</span>,</span><br><span class="line">      <span class="string">`&lt;h1&gt;请求处理失败&lt;/h1&gt;</span></span><br><span class="line"><span class="string">      &lt;div class=&quot;box&quot;&gt;<span class="subst">$&#123;escapeHTML(error.message)&#125;</span>&lt;/div&gt;`</span></span><br><span class="line">    ), &#123; <span class="attr">status</span>: <span class="number">500</span>, <span class="attr">headers</span>: &#123; <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/html&#x27;</span> &#125; &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> &#123;</span><br><span class="line">  <span class="keyword">async</span> <span class="title function_">fetch</span>(<span class="params">request, env</span>) &#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">await</span> <span class="title function_">handleRequest</span>(request, env);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (err) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="title function_">createHTML</span>(</span><br><span class="line">        <span class="string">&#x27;服务器错误&#x27;</span>,</span><br><span class="line">        <span class="string">`&lt;h1&gt;服务器内部错误&lt;/h1&gt;&lt;div class=&quot;box&quot;&gt;<span class="subst">$&#123;escapeHTML(err.message)&#125;</span>&lt;/div&gt;`</span></span><br><span class="line">      ), &#123; <span class="attr">status</span>: <span class="number">500</span>, <span class="attr">headers</span>: &#123; <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/html&#x27;</span> &#125; &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;由于nokia的浏览器只能访问静态网页，无法加载js，所以我们用Cloudflare worker代理向api发送请求，再渲染为静态页面返回给浏览器即可。&lt;/p&gt;
&lt;p&gt;下面是Cloudflare worker的代码实现。&lt;br&gt;注意要绑定KV，名字为CACHE，你也可以自</summary>
      
    
    
    
    <category term="水文" scheme="https://blog.keee.top/categories/%E6%B0%B4%E6%96%87/"/>
    
    
    <category term="deepseek" scheme="https://blog.keee.top/tags/deepseek/"/>
    
    <category term="诺基亚" scheme="https://blog.keee.top/tags/%E8%AF%BA%E5%9F%BA%E4%BA%9A/"/>
    
  </entry>
  
  <entry>
    <title>化学碎思</title>
    <link href="https://blog.keee.top/posts/50561.html"/>
    <id>https://blog.keee.top/posts/50561.html</id>
    <published>2025-02-23T10:59:20.000Z</published>
    <updated>2025-09-27T14:55:56.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Ka2为什么小于Ka1"><a href="#Ka2为什么小于Ka1" class="headerlink" title="Ka2为什么小于Ka1"></a>Ka2为什么小于Ka1</h1><p>这一点根据笔记记载，</p><blockquote><p>一级电离产生的大量H+抑制了二级电离</p></blockquote><p>这个说法乍一听似乎很有道理，但稍加思考，一个可逆反应的化学平衡常数与反应物或生成物浓度无关，那ka2跟一级电离的H+理论上也并无表面关系。<br>至于普通化学原理上提到的 <em>“从浓度对于电离平衡的影响来看，第一步电离出的H3O+能抑制第二，第三步的电离，因此从数量上看，由第二，第三步电离出的H3O+与第一步电离的相比也是微不足道的”</em><br>对于这段话，我个人认为作者表达的是由于一级电离产生的H3O+的抑制作用，弱酸的后续电离的<strong>电离度</strong>低于一级电离，而非导致后续电离的电离常数低于一级电离。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://pic1.imgdb.cn/item/68b3b86758cb8da5c8657b78.webp"/></div></div><h1 id="四氨合铜离子不该是dsp2杂化"><a href="#四氨合铜离子不该是dsp2杂化" class="headerlink" title="四氨合铜离子不该是dsp2杂化"></a>四氨合铜离子不该是dsp2杂化</h1><p>此处根据笔记和常见辅导资料，对于Cu2+的杂化类型都描述为dsp2杂化，但这一观点实际上在普通化学原理上有直接的驳斥</p><div class="tag-plugin image"><div class="image-bg"><img src="https://pic1.imgdb.cn/item/68b3b89d58cb8da5c8657b7e.webp"/></div></div><blockquote><p>然而平面四方形的Cu(NH3)42+离子，也有一个未成对的电子位于较高能级上，但(Cu(NH3)42+离子却是很稳定的，并不具有还原性。<strong>这一点与实验事实是相互矛盾的</strong>。</p></blockquote><p>很明显，Cu2+并非dsp2杂化，其具体结构无法用传统的杂化轨道解释</p><p><a href="https://www.zhihu.com/question/325449174/answer/2106341904?utm_psn=1868681618203471872">https://www.zhihu.com/question/325449174/answer/2106341904?utm_psn=1868681618203471872</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;Ka2为什么小于Ka1&quot;&gt;&lt;a href=&quot;#Ka2为什么小于Ka1&quot; class=&quot;headerlink&quot; title=&quot;Ka2为什么小于Ka1&quot;&gt;&lt;/a&gt;Ka2为什么小于Ka1&lt;/h1&gt;&lt;p&gt;这一点根据笔记记载，&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一级电</summary>
      
    
    
    
    <category term="胡扯区" scheme="https://blog.keee.top/categories/%E8%83%A1%E6%89%AF%E5%8C%BA/"/>
    
    
    <category term="水文" scheme="https://blog.keee.top/tags/%E6%B0%B4%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>2024-summary</title>
    <link href="https://blog.keee.top/posts/43278.html"/>
    <id>https://blog.keee.top/posts/43278.html</id>
    <published>2025-01-23T10:58:00.000Z</published>
    <updated>2025-08-31T04:45:50.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="博客琐事"><a href="#博客琐事" class="headerlink" title="博客琐事"></a>博客琐事</h1><h2 id="主题又换新"><a href="#主题又换新" class="headerlink" title="主题又换新"></a>主题又换新</h2><p>由于学业繁忙，博主太懒，这个博客实际上有好几月无人维护 XD。但我还一直惦记这个事情，觉得先前使用的 butterfly 太臃肿，想换个主题。直到 3 月末，一是在学校忽然有了想法，二是刚好有难得的清明节 3 天小长假，将博客主题从 butterfly 更换成了 Stellar。Stellar 主题简洁大方，而且有非常丰富的标签组件和社区支持，很是得我心。于是用了一天时间给主题添加了 pjax 支持（并不完善）并完成了博客迁移工作</p><p>后来一直用到了大概七月左右，偶然间在开往里发现了 Astro 框架。首先，Astro 的动画效果真的非常流畅，与平常的 wowjs 动画效果真的大有不同（其实感觉有点像 PowerPoint 的平滑效果，当然实际效果因站而异）于是就二度生发了迁移的想法。当时我选择了 fuwari 主题，我想要的效果 fuwari 基本都能实现，流畅的动画，简洁的布局…但是吧，这个主题实际使用起来和配合成熟框架 hexo 的 stellar 感觉还是有点不一样，我想要的评论组件，toc 组件都不齐全，至于 stellar 的标签组件之类的更不用说，但最重要的是，二次开发体验并不是很好并且完全没有办法像 hexo 那样快速跟进主题更新…</p><p>几经周折，还是决定继续抱着我的 hexo 用。但是如上文所述，我自己二改的 stellar 实际上还很不完善，在实际体验上（尤其是访问速度上）甚至还比不上原先的 butterfly😂 一整个蚌不住<br>还是在偶然间，看见了 Stellaris（一个基于 Stellar 二改的主题）。当时看见的时候真的很惊艳，设计风格仿照 Stellar，Stellar 的特性基本保留，而且整个主题用 react 重构还有用 InstantClick 实现的 Pjax。有什么好说的？直接 star+clone😉</p><h2 id="域名更换"><a href="#域名更换" class="headerlink" title="域名更换"></a>域名更换</h2><p>keee.top 这个域名是我今年才拿下的。与我的名字有一定关联（而又不像之前的域名那样直白，实名上网既视感），唯一美中不足的就是与某个搞 ai 的公司重名了，导致 seo 特别差。以前我并没有向 Google 和 bing 报备域名，它们就已经主动收录而且还有一定的权重，所以当时我的博客主要流量来源就是搜索引擎。但现在我主动请求收录却爱答不理，用关键词搜索发现我的网站排在很后面，几乎处于不可见状态，因而网站访客量一落千丈。</p><h2 id="加入开往"><a href="#加入开往" class="headerlink" title="加入开往"></a>加入开往</h2><p>为了改变这一状况，我决定打破自己博客的闭关现状，申请加入了开往。虽然日访问量仍不如以前，但开往带来的访客质量很高，我也很满意了，遂不再瞎折腾。</p><h1 id="学校生活"><a href="#学校生活" class="headerlink" title="学校生活"></a>学校生活</h1><h2 id="平淡"><a href="#平淡" class="headerlink" title="平淡"></a>平淡</h2><p>倘若让我用一个词描述我的 2024 年，我愿意选择“平淡”。为何平淡？还记得去年的此时此刻，我为自己立下的 flag，如今看来只是空谈。在过去的一年里，我依旧坚持着我的被动社交，消极改变，我的六科成绩分布依然如此——语数外差，物化生还行。每周也都浑浑噩噩地度过，周中听课，勉强做完作业，睡觉；周末回家，打开电脑，刷知乎，刷 b 站，倒腾下 blog，一个周末就过去了。周周如此，月月如此，似乎确实有些平淡。</p><p>如果又换句话说，2024 年也并非如静水般的平淡。每一天也都并不一样，数学每一天都能给我带来新的恐惧，语文每一天也都能给我带来新的崩溃，每一天都会遇见一样的人说着不同的话，甚至碰见一些小小的惊喜。每天似乎都在做一样的事，但实际上都能给我来不一样的体验。每周都上一样的体育课，但我对羽毛球经历了喜爱到摆烂的转变。我的数学曾一点一点培养起了自信心，然后又被无情击碎。只不过学习生活的形式依旧，变化太小让我觉得它很平淡。</p><h2 id="有趣"><a href="#有趣" class="headerlink" title="有趣"></a>有趣</h2><p>如上所述，2024 还是有很多有趣的事情发生。首先，我第一次参与了班级的大型活动筹备。学校在高二上学期组织了一次课本剧大赛，本来我并没有报名参加任何环节。但是在一个稀疏平常的早读，一个《变形记》灯光剧本赫然摆在我的课桌上改变了这一切。不一会儿，导演就来告知我说灯光组是做什么的，我当时确实是非常的困惑？？后来才知道有人给剧组推荐我去负责灯光，说我擅长这些事情（笑。但是实际上，灯光组并不能自己控制灯光，实际上我们做的是和学校的灯光老师沟通，做那个指令的翻译员。于是实际上这又成了我最不擅长的事情了。</p><p>后面，我还去报了化学课代表。这个事情在我现在看来是很高兴的，我很早就想找个机会接近我喜欢的事，同时改变我自己在班级上小透明的现状。但我负责的又是化学的基础题编写，这个事情并不像收发作业那样简单，出题对我来说压力还是相当的大，更何况我之前也从未负责过相关板块。所以，过个一学期我又会怎么想也说不定了。</p><p>还有很多事情，留着以后再讲（ε&#x3D;ε&#x3D;ε&#x3D;┏(゜ロ゜;)┛</p><h1 id="出游"><a href="#出游" class="headerlink" title="出游"></a>出游</h1><p>今年并无过多出游经历，不像 2023 年，每逢大考结束我都会带着自己的相机去公园，去山上拍照。但在 7 月短暂的暑假里，家里还是组织了一次旅游——西北大环线</p><h2 id="初体验"><a href="#初体验" class="headerlink" title="初体验"></a>初体验</h2><h3 id="山脉-の-气势-⛰"><a href="#山脉-の-气势-⛰" class="headerlink" title="山脉 の 气势 ⛰"></a>山脉 の 气势 ⛰</h3><p>数月未曾出重庆，对蓝天白云与晚霞都感到陌生。当时刚穿出秦岭，常绿阔叶林骤变为黄土高原，灰蒙蒙的“白天”变为蓝天，说实话还真有点小小的震撼。都说重庆是山城，但那山充其量就是些丘陵，而黄土高原的山才真的是气势雄伟，有一种扑面而来的震慑力。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://pic1.imgdb.cn/item/68b3b74c58cb8da5c8657b49.webp"/></div></div><h3 id="美食-の-诱惑"><a href="#美食-の-诱惑" class="headerlink" title="美食 の 诱惑"></a>美食 の 诱惑</h3><p>大西北杀器，廉价羊肉！具体多廉价我已忘了，但是一定比重庆便宜了不知道多少。每天赶路到达住宿地，少不了的就是羊肉串环节（如图）</p><div class="tag-plugin image"><div class="image-bg"><img src="https://pic1.imgdb.cn/item/68b3b69258cb8da5c8657b04.webp"/></div></div><p>当然，如果有经过兰州，也强烈建议去柏林巷尝尝手抓羊肉。三十多元钱一斤的手抓羊肉，吃个爽还是没问题的。</p><h2 id="沙漠行"><a href="#沙漠行" class="headerlink" title="沙漠行"></a>沙漠行</h2><p>要我说，西北大环线唯一能吸引我的便只有沙漠。那沙丘远看不是很大，但那爬起来真的有一种深深的无助感。攀爬沙丘堪称最诚实的体能测试：前 30 步的轻盈如沙漠之舟，后 30 步的陷落似时间陷阱，拼尽全力无法战胜。不过，等到爬上了沙丘顶，在温热的沙子上躺平，看头顶星空，认真地找一次北斗七星，也有一种别样的体验。当然如果在沙丘留到了深夜，趁游客都走了，自己体验一次沙丘速降。那种高速旋转，肆意跳跃，纵情翻滚的爽感绝对令人印象深刻<br>（注：星空音乐节，我认为有辱音乐节，那音响质量说实话不如广场舞的音响）</p><div class="tag-plugin image"><div class="image-bg"><img src="https://pic1.imgdb.cn/item/68b3b62458cb8da5c8657af5.webp"/></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://pic1.imgdb.cn/item/68b3b69158cb8da5c8657b03.webp"/></div></div><h2 id="盐湖与自然奇观"><a href="#盐湖与自然奇观" class="headerlink" title="盐湖与自然奇观"></a>盐湖与自然奇观</h2><div class="tag-plugin image"><div class="image-bg"><img src="https://pic1.imgdb.cn/item/68b3b62258cb8da5c8657af4.webp"/></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://pic1.imgdb.cn/item/68b3b74d58cb8da5c8657b4a.webp"/></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://pic1.imgdb.cn/item/68b3b62458cb8da5c8657af7.webp"/></div></div><p>非常喜欢这几个自然景点，出片率极高！！随手一拍即是大片</p><p>不过注意图 1 的芒崖地理位置非常偏远，开车可能要穿越 300 公里以上的无人区（也无信号），全程断网而且两侧全是沙漠生态系统。如果你要去，相当于会直接多出数百公里行程并且只能看这一个景点，最多还有一个冷湖石油小镇（死城）可以浏览一下而已。因此如果旅行时间不甚充足，建议不用去。</p><p>其中西台、东台还是野生景点，不收门票（貌似其中一个还有矿业公司在开发）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;博客琐事&quot;&gt;&lt;a href=&quot;#博客琐事&quot; class=&quot;headerlink&quot; title=&quot;博客琐事&quot;&gt;&lt;/a&gt;博客琐事&lt;/h1&gt;&lt;h2 id=&quot;主题又换新&quot;&gt;&lt;a href=&quot;#主题又换新&quot; class=&quot;headerlink&quot; title=&quot;主题又换新&quot;&gt;</summary>
      
    
    
    
    <category term="随笔" scheme="https://blog.keee.top/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
    <category term="年度总结" scheme="https://blog.keee.top/tags/%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>流水账：作业、八卦与表现欲</title>
    <link href="https://blog.keee.top/posts/50842.html"/>
    <id>https://blog.keee.top/posts/50842.html</id>
    <published>2024-10-02T20:43:45.000Z</published>
    <updated>2025-07-06T04:22:33.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="迷惑的数学作业"><a href="#迷惑的数学作业" class="headerlink" title="迷惑的数学作业"></a>迷惑的数学作业</h2><p>我很早就想吐槽这一点了。由于我们的数学老师比较有特色，在教高中，但是鼓吹着大学的学习理念（自学），还声称教室不该叫“教室”，而该叫”学室”。这一点得到了他很好的践行，即是每节数学课都要迟到 2 分钟以上，作业长期是“复习已学”。如果仅此而已，那也罢了。更逆天的是他的”预习新知”，一天预习一个课时，要求做完讲义和练习，并且自己对完答案批改。这两样加起来统共有 10 页，而他一天就布置下来了！！？？然后，他可能会花 2~3 天来讲 1 个课时，然后这几天作业又只有“复习已学”。</p><p>所以，我们的作业量就是”多、没有、没有、没有、爆炸多、没有、没有”…</p><p>属实让人难以理解。</p><h2 id="八卦风云与情报网"><a href="#八卦风云与情报网" class="headerlink" title="八卦风云与情报网"></a>八卦风云与情报网</h2><p>我们语文老师有过这么一句箴言：</p><div class="tag-plugin quot"><p class="content" type="text"><span class="empty"></span><span class="text">如果没有八卦，这个世界相当无聊； 如果只有八卦，那这个世界也很无趣</span><span class="empty"></span></p></div><p>可以说没有人不爱听八卦，更何况是身边的同学？</p><p>然而八卦消息并不能想报纸一样流通，而更像一个半去中心化的网络</p><p>“去中心化”在于这个八卦一旦说出口，是很难制止其传播的，直接就一生二，二生三，三生万物（？）</p><p>而”半 “在于这个网络存在一个” 中心 “，他往往是各大小社交团体的交集与核心，可以自如地穿梭于两性群体，并且掌握大把的人脉资源，因而知晓最多的八卦。但他又肯定不会直接大肆宣传，每天都在寝室里面说谜语，跟一些知道的人打哑谜。</p><p>我在旁边听着是真的难受啊😭😭。。。有点希望自己也能知道这么多的八卦</p><h2 id="表现欲"><a href="#表现欲" class="headerlink" title="表现欲"></a>表现欲</h2><p>10月1日，既是国庆节，也是我班班主任的生日 真·于国同庆了</p><p>庆祝节目中有一个帅气的同学上来弹唱了吉他，技术很好而且真的很酷的说！</p><p>而我又想起了他年初的时候做的一个New Year Resolution里面就提到了他希望能表演一下他的吉他。</p><p>重新审视一下自己，发现自己却真的没有什么可以拿出来“表演”</p><p>每次看到同学画画，唱歌，谈自己打架子鼓，自己都只能点点头，赞美几句，然后回过头来想高考后一定要学门特长…</p><p>从某种程度上说，这个blog最初是一个表现我自己的门户，但后来证明它并没有这个功能。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;迷惑的数学作业&quot;&gt;&lt;a href=&quot;#迷惑的数学作业&quot; class=&quot;headerlink&quot; title=&quot;迷惑的数学作业&quot;&gt;&lt;/a&gt;迷惑的数学作业&lt;/h2&gt;&lt;p&gt;我很早就想吐槽这一点了。由于我们的数学老师比较有特色，在教高中，但是鼓吹着大学的学习理念（自学），还</summary>
      
    
    
    
    <category term="流水账" scheme="https://blog.keee.top/categories/%E6%B5%81%E6%B0%B4%E8%B4%A6/"/>
    
    
    <category term="生活" scheme="https://blog.keee.top/tags/%E7%94%9F%E6%B4%BB/"/>
    
    <category term="学校" scheme="https://blog.keee.top/tags/%E5%AD%A6%E6%A0%A1/"/>
    
  </entry>
  
  <entry>
    <title>Pjax逆天默认属性：自动向Url添加时间戳</title>
    <link href="https://blog.keee.top/posts/25797.html"/>
    <id>https://blog.keee.top/posts/25797.html</id>
    <published>2024-10-02T18:08:38.000Z</published>
    <updated>2024-11-09T07:03:32.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前情提要"><a href="#前情提要" class="headerlink" title="前情提要"></a>前情提要</h2><p>突然来了兴致将网站的 Service Worker 更换成了 Google Chrome 团队的 Workbox，结果在缓存控制方面遇到个大问题：</p><p>​<strong>每刷新一次缓存就增长 20MB，几次访问下来缓存高达 400MB</strong></p><p>但我整个网站包括图片、字体资源加起来也没有 50MB 啊？？（迷惑）</p><p>结果发现 Workbox 会将 Url 参数不同的请求分别缓存一份…</p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>这里省略漫长的 Debug 过程（博主一直在找 Workbox 的问题），根本祸根在于 Pjax 的一个默认参数 <a href="https://github.com/MoOx/pjax/blob/master/README.md#cachebust-boolean-default-true">cachebust-boolean-default-true</a></p><p><code>cacheBust</code> (Boolean, default: <code>true</code>)</p><p>When set to , Pjax appends a timestamp query string segment to the requested URL in order to skip the browser cache.<code>true</code></p><p>所以在创建 pjax 实例的代码里面加一条”cacheBust: false”即可</p>]]></content>
    
    
    <summary type="html">使用了Service Worker的一定要关掉！！</summary>
    
    
    
    <category term="网站" scheme="https://blog.keee.top/categories/%E7%BD%91%E7%AB%99/"/>
    
    
    <category term="pjax" scheme="https://blog.keee.top/tags/pjax/"/>
    
  </entry>
  
  <entry>
    <title>情绪迁移</title>
    <link href="https://blog.keee.top/posts/2612.html"/>
    <id>https://blog.keee.top/posts/2612.html</id>
    <published>2024-10-02T16:47:24.000Z</published>
    <updated>2024-11-09T07:03:32.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="迁移你的情绪"><a href="#迁移你的情绪" class="headerlink" title="迁移你的情绪"></a>迁移你的情绪</h1><p>你可能经历过这样一些场景：因为看过某工作室的一部作品觉得优秀，于是对下一部作品充满期待。</p><p>我们不妨从另一个角度来理解这种现象，我们实际上是将对工作室前作的喜爱转移到了尚且未知的新作上，而其中传输的通道正是他们的逻辑关系——源自同一工作室。对此，中国古代就早已有相关的成语，如“爱屋及乌”，因为喜爱一个男子，所以连带着他房子上的乌鸦也喜欢。如果把乌鸦单拎出来，它的下场多半是被人厌恶；但因为它现在站在了那个男人的屋檐上，所以又受人喜欢。同样的，我因为“Forza Horizons 4”才喜欢《A Moment Apart》这首作品，但两者实际上并无内在联系。倘若我先听闻了后者，可能对后者并不感冒；但因为我先知晓了前者，于是后者便被捧上了神坛。</p><p><strong>事物没变，但是人们对它的情感态度却发生了极大的转变。</strong></p><p>究其原因，不过是因为改变了对事物的认知途径。</p><p>但这种传递它可靠吗？</p><p>如果你试图用它来<strong>预测未来</strong>，很显然它并不可靠，且有被操纵决定的风险。在这种心理的影响下，人很容易被利用甚至被操纵。广告商或商家经常利用消费者对品牌的情感联结来推广新产品，即便这些新产品未必满足消费者的实际需求。这种情感引导可能让个体的判断不再基于理性分析，而是基于情感上的依赖，从而陷入消费陷阱。</p><p>如果你试图用它来<strong>服务现在</strong>，它的逻辑可能依旧不可靠，它却可以成为积极心理状态的助燃剂。陈铭也曾举过一个背单词的例子，其大意为想象自己在跟自己的偶像用英语对话。听起来很荒谬，但其中恰好就利用了这个原理，背单词令人厌烦，但试图将其与自己喜爱的偶像结合起来后，背单词的枯燥乏味就被冲淡了。从外看，消极悲观背单词与积极主动背单词表现是一样的；但从内看，却大相径庭。</p><p>在日常生活中，我们可能会遇到许多明明令人厌恶却不可不做的事情，有人也许会选择捏着鼻子消极应对，但有人会选择改变自己的认知，将”厌恶”扭转为”喜爱”，而情感迁移就是其中的一个办法。我有个朋友，他对于数学一直缺乏热情与信心，但是他恰好碰到了一个非常优秀的数学老师。无需任何附加操作，对数学老师的个人喜爱，逐渐迁移至数学本身，于是对老师的尊敬就化为了驱动自身学习的强劲动力，从而增强了当下的学习动力。</p><p>有人可能会说，这是一种自我欺骗与麻痹，它损害了真正的内驱力的建立而后者才是源源不断前进动力。但是，内驱力并非生来就有，它是一点一点建立而成。而由A及B的情感迁移，正是建立内驱力的一种途径，它并不依赖外力，仅仅是改变自己对事物的认知途径，就推动了在现实世界中对指令的执行。何乐而不为呢？建立内驱力不是一种苦行，而是一种追求达到做事从心的状态。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;迁移你的情绪&quot;&gt;&lt;a href=&quot;#迁移你的情绪&quot; class=&quot;headerlink&quot; title=&quot;迁移你的情绪&quot;&gt;&lt;/a&gt;迁移你的情绪&lt;/h1&gt;&lt;p&gt;你可能经历过这样一些场景：因为看过某工作室的一部作品觉得优秀，于是对下一部作品充满期待。&lt;/p&gt;
&lt;p&gt;我们</summary>
      
    
    
    
    <category term="感想" scheme="https://blog.keee.top/categories/%E6%84%9F%E6%83%B3/"/>
    
    
    <category term="心理" scheme="https://blog.keee.top/tags/%E5%BF%83%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>暑假回顾</title>
    <link href="https://blog.keee.top/posts/45501.html"/>
    <id>https://blog.keee.top/posts/45501.html</id>
    <published>2024-08-29T13:52:20.000Z</published>
    <updated>2025-07-06T04:22:33.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="碎碎念"><a href="#碎碎念" class="headerlink" title="碎碎念"></a>碎碎念</h1><h2 id="一些话"><a href="#一些话" class="headerlink" title="一些话"></a>一些话</h2><p>其实这篇博文本应该是 7 月小结，而且在 8 月初就该动笔，但因为博主实在是太懒，把 7 月小结硬生生拖成了暑假小结 XD</p><h2 id="期末考"><a href="#期末考" class="headerlink" title="期末考"></a>期末考</h2><p>月初当然是是期末考试。分考室的时候很不幸被分到了 4 考室（我们学校分考室是根据上一次考试成绩排名来分的，考得越好考室就越靠前），空调是用的中央空调，效果很不好。而且可能是由于周围种的树太过于高大，枝叶把好几层教学楼都盖在阴影下，考试的时候我坐在里面总感觉很压抑。当然，我觉得考试带来的压迫感占的因素应该更大</p><p>不过所幸的我所在的考室还是有几个熟人的，甚至我的前排就是一个同班同学（这非常的巧，因为我觉得 ta 不应该出现在这个考室的说）。但是我也不敢找他们说话，就每次进考场的时候瞪瞪眼睛，做出一副吃惊的表情来打招呼。其实不知道为什么，我和关系好的打招呼经常都是这种无声的打招呼，虽然旁人看上去可能很怪异，但本社恐感觉非常好(<em>^_^</em>)</p><p>还是说回考试，我自我感觉良好。但是我们班的总体发挥上升空间较大，这让班主任大为恼火，害得我们放假那天的晚上直接给我们留到很晚…</p><h2 id="羟基补习"><a href="#羟基补习" class="headerlink" title="羟基补习"></a>羟基补习</h2><p>怎么说呢，在补习开始之前，我们班主任告诉我们，他指定了一名 <strong>特别优秀的数学老师</strong> 来教我们，另外那几个肯定也很优秀但他不知道。然而，他指定的那个“特别优秀的数学老师”貌似去教历史班了（笑</p><p>第一位数学老师很专业，讲课时总不忘 diss 一下清北这些一流院校的羟基题（都是抄的高联，“考羟基前复习一下前几届高联初赛就可以了”）。讲课节奏快，方法多，听起来就给人一种知识流过大脑的感觉。当然这不是刷知乎的那种”流过”，听完课后还是真的有收获的。</p><p>后面的物理老师才是真正的重量级，他是北京大学教物理的一个大学老师，而且带了教物理竞赛老师的一个特性，就是有一种 <strong>蜜汁优越感</strong>。上来先 diss 一波生物、化学、英语。</p><ul><li>“你孩子英语不好？你孩子是智障，我不教”</li><li>“有人知道 normal force 是什么意思吗？嗨，小地方的孩子。所以重庆永远不能成为大都市！”</li><li>“rvsinα &#x3D; const.”</li><li>“我们北京（后鼻音要加重）”…</li></ul><p>以上种种都已经成为我们班上的流行梗，模仿老学究说话就是别有一番风趣。</p><h2 id="旅行"><a href="#旅行" class="headerlink" title="旅行"></a>旅行</h2><p>羟基结束后，我们班主任给了我们约 8 天的自主安排时间（“注意不是放假，因为我们一直在放假”）</p><p>我是选择去了一直心心念念的大西北，详见另一篇博文。</p><h2 id="漫长的暑假自习"><a href="#漫长的暑假自习" class="headerlink" title="漫长的暑假自习"></a>漫长的暑假自习</h2><p>收假回来后，我们的暑假可谓是到了终点。</p><h3 id="娱乐"><a href="#娱乐" class="headerlink" title="娱乐"></a>娱乐</h3><p>但是我们的自习作息也是相当的自由，早上 7 点 20 到，中午 12 点放，下午 2 点 20 到，晚上 9 点半放</p><p>还有非常宽松的门禁，导致我整个暑假自习期间就只在学校食堂吃过一次饭。</p><p>中午下午一放学，就和同学们到金沙天街吃大餐，或者是去学校后门吃面或者快餐。有时候运气好还能碰到几个老师（？</p><p>至于晚上的生活那是相当潇洒，自从有几个同学发现了学校对面新开了家烧烤店，几乎每周都会到那边去”串”，从 9 点半吃到 10 点半</p><p>点得东西也不多，就一两串羊肉串，两三串素材，每个人一二十块钱就搞定了。</p><p>最开始等菜的时候是聊闲天</p><p>到后面，有人带了副扑克牌后就开始疯狂斗地主。让我这种几乎没有碰过扑克的人小小地增长了一下斗地主技术（但还是很菜&#x2F;(ㄒoㄒ)&#x2F;~~</p><h3 id="学习"><a href="#学习" class="headerlink" title="学习"></a>学习</h3><p>以上是休闲娱乐，但正经学习也不轻松。班主任给我们提前做好了好几张暑假计划表，每天的任务一点都不少…</p><p>而且还有卷王带来的压迫感推动我学习 XD，尤其是当我连直线与 ⚪ 都还没做完的时候，有人都已经做完圆锥曲线，开始做概率与统计的时候，真的有点崩溃。。</p><p>所以那几天，我就狂刷必刷题，把进度追到了双曲线。（圆锥曲线好难的说）</p><p>值得注意的是，我们前段自习的时候班主任出差去了，就派了家长坐讲台上来监视我们（！！！）这实际上非常的不好，因为老师守自习一般都很水，但家长很负责全程把人盯住</p><p>期间偶尔穿插些有趣的活动，像什么读书汇报小组，真的是趁着暑假狠狠地整活，夹带私货。</p>]]></content>
    
    
    <summary type="html">暑假碎碎念</summary>
    
    
    
    
    <category term="日常" scheme="https://blog.keee.top/tags/%E6%97%A5%E5%B8%B8/"/>
    
  </entry>
  
  <entry>
    <title>穷玩游戏--PC Game Pass</title>
    <link href="https://blog.keee.top/posts/202469.html"/>
    <id>https://blog.keee.top/posts/202469.html</id>
    <published>2024-06-09T22:05:14.000Z</published>
    <updated>2024-08-30T08:44:21.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="写在开头"><a href="#写在开头" class="headerlink" title="写在开头"></a>写在开头</h2><p>Xbox Game Pass，可谓是全球最受欢迎的游戏订阅服务，在用户规模和内容体量上都十分庞大。得益于巨硬的气大财粗以及Xbox旗下一系列工作室（如Playground Studio）产出的大量第一方游戏，XGP中也就不乏高质量的游戏。</p><p>经典的热门游戏如：<strong>极限竞速：地平线4</strong>、<strong>极限竞速：地平线5</strong>、<strong>Minecraft:Java &amp; Bedrock Edition</strong></p><p>爆火的现象级游戏如：<strong>幻兽帕鲁</strong>、<strong>庄园领主</strong></p><p>（这俩甚至是首发登录XGP）</p><p>稍小众的高质量游戏如：<strong>HiFi RUSH</strong>、<strong>Persona 3 Reload</strong>、<strong>都市：天际线2</strong></p><p>其他大作：<strong>星空</strong>、<strong>原子之心</strong>、<strong>星球大战：绝地幸存者</strong>(EA Play)</p><p>以上仅是我个人比较感兴趣的部分游戏，实际XGP中还包含很多游戏但我可能不知道（或者并不关心），而且XGP Ultimate还有云游戏等服务这里不作阐述</p><p><strong>但是</strong>，对于大多数PC玩家来说，我们需要购买的只有PC Game Pass（即Xbox Game Pass for PC）。而PC Game Pass不仅国区无法正常购买，而且价格不菲。对于新用户来说是10港币&#x2F;月，也就是大约9元&#x2F;月，而老用户为27元&#x2F;月，若购买一年订阅则将花费超300元。对于学生党来说，可能一个月就只能玩10个小时左右，承担如此订阅费用会略有些压力。</p><div class="tag-plugin image"><div class="image-bg"><img src="https://bu.dusays.com/2024/06/09/6665c67c27380.webp"/></div></div><p>因此，PC Game Pass共享号应运而生。</p><h2 id="共享号？"><a href="#共享号？" class="headerlink" title="共享号？"></a>共享号？</h2><p>目前，PC Game Pass共享号一年花费约在15元左右，甚至可以更低</p><p>一听见“共享号”再结合这个价格，似乎这个方案显得很不靠谱</p><p>实则不然，大多数卖PC Game Pass共享号的商家都采取了如下模式</p><ol><li>用新号购买一整年的XGPU,成本最多300</li><li>出售PC 登录位*10，15元</li><li>出售主机 HOME位*1，129元</li><li>出售主机 登录位*1，99元</li><li>出售EA Play账号*1，49元</li><li>出售战网*1，69元</li><li>出售拳头绑定*1，69元</li><li>出售云游戏服务，99元</li></ol><p>上述总共加和约<strong>565元</strong>，对比成本来说就很合理了。即使在最坏情况的下，只卖出了PC登录位和Xbox主机 HOME位、EA Play商家也是能赚钱的。</p><p>而且更重要的是，PC登录位一年只能有10个账号，这不能由号主删除或添加，所以店家也就没有了跑路的必要，即便跑了也不能多赚钱。</p><h2 id="Xbox账号问题"><a href="#Xbox账号问题" class="headerlink" title="Xbox账号问题"></a>Xbox账号问题</h2><p>PC Game Pass共享号很好的一点就是——它只需要登录微软商店用于验证所有权，而玩游戏时用的Xbox是登录的自己的账号。也就是说，虽然是用的共享号，但如云存档、XBox点数、成就、在线游戏联机等都在自己的号上。（这点真的非常好</p><h2 id="关于购买"><a href="#关于购买" class="headerlink" title="关于购买"></a>关于购买</h2><p>随便找一家评价时间跨度长一点的老店即可</p><h2 id="成品"><a href="#成品" class="headerlink" title="成品"></a>成品</h2><div class="tag-plugin image"><div class="image-bg"><img src="https://bu.dusays.com/2024/06/09/6665c5e18331e.webp"/></div></div>]]></content>
    
    
    <summary type="html">10元拿下各种游戏</summary>
    
    
    
    <category term="水文" scheme="https://blog.keee.top/categories/%E6%B0%B4%E6%96%87/"/>
    
    
    <category term="游戏" scheme="https://blog.keee.top/tags/%E6%B8%B8%E6%88%8F/"/>
    
    <category term="pgp" scheme="https://blog.keee.top/tags/pgp/"/>
    
    <category term="xbox" scheme="https://blog.keee.top/tags/xbox/"/>
    
  </entry>
  
  <entry>
    <title>从6600xt到4060ti</title>
    <link href="https://blog.keee.top/posts/22833.html"/>
    <id>https://blog.keee.top/posts/22833.html</id>
    <published>2024-03-30T21:22:51.000Z</published>
    <updated>2024-08-30T08:44:21.000Z</updated>
    
    
    
    
    
  </entry>
  
  <entry>
    <title>浅谈高考赋分制</title>
    <link href="https://blog.keee.top/posts/62312.html"/>
    <id>https://blog.keee.top/posts/62312.html</id>
    <published>2024-03-09T21:22:38.000Z</published>
    <updated>2024-08-30T08:44:21.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>不久之前，进入高一下以来也是分科后的第一次考试结束了。最开始听别人说这次考试不赋分，心里面就有些窃喜。因为很早之前在初二就从 zq 口中听说了赋分的威力，后面结果出来后先拿到原始分很开心，觉得这次稳了，结果再选学科一赋分，排名一下子就往后滑了不少(；′⌒&#96;)。</p><h1 id="不理性分析"><a href="#不理性分析" class="headerlink" title="不理性分析"></a>不理性分析</h1><h2 id="溯其本源"><a href="#溯其本源" class="headerlink" title="溯其本源"></a>溯其本源</h2><p>赋分制本身是重庆近几年实行<strong>3+1+2新高考模式</strong>带来的产物，将原先的大文综、大理综拆成了四个再选学科可供自由选择，但录取时只分物理类和历史类，为保证公平，四个再选学科分数必须进行转换以消除学科间分数差异，于是以排名为基础的<strong>赋分制</strong>诞生了</p><h2 id="算法简述"><a href="#算法简述" class="headerlink" title="算法简述"></a>算法简述</h2><p>重庆市高考再选学科转换分满分为100分，赋分起点为30分。将没门选择考再选学科考生的原始分从高到低划分到A、B、C、D、E共五个等级，各个等级人数比例分别为15%、35%、35%、13%和2%，赋分区间以此为100<del>86、85</del>71、70<del>56、55</del>41和40~30</p><h2 id="Influence"><a href="#Influence" class="headerlink" title="Influence"></a>Influence</h2><p>注意到，A、B两等级（即是说71<del>100）分数段的人就占了足足50%的比例，这说起来可能没什么直观感受，但如果再想想自己学校平时月考原始分的中位数大概是多少呢？？在 bz，中间名次大概是在1000名左右，这个时候的分数一般都有点一般，甚至是很一般，但是却能轻松赋到80分的高分，直接带来了20</del>30分左右的分数跃升（真的有点恐怖了。而且，越到高分段赋分带来的增长越来越弱，在一些学校高考的再选学科甚至有扁平化的趋势。</p><p>赋分不会影响在这个再选学科的排名，但是对于总分影响就真的<strong>相当大</strong>了。记得尊敬的 xy 老师从高一入学前的暑假开始就在强调<strong>主科的重要性</strong>而且再选学科可以暂时不去管他。当时我还没意识到事情的严重性，觉得自己多摸过几年化学，就搞了本《天利》来刷</p><p>（当然最后 xy 布置的任务是一个也没完成</p><p>就拿我来说，我化学考试赋分之后大约只涨了有3分，生物也差不多；然而我周围原始分与我相当的同学几乎都有10~20分的涨幅，直接把我吊打了(<em>^_^</em>)。</p><h1 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h1><p>总之，教训很显然：</p><div class="tag-plugin quot"><p class="content" type="text"><span class="empty"></span><span class="text">主科 comes first.</span><span class="empty"></span></p></div>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;不久之前，进入高一下以来也是分科后的第一次考试结束了。最开始听别人说这次考试不赋分，心里面就有些窃喜。因为很早之前在初二就从 zq 口中听说</summary>
      
    
    
    
    <category term="学习" scheme="https://blog.keee.top/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="学习" scheme="https://blog.keee.top/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="高考" scheme="https://blog.keee.top/tags/%E9%AB%98%E8%80%83/"/>
    
    <category term="赋分" scheme="https://blog.keee.top/tags/%E8%B5%8B%E5%88%86/"/>
    
  </entry>
  
  <entry>
    <title>Caddy -- 一款优秀的Web服务器</title>
    <link href="https://blog.keee.top/posts/51203.html"/>
    <id>https://blog.keee.top/posts/51203.html</id>
    <published>2023-08-28T14:50:42.000Z</published>
    <updated>2025-09-30T14:49:31.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这几天一直在折腾家里的旧手机（参照前文），在用传统的 Nginx 搭建 https 服务的时候，证书问题真的超级麻烦而且 Nginx 的文件也很复杂，对一些新特性支持也一般，对我这种又懒又想折腾的人及其不友好。</p><p>结果在网上冲浪的时候，偶然发现了 Caddy 这个宝藏软件</p><p>官网：<a href="https://caddyserver.com/docs/">https://caddyserver.com/docs/</a></p><h1 id="独特之处"><a href="#独特之处" class="headerlink" title="独特之处"></a>独特之处</h1><p>首先，最重要的是是它的 <strong>SSL 证书自动申请续期</strong>，过程完全自动而且速度快，自己只需要提供 token（或者开放 80 端口）</p><p>其次，它对 <strong>新特性的支持优秀</strong>，无需配置便支持 HTTP&#x2F;3 quic、Markdown 自动翻译、ipv6 等特性</p><div class="tag-plugin image"><div class="image-bg"><img src="../img/屏幕截图%202023-08-28%20150439.png"/></div></div><p>最后，配置文件简单，配置三个站点仅用短短几行就能解决</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">ipv6.pan.keee.top: 29565 &#123;</span><br><span class="line">    reverse_proxy / 127.0.0.1:5244</span><br><span class="line">    encode gzip</span><br><span class="line">    tls &#123;</span><br><span class="line">        dns dnspod &quot;ID, Token&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">ipv6.keee.top: 443 mirror1.keee.top: 23232 &#123;</span><br><span class="line">    root * /home/cqlkc/cqlkc.github.io</span><br><span class="line">    file_server</span><br><span class="line">    encode gzip</span><br><span class="line">    tls &#123;</span><br><span class="line">        dns dnspod &quot;ID, Token&quot;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是，Caddy 相比 Nginx 在性能方面仍有劣势，Nginx 资源占用更低，速度更快（但是它更麻烦啊！</p><p>所以小站点可能会更推荐 Caddy，可以大大降低维护成本（利好学生党</p><h1 id="配置教程"><a href="#配置教程" class="headerlink" title="配置教程"></a>配置教程</h1><p>参照 <a href="https://caddyserver.com/docs/">官方文档</a> 和我的 Caddyfile 示例即可</p><p>需要注意的是，国内家宽的 80 端口被封锁，因此 Caddy 默认的 HTTP-01 验证无法正常检验域名所有权</p><h2 id="非-80-端口验证域名所有权"><a href="#非-80-端口验证域名所有权" class="headerlink" title="非 80 端口验证域名所有权"></a>非 80 端口验证域名所有权</h2><p>解决方法就是用 XCaddy 编译第三方插件和 Caddy 源码第三方插件即可</p><p>第三方插件列表在 <a href="https://caddyserver.com/docs/modules/">https://caddyserver.com/docs/modules/</a> 里面找</p><p>我这里有编译过的 DNSpod 插件的 <a href="https://pan.keee.top:29565/d/%E9%98%BF%E9%87%8C%E4%BA%91%E7%9B%98/Caddy/caddy">Caddy 二进制文件（ARM64）</a>，可以直接用</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>Caddy 很好用很好用很好用，懒人必备（笑</p>]]></content>
    
    
    <summary type="html">用起来比nginx方便太多了...</summary>
    
    
    
    
    <category term="web" scheme="https://blog.keee.top/tags/web/"/>
    
    <category term="caddy" scheme="https://blog.keee.top/tags/caddy/"/>
    
  </entry>
  
  <entry>
    <title>给老手机部署上Alist服务</title>
    <link href="https://blog.keee.top/posts/13283.html"/>
    <id>https://blog.keee.top/posts/13283.html</id>
    <published>2023-06-29T12:55:37.000Z</published>
    <updated>2025-09-30T14:49:31.000Z</updated>
    
    <content type="html"><![CDATA[<p>家里有一台闲置的小米8（dipper），已经提前解锁Bootloader，中考后就想着在上面架设linux终端跑点东西</p><h1 id="准备过程"><a href="#准备过程" class="headerlink" title="准备过程"></a>准备过程</h1><p>所需材料:</p><ol><li>安卓手机一台</li><li>windows电脑一台</li></ol><p>安卓手机推荐解锁bl并root，方便后续实现插电运行，避免电池损耗鼓包，后续也以root为准</p><p>国内开放解锁bl的手机品牌有：小米、一加、oppo、realme</p><p>（小米为绑定后7天解锁，一加可以直接解锁，oppo、realme需要申请名额很难）</p><p>有些较老安卓机可以直接fastboot解锁另说</p><h2 id="刷入合适的刷机包"><a href="#刷入合适的刷机包" class="headerlink" title="刷入合适的刷机包"></a>刷入合适的刷机包</h2><p>由于手上的小米8当时更新到了拉胯的MIUI12.5，又卡又费电不适合长期运行，所以决定回滚到MIUI10.3.5</p><p><strong>如果手机当前状况良好可以不管</strong></p><p>具体过程参照</p><p><a href="https://www.coolapk.com/feed/45223331">https://www.coolapk.com/feed/45223331</a></p><h2 id="提前下载所需应用"><a href="#提前下载所需应用" class="headerlink" title="提前下载所需应用"></a>提前下载所需应用</h2><p>解锁bl以后会清空手机数据，到时候一个一个下载很麻烦，所以提前下好，节约时间</p><p>手机应用列表：</p><p>Magisk Delta : <a href="https://github.com/HuskyDG/magisk-files/releases">https://github.com/HuskyDG/magisk-files/releases</a> </p><p>Termux  : <a href="https://github.com/termux/termux-app/releases">https://github.com/termux/termux-app/releases</a></p><p>AccA : <a href="https://github.com/MatteCarra/AccA/releases">https://github.com/MatteCarra/AccA/releases</a></p><p>MT管理器 : <a href="https://www.coolapk.com/apk/bin.mt.plus">https://www.coolapk.com/apk/bin.mt.plus</a></p><p>电脑所需：</p><p>Miflash : <a href="https://pan.keee.top:29565/123">https://pan.keee.top:29565/123</a></p><p>Fastboot工具箱 : <a href="https://pan.keee.top:29565/123">https://pan.keee.top:29565/123</a></p><h2 id="提前准备boot镜像"><a href="#提前准备boot镜像" class="headerlink" title="提前准备boot镜像"></a>提前准备boot镜像</h2><p>首先在手机设置中确定系统版本，如MIUI10.3.5</p><p>在相关渠道找到该版本的线刷包（fastboot刷机包）</p><p>经过几次解压后，打开Image文件夹，找到boot.img拷贝到手机中备用</p><div class="tag-plugin image"><div class="image-bg"><img src="https://img.keee.top/202306/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-29%20131920.webp"/></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://img.keee.top/202306/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-29%20132036.webp"/></div></div><h1 id="操作流程"><a href="#操作流程" class="headerlink" title="操作流程"></a>操作流程</h1><h2 id="Root-手机（可选）"><a href="#Root-手机（可选）" class="headerlink" title="Root 手机（可选）"></a>Root 手机（可选）</h2><p>注：需要解锁Bootloader</p><h3 id="安装Magisk"><a href="#安装Magisk" class="headerlink" title="安装Magisk"></a>安装Magisk</h3><p>安装Magisk Delta，这是Magisk的一个好用的第三方分支</p><div class="tag-plugin image"><div class="image-bg"><img src="https://img.keee.top/202306/Screenshot_2023-06-29-13-41-28-085_com.miui.home.webp"/></div></div><p>打开后，在主页找到Magisk 安装</p><div class="tag-plugin image"><div class="image-bg"><img src="https://img.keee.top/202306/Screenshot_2023-06-29-13-41-33-805_io.github.huskydg.magisk.webp"/></div></div><p>选择选择并修补一个文件，选项不用打钩</p><p>在文件管理中找到先前准备的boot.img进行修补</p><div class="tag-plugin image"><div class="image-bg"><img src="https://img.keee.top/202306/Screenshot_2023-06-29-13-41-40-542_io.github.huskydg.magisk.webp"/></div></div><p>跑码跑到最后提示Done即为成功</p><p>再将修补好的boot.img（形如”magisk_patched_XXXXX.img”）拷贝至电脑</p><p>将手机关机，同时按住电源键和音量-键，出现Fastboot标志后松手，连接电脑</p><p>打开fastboot工具箱中的“打开CMD命令行.bat”</p><p>输入fastboot flash boot 修补好的boot镜像</p><h3 id="配置AccA、Termux"><a href="#配置AccA、Termux" class="headerlink" title="配置AccA、Termux"></a>配置AccA、Termux</h3><p>重启手机，安装Termux、AccA</p><p>打开Magisk Delta</p><p>在设置中开启Magisk Hide和强制使用超级用户列表</p><p>在超级用户列表中勾选系统界面、设置、以及Termux和AccA</p><p>打开AccA，授权超级用户权限</p><div class="tag-plugin image"><div class="image-bg"><img src="https://img.keee.top/202306/Screenshot_2023-06-29-13-39-28-056_mattecarra.accapp.webp"/></div></div><p>在配置一栏启用Default，并编辑开启电池闲置优先模式</p><div class="tag-plugin image"><div class="image-bg"><img src="https://img.keee.top/202306/Screenshot_2023-06-29-13-39-36-325_mattecarra.accapp.webp"/></div></div><h2 id="配置-Termux"><a href="#配置-Termux" class="headerlink" title="配置 Termux"></a>配置 Termux</h2><p>在系统设置中，将Termux的后台管理设为“无限制”</p><p>（各品牌UI设计不尽相同，不做阐释）</p><p>接下来就比较轻松了，Termux完全可以当成正常的Linux终端使用（补：完全不能！！！</p><p>（下载软件时注意架构为ARM64）</p><h2 id="固定-局域网IP"><a href="#固定-局域网IP" class="headerlink" title="固定 局域网IP"></a>固定 局域网IP</h2><p>在手机中WLAN设置中，将IP分配方式设置为静态，记住这一IP</p><p>如图</p><div class="tag-plugin image"><div class="image-bg"><img src="https://img.keee.top/202306/Screenshot_2023-06-29-14-02-19-526_com.android.settings.png"/></div></div><h1 id="部署-Alist"><a href="#部署-Alist" class="headerlink" title="部署 Alist"></a>部署 Alist</h1><p>Alist是一个轻量级的网盘管理项目，可以挂载很多网盘</p><p>这里尝试部署Alist项目在手机上</p><p>首先在Termux中输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install alist</span><br></pre></td></tr></table></figure><p>接着输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alist admin </span><br></pre></td></tr></table></figure><p>以确认admin密码</p><p>然后启动服务即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alist server</span><br></pre></td></tr></table></figure><p>这样Alist就运行在5244端口上了</p><p>在同一局域网内的设备，可以通过IP:端口的方式打开Alist面板</p><p>如192.168.31.77:5244</p><p>但是这样只能在内网访问，很不方便，需要将其开放至外网</p><h2 id="部署内网穿透"><a href="#部署内网穿透" class="headerlink" title="部署内网穿透"></a>部署内网穿透</h2><p>推荐服务商<a href="https://www.natfrp.com/">SakuraFrp</a></p><p>提供2条隧道，10Mbps网速，以及内地节点使用</p><p>下面以SakuraFrp为例部署内网穿透</p><h2 id="SakuraFrp网页端配置"><a href="#SakuraFrp网页端配置" class="headerlink" title="SakuraFrp网页端配置"></a>SakuraFrp网页端配置</h2><p>注册账号并进行实名认证（或者不实名使用日本NTT节点也可）</p><p>服务-隧道列表创建隧道，在普通节点中选择一个合适的节点</p><div class="tag-plugin image"><div class="image-bg"><img src="https://img.keee.top/202306/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-29%20141337.webp"/></div></div><p>这里我选择了离得比较近的成都电信7节点</p><p>隧道类型为TCP隧道，本地IP选择0.0.0.0</p><p>本地端口为5244</p><p>远程端口随意，之后访问要用到</p><p>自动HTTPS一栏要注意，如果选择自动会出现证书错误，影响体验</p><p>因此建议输入自己的域名，我这里输入pan.keee.top</p><p>到这里就创建成功了</p><p>接下来在操作中，选择配置文件，下载配置文件保存，后续要用</p><h2 id="SSL证书配置"><a href="#SSL证书配置" class="headerlink" title="SSL证书配置"></a>SSL证书配置</h2><p>由于绑定到了自己的域名下，因此需要自己去申请SSL证书</p><p>建议使用<a href="https://freessl.cn/">FreeSSL</a>申请免费证书</p><div class="tag-plugin image"><div class="image-bg"><img src="https://img.keee.top/202306/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-29%20142246.webp"/></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://img.keee.top/202306/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-29%20142326.webp"/></div></div><p>如图选择即可，CSR选择离线生成，用他提供的KeyManager软件导出Nginx格式的证书（包含.key和.crt两个格式的文件）</p><div class="tag-plugin image"><div class="image-bg"><img src="https://img.keee.top/202306/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-29%20142421.webp"/></div></div><p>重命名证书为 你的域名.key 和 你的域名.crt</p><p>如 pan.keee.top.crt</p><p>完成后拷贝到手机备用</p><h2 id="Termux文件交互"><a href="#Termux文件交互" class="headerlink" title="Termux文件交互"></a>Termux文件交互</h2><p>安装并打开MT管理器，按要求授权后点击左上角，再点击菜单右上角的三个点添加本地储存，选择Termux即可</p><div class="tag-plugin image"><div class="image-bg"><img src="https://img.keee.top/202306/Screenshot_2023-06-29-14-28-38-868_bin.mt.plus.png"/></div></div><div class="tag-plugin image"><div class="image-bg"><img src="https://img.keee.top/202306/Screenshot_2023-06-29-14-28-49-313_bin.mt.plus.png"/></div></div><p>然后将frpc.ini、网站证书一起复制到根目录</p><h3 id="Termux端配置"><a href="#Termux端配置" class="headerlink" title="Termux端配置"></a>Termux端配置</h3><p>根据<a href="https://doc.natfrp.com/frpc/usage.html">frpc 基本使用指南 | SakuraFrp 帮助文档 (natfrp.com)</a>，我们这里要使用的是Frpc（建议按照下列步骤进行，原指南不适用于Termux环境）</p><p>首先我们完善一下Termux组件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pkg install wget vim aria2 -y</span><br></pre></td></tr></table></figure><p>然后下载frpc并授权（可能会遇到TooManyRequests报错，等一会再下载即可）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget -O https://getfrp.sh/d/frpc_linux_arm64_noupx</span><br><span class="line"><span class="built_in">chmod</span> 755 frpc</span><br></pre></td></tr></table></figure><p>运行frpc</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./frpc</span><br></pre></td></tr></table></figure><p>如无误，会在3秒后自动载入配置文件并提示TCP隧道启动成功</p><p>并提示你通过某个域名:端口连接隧道</p><p>这时回到DNS网站，添加CNAME类型解析，记录值为提示域名</p><div class="tag-plugin image"><div class="image-bg"><img src="https://img.keee.top/202306/%E5%B1%8F%E5%B9%95%E6%88%AA%E5%9B%BE%202023-06-29%20143609.webp"/></div></div><p>但此时alist服务还没有运行，我们还需要将两者同时运行</p><p>回到Termux，按Crtl+C退出frpc</p><p>输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alist server &amp; ./frpc</span><br></pre></td></tr></table></figure><p>大功告成，接下来通过你绑定的域名打开Alist吧</p><p>（记得带端口号</p><h1 id="2023-8-27更新"><a href="#2023-8-27更新" class="headerlink" title="2023.8.27更新"></a>2023.8.27更新</h1><p>Termux 的文件结构是被魔改过的，而且在权限上有些bug</p><p>所以有能力刷机或者root手机的建议不再使用 Termux 部署 linux</p><p>可以使用 Ubuntu Touch （推荐）或者 PostmarketOS 等原生Linux发行版，体验会好很多</p><p>如果原生Linux对于使用的手机缺少驱动支持，再考虑使用 Linux Deploy 等在chroot容器上运行Linux发行版，体验会好很多</p><p>注:</p><ol><li>Docker需要内核支持，Android手机的内核是基于Linux魔改过的，无法运行Docker，因此在Android上就需要自行修改编译内核（Android手机的内核一般都是开源的）</li></ol><p>附小米内核源码仓库 <a href="https://github.com/MiCode/Xiaomi_Kernel_OpenSource">https://github.com/MiCode/Xiaomi_Kernel_OpenSource</a></p><p>clone以后可以自己先编译测试一下，再添加kernelsu、docker等特性编译（不然容易出问题</p><ol start="2"><li>sakurafrp也可以选择其他替代品，如mefrp，在实名认证和带宽方面更友好</li><li>可以用 caddy 自动配置tls，详见另一篇文章</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;家里有一台闲置的小米8（dipper），已经提前解锁Bootloader，中考后就想着在上面架设linux终端跑点东西&lt;/p&gt;
&lt;h1 id=&quot;准备过程&quot;&gt;&lt;a href=&quot;#准备过程&quot; class=&quot;headerlink&quot; title=&quot;准备过程&quot;&gt;&lt;/a&gt;准备过程&lt;/h</summary>
      
    
    
    
    
    <category term="瞎搞" scheme="https://blog.keee.top/tags/%E7%9E%8E%E6%90%9E/"/>
    
  </entry>
  
  <entry>
    <title>A卡、I卡如何愉快地使用UVR5</title>
    <link href="https://blog.keee.top/posts/37966.html"/>
    <id>https://blog.keee.top/posts/37966.html</id>
    <published>2023-05-27T09:34:58.000Z</published>
    <updated>2024-08-30T08:44:21.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="DirectML-分支解决方案"><a href="#DirectML-分支解决方案" class="headerlink" title="DirectML 分支解决方案"></a>DirectML 分支解决方案</h1><p>UVR5项目在GitHub有人为它做了DirectML分支，能够在支持DX12的GPU上启用GPU加速</p><p>项目链接：<a href="https://github.com/Aloereed/ultimatevocalremovergui-directml">Aloereed&#x2F;ultimatevocalremovergui-directml</a></p><p>但是该分支目前<strong>仅支持VR Architecture算法</strong></p><ol><li><p>git clone <a href="https://github.com/Aloereed/ultimatevocalremovergui-directml.git">https://github.com/Aloereed/ultimatevocalremovergui-directml.git</a></p></li><li><p>pip install -r requirements.txt</p></li><li><p>将已下载的模型拖入model文件夹（或者在GUI中下载）</p></li><li><p>python UVR.py</p></li></ol><h1 id="ROCM-解决方案"><a href="#ROCM-解决方案" class="headerlink" title="ROCM 解决方案"></a>ROCM 解决方案</h1><p>注意：此方案仅支持A卡，要求Linux环境（推荐Ubuntu20.04）</p><p>首先，安装显卡驱动和ROCM</p><p>可以通过其他人制作的一键工具，或者根据他人教程安装</p><p><a href="https://blog.csdn.net/u011450629/article/details/129793402">AMD显卡 Ubuntu 部署Stable DIffusion WebUI基于Pytorch2.0.0 Rocm5.4.2_Ha7nk的博客-CSDN博客</a></p><p>不过这个教程直接用的自带的python3进行安装（<strong>不推荐</strong>）</p><p>建议使用conda创建一个虚拟环境进行安装</p><p><a href="https://github.com/k7212519/ksd-launcher">k7212519&#x2F;ksd-launcher: AMD专用stable-diffusion-webui 图形化安装启动器 KSD-Launcher (github.com)</a></p><p>这个执行到安装完成驱动就行，实测可用</p><p>首先下载<a href="https://github.com/Anjok07/ultimatevocalremovergui/archive/refs/heads/master.zip">https://github.com/Anjok07/ultimatevocalremovergui/archive/refs/heads/master.zip</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt update &amp;&amp; <span class="built_in">sudo</span> apt upgrade</span><br><span class="line"><span class="built_in">sudo</span> apt-get update</span><br><span class="line"><span class="built_in">sudo</span> apt install ffmpeg</span><br><span class="line"><span class="built_in">sudo</span> apt install python3-pip</span><br><span class="line"><span class="built_in">sudo</span> apt-get -y install python3-tk</span><br><span class="line">pip3 install -r requirements.txt</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">要玩AI就别买A卡</summary>
    
    
    
    
    <category term="水文" scheme="https://blog.keee.top/tags/%E6%B0%B4%E6%96%87/"/>
    
  </entry>
  
  <entry>
    <title>红米9A “Windows未识别的USB设备” 深度救砖</title>
    <link href="https://blog.keee.top/posts/34206.html"/>
    <id>https://blog.keee.top/posts/34206.html</id>
    <published>2023-03-18T12:57:37.000Z</published>
    <updated>2025-09-30T14:49:31.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>用了一年多的低端机 Redmi 9a 感觉就非常的卡，放假有时间打算刷个 qeui 官改用用</p><p>解锁 bootloader 的时候，小米的官解当时还要等 23h，就选择了 mtk 强解 bl</p><p>第一次解很顺利，只是 fastboot 被阉割了点，问题不大</p><p>然而，线刷降级回 miui12.5.12 时不小心又给 bootloader 锁上了</p><p>当再次强解时，不幸翻车</p><p>手机黑屏，长按电源键无反应，电脑显示“Windows 未识别的 USB 设备”</p><p>（无法进入 rec 或 fastboot</p><h1 id="过程"><a href="#过程" class="headerlink" title="过程"></a>过程</h1><h2 id="拆后盖"><a href="#拆后盖" class="headerlink" title="拆后盖"></a>拆后盖</h2><p>注：该步骤或许可以省略，在保机器最好先别弄，若深刷步骤无法进行再拆后盖也行</p><ol><li><p><strong>取出 SIM 卡槽</strong>，很重要，不取无法撬开后盖</p></li><li><p><strong>用刀片或者指甲沿着屏幕边缘撬开后盖</strong>，塑料后盖直接闭着眼睛撬就行</p></li><li><p><strong>拧开主板保护盖的螺丝，取下电池排线</strong></p><div class="tag-plugin image"><div class="image-bg"><img src="https://img.keee.top/2023/03/10fdb4ee8a4a072c04df8d3640b875a0.webp"/></div></div></li><li><p><strong>半合上后盖</strong>，确保可以按到电源键，+&#x2F;-音量键</p></li></ol><h2 id="深度刷机"><a href="#深度刷机" class="headerlink" title="深度刷机"></a>深度刷机</h2><h3 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h3><p>链接：<a href="https://pan.quark.cn/s/f58efcfa9bfa">https://pan.quark.cn/s/f58efcfa9bfa</a></p><ol><li>解压后先进入 工具–驱动 安装里面的两个驱动</li><li>打开 SP FLASH TOOL 后，会有如图界面</li><li>导入 DA 文件，直接用 SP FLASH TOOL 里的 MTK_AllInOne_DA.bin 即可</li><li>导入配置文件，该文件在线刷包中的 Image 中，形如 MT6765_Android_scatter.txt 字样的文件</li></ol><p>最终效果如图 <div class="tag-plugin image"><div class="image-bg"><img src="https://img.keee.top/2023/03/7b0d295deaad1e7786e11c08dacaa761.webp"/></div></div></p><h3 id="稳深刷端口"><a href="#稳深刷端口" class="headerlink" title="稳深刷端口"></a>稳深刷端口</h3><p>mtk 的深刷端口是不稳定的，但可以用 bypass 工具稳定端口</p><p>注：此时手机黑屏，先不插数据线</p><ol><li>打开 工具–稳深刷模式</li><li>点击下方 <strong>Disable Auth</strong> 按钮，同时按下手机 <strong>电源键</strong> 和 **+ - 声量键 ** 三个键不放约 10s 后，再插入数据线</li><li>出现如图信息，即为成功，可以进行下一步操作 <div class="tag-plugin image"><div class="image-bg"><img src="https://img.keee.top/2023/03/9538242c0d66eb35ab781792009c6e92.webp"/></div></div></li></ol><h3 id="开始刷机"><a href="#开始刷机" class="headerlink" title="开始刷机"></a>开始刷机</h3><p>稳定了深刷端口后，在设备管理器中应该能看到 mtk 端口，没有那就重来上一个步骤</p><p>若一切正常，点击 SP FLASH TOOL 中的 <strong>下载</strong> 按钮，开始刷机（先跑红条，然后马上跑黄条即为正常）</p><p>刷完后会提示一个大绿勾，接着拔掉数据线，安装好电池排线和主板保护盖后合上后盖开机即可</p><p>最终成果，顺利开机</p><div class="tag-plugin image"><div class="image-bg"><img src="https://img.keee.top/2023/03/16c524b830d063b9f5dfad52b41f180f.webp"/></div></div><h2 id="遇到过的问题"><a href="#遇到过的问题" class="headerlink" title="遇到过的问题"></a>遇到过的问题</h2><h3 id="只跑红条，报错-ERROR-STATUS-EXT-RAM-EXCEPTION-0xC0050005"><a href="#只跑红条，报错-ERROR-STATUS-EXT-RAM-EXCEPTION-0xC0050005" class="headerlink" title="只跑红条，报错 ERROR STATUS_EXT_RAM_EXCEPTION (0xC0050005)"></a>只跑红条，报错 ERROR <em>STATUS_EXT_RAM_EXCEPTION</em> (0xC0050005)</h3><p>一般为线刷包有问题，推荐使用 miui12.5 的最早期版本</p><p>下载地址去 miuirom 找对应型号即可</p><h3 id="稳深刷端口失败"><a href="#稳深刷端口失败" class="headerlink" title="稳深刷端口失败"></a>稳深刷端口失败</h3><p>多试几次就行了（</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p><strong>搞机有风险，刷机需谨慎</strong></p><p>推荐走官解 bl 锁（非小米机型除外</p><p>新手不要在晚上刷机（大雾，不然睡不了觉</p>]]></content>
    
    
    <summary type="html">没事瞎折腾</summary>
    
    
    
    <category term="水文" scheme="https://blog.keee.top/categories/%E6%B0%B4%E6%96%87/"/>
    
    
    <category term="瞎折腾" scheme="https://blog.keee.top/tags/%E7%9E%8E%E6%8A%98%E8%85%BE/"/>
    
  </entry>
  
  <entry>
    <title>a卡视频开启插帧功能</title>
    <link href="https://blog.keee.top/posts/59508.html"/>
    <id>https://blog.keee.top/posts/59508.html</id>
    <published>2022-12-15T15:56:51.000Z</published>
    <updated>2025-09-30T14:49:31.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写在开头"><a href="#写在开头" class="headerlink" title="写在开头"></a>写在开头</h1><p>月考结束后又是快乐的网课时光，所以决定水一篇文章证明我还活着（大雾</p><p>我们知道一般的视频帧率大多约为24fps，而通过 <strong>Bluesky Frame Rate Converter 视频滤镜</strong>我们可以将24fps补全至60fps ( 甚至更高 ) 以<strong>增加视频流畅度</strong></p><p>当然，这个有硬件限制，那就是必须是GCN架构的AMD GPU</p><p>2024更：RDNA架构也可用</p><hr><h1 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h1><ul><li><strong>GCN架构的GPU（当然要装驱动</strong></li><li><a href="https://potplayer.daum.net/">Potplayer播放器</a></li><li><a href="https://bluesky-soft.com/en/BlueskyFRC.html">Bluesky Frame Rate Converter 视频滤镜</a></li></ul><h2 id="如何判断我的GPU是不是GCN架构？"><a href="#如何判断我的GPU是不是GCN架构？" class="headerlink" title="如何判断我的GPU是不是GCN架构？"></a>如何判断我的GPU是不是GCN架构？</h2><p>一般来说，AMD的独立显卡系列从HD 7000系列开始 <del>(不会还有人在用这么老的显卡吧</del>，一直到RX 500系列都是用的GCN架构</p><p>核心显卡应该是笔记本系列<strong>锐龙5000系及其以前</strong>的几乎所有型号，台式机系列<strong>除锐龙7000系</strong>所有型号也都是GCN架构</p><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><p>在准备并安装好上述软件后，就可以开始我们的配置工作了</p><h2 id="Bluesky-FRC配置"><a href="#Bluesky-FRC配置" class="headerlink" title="Bluesky FRC配置"></a>Bluesky FRC配置</h2><p>首先，打开刚刚安装的Bluesky FRC</p><p>按照如图进行配置即可，部分配置可以自己微调</p><p>比如:</p><ul><li>Output的输出帧率可以根据自身设备情况调，我的显示器是75Hz所以调到了72p，如果是60Hz的用60p即可</li></ul><div class="tag-plugin image"><div class="image-bg"><img src="https://img.keee.top/202212/eb379e85b24f6148bb73285e71cd272c.webp"/></div></div><h2 id="AMD驱动配置"><a href="#AMD驱动配置" class="headerlink" title="AMD驱动配置"></a>AMD驱动配置</h2><p>首先，桌面找个空白处右键，选择<strong>AMD Software: Adrenalin Edition</strong></p><div class="tag-plugin image"><div class="image-bg"><img src="https://img.keee.top/202212/f60859fd6676575e22d705d0b1992eb7.webp"/></div></div><p>打开后，直接在右上角搜索框，输入：”<strong>音频和视频设置</strong>“</p><p>在<strong>视频配置文件</strong>一项中，选择自定义，然后会出现一个”<strong>自定义选项</strong>“</p><p>找到<strong>AMD Fluid Motion Video</strong>并开启即可</p><div class="tag-plugin image"><div class="image-bg"><img src="https://img.keee.top/202212/6c6a8604e5b5c9c32560e6264ca423b8.webp"/></div></div><h2 id="Potplayer-配置"><a href="#Potplayer-配置" class="headerlink" title="Potplayer 配置"></a>Potplayer 配置</h2><p>随便打开一个视频，右键找到”<strong>选项</strong>“</p><p>左侧侧边栏选择<strong>滤镜–全局滤镜优先权</strong></p><p>右侧点击<strong>添加系统滤镜</strong>，找到”<strong>Bluesky Frame Rate Converter</strong>“并添加</p><p>然后，别忘了优先顺序选择为”<strong>强制使用</strong>“</p><div class="tag-plugin image"><div class="image-bg"><img src="https://img.keee.top/202212/0f72daacb097fecd29fea4ec4055a764.webp"/></div></div><h1 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h1><p>至此，所有配置工作都结束了，来看一下效果如何</p><div class="tag-plugin image"><div class="image-bg"><img src="https://img.keee.top/202212/57454b26023c196664bfa8810d17be47.webp"/></div></div><p>可以看到帧率显示“23.976 -&gt; 71.92”，这就代表插帧成功了</p><p>当然这种即时插帧效果比较一般，而且像动漫这些还是得24fps看起来才对味</p><h1 id="深度折腾"><a href="#深度折腾" class="headerlink" title="深度折腾"></a>深度折腾</h1><p>以上配置都是基于Potplayer进行的，这个播放器很有意思，可以搭配madVR+LAV实现一些很惊艳的视频显示效果</p><p>（当然我这种用着廉价显示器的，看着低码率资源的菜鸡就不用折腾就是了&#96;&#96;</p>]]></content>
    
    
    <summary type="html">A卡特有的插帧功能</summary>
    
    
    
    <category term="水文" scheme="https://blog.keee.top/categories/%E6%B0%B4%E6%96%87/"/>
    
    
    <category term="插帧" scheme="https://blog.keee.top/tags/%E6%8F%92%E5%B8%A7/"/>
    
  </entry>
  
  <entry>
    <title>高考化学易考易错知识点总结</title>
    <link href="https://blog.keee.top/posts/10471.html"/>
    <id>https://blog.keee.top/posts/10471.html</id>
    <published>2022-11-30T22:46:13.000Z</published>
    <updated>2024-08-30T08:44:21.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h2 id="笔者的碎碎念"><a href="#笔者的碎碎念" class="headerlink" title="笔者的碎碎念"></a>笔者的碎碎念</h2><p>个人感觉高考化学思维要求不高，很多地方只是机械记忆即可。虽然如此，这里面的坑还是太多了</p><p>所以就总结一下自己遇到的易错点（顺便也是复习了</p><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>高中化学教学主要使用4本教材</p><ul><li>必修一，比较简单，有点初高中衔接的感觉，没有思维障碍（？</li><li>选择性必修一，主讲化学反应理论类，比较抽象（个人认为最难的部分</li><li>选择性必修二，主讲结构，需要记忆和一定的空间想象能力</li><li>选择性必修三，专讲有机物及有机反应，重推理和记忆能力</li></ul><h1 id="正片"><a href="#正片" class="headerlink" title="正片"></a>正片</h1><h2 id="选择题"><a href="#选择题" class="headerlink" title="选择题"></a>选择题</h2><h3 id="T1"><a href="#T1" class="headerlink" title="T1"></a>T1</h3><p>这个题目一般是考察基础概念，没有什么难度</p><h3 id="T2-5"><a href="#T2-5" class="headerlink" title="T2-5"></a>T2-5</h3><p>考察方程式的书写，一般注意一下几点：</p><ol><li>最简单的，配平了没有</li><li>考虑反应能否发生，氧化性？酸性？条件？</li><li>其次，离子方程式考虑各物质的存在形式（石灰乳？石灰水？</li><li>产物在该环境下能否存在（酸性？碱性？</li></ol><p>考察阿伏伽德罗常数（感觉易错），注意：</p><ol><li>反应可逆与否，诸如合成氨、盐的水解等等</li></ol><p>离子共存，没什么特别的</p><h2 id="T6"><a href="#T6" class="headerlink" title="T6"></a>T6</h2><p>考察有机物，常见已混概念：</p><ol><li>同系物，一定要求同类，不是差个(CH2)就可以！</li><li>分子式，记得环要算不饱和度、有N元素存在H的数量会有变化！</li><li>共面共线问题，注意问的是可能还是一定</li><li>酯类的水解，注意考虑有酚类生成的情况</li><li>未完待续</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;h2 id=&quot;笔者的碎碎念&quot;&gt;&lt;a href=&quot;#笔者的碎碎念&quot; class=&quot;headerlink&quot; title=&quot;笔者的碎碎念&quot;&gt;&lt;/a&gt;笔</summary>
      
    
    
    
    <category term="学习" scheme="https://blog.keee.top/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="学习" scheme="https://blog.keee.top/tags/%E5%AD%A6%E4%B9%A0/"/>
    
    <category term="化学" scheme="https://blog.keee.top/tags/%E5%8C%96%E5%AD%A6/"/>
    
    <category term="总结" scheme="https://blog.keee.top/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>白嫖gpu云服务器部署webui方案汇总</title>
    <link href="https://blog.keee.top/posts/39808.html"/>
    <id>https://blog.keee.top/posts/39808.html</id>
    <published>2022-11-23T22:26:40.000Z</published>
    <updated>2024-08-31T02:35:46.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Paperspace-方案（不推荐）"><a href="#Paperspace-方案（不推荐）" class="headerlink" title="Paperspace 方案（不推荐）"></a>Paperspace 方案（不推荐）</h1><p>官网：</p><p><a href="https://www.paperspace.com/">https://www.paperspace.com/</a></p><p>这里是自己写的终端命令全流程，直接 CV 到终端回车即可</p><p>用的 anythingv3.0 的 3.7g 模型，也可以用别的，自己改，但不能超过 4.5g（数据瞎估的，反正太大存不下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/AUTOMATIC1111/stable-diffusion-webui</span><br><span class="line"><span class="built_in">cd</span> stable-diffusion-webui/</span><br><span class="line"><span class="built_in">mkdir</span> -p /notebooks/stable-diffusion-webui/models/Stable-diffusion /notebooks/stable-diffusion-webui/models/hypernetworks</span><br><span class="line">wget  -P /notebooks/stable-diffusion-webui/models/Stable-diffusion/  <span class="string">&quot;https://huggingface.co/Linaqruf/anything-v3.0/resolve/main/Anything-V3.0-pruned.ckpt&quot;</span></span><br><span class="line">COMMANDLINE_ARGS=<span class="string">&quot;--exit&quot;</span> REQS_FILE=<span class="string">&quot;requirements.txt&quot;</span> python launch.py</span><br><span class="line">python lauch.py --share</span><br></pre></td></tr></table></figure><p>最后一步的 “INFO bore_cli:: client: listening at bore.pub: xxxxx” 中的 pore.pub: xxxxx 就是生成的隧道链接，直接打开即可</p><p>只能连续用 6h 用完了重启即可，没有限额</p><h1 id="Google-Colab-方案（不可用）"><a href="#Google-Colab-方案（不可用）" class="headerlink" title="Google Colab 方案（不可用）"></a>Google Colab 方案（不可用）</h1><h1 id="Kaggle（推荐）"><a href="#Kaggle（推荐）" class="headerlink" title="Kaggle（推荐）"></a>Kaggle（推荐）</h1><p>官网：<a href="https://www.kaggle.com/">https://www.kaggle.com</a></p><p>直接创建一个空白的 notebook 即可</p><p>记得验证手机号以启用 GPU（推荐使用 T4*2 并使用半精度）和 Internet 链接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/AUTOMATIC1111/stable-diffusion-webui</span><br><span class="line"><span class="built_in">cd</span> stable-diffusion-webui/</span><br><span class="line"><span class="built_in">mkdir</span> -p /kaggle/working/stable-diffusion-webui/models/Stable-diffusion /notebooks/stable-diffusion-webui/models/hypernetworks</span><br><span class="line">wget  -P /kaggle/working/stable-diffusion-webui/models/Stable-diffusion/  <span class="string">&quot;https://huggingface.co/gsdf/Counterfeit-V3.0/resolve/main/Counterfeit-V3.0_fp16.safetensors&quot;</span></span><br><span class="line">COMMANDLINE_ARGS=<span class="string">&quot;--exit&quot;</span> REQS_FILE=<span class="string">&quot;requirements.txt&quot;</span> python launch.py</span><br><span class="line">python lauch.py --share</span><br></pre></td></tr></table></figure><p>注：模型用的是 Counterfeit-V3.0_fp16，感觉还不错</p><div class="tag-plugin image"><div class="image-bg"><img src="https://bu.dusays.com/2024/08/31/66d27fcbdfb59.png"/></div></div>]]></content>
    
    
    <summary type="html">白嫖才是第一生产力（（</summary>
    
    
    
    <category term="水文" scheme="https://blog.keee.top/categories/%E6%B0%B4%E6%96%87/"/>
    
    
    <category term="白嫖" scheme="https://blog.keee.top/tags/%E7%99%BD%E5%AB%96/"/>
    
    <category term="GPU云服务器" scheme="https://blog.keee.top/tags/GPU%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>给你的A卡换张皮--强刷vBIOS开核</title>
    <link href="https://blog.keee.top/posts/59890.html"/>
    <id>https://blog.keee.top/posts/59890.html</id>
    <published>2022-11-21T21:48:30.000Z</published>
    <updated>2025-09-30T14:49:31.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写在开头"><a href="#写在开头" class="headerlink" title="写在开头"></a>写在开头</h1><p>开核，一个AMD的产品特有的词汇。</p><p>对于CPU而言，在Zen架构之前的系列里，部分特定批次的CPU可以在主板BIOS中打开那些被AMD屏蔽掉的可用核心（都是稀缺货</p><p>对于GPU而言，同样也是打开AMD屏蔽掉的那些流处理器，不过显卡不能通过像CPU那样调节BIOS轻松实现，但是它一般具有普适性</p><p>即只要是这个核心的显卡，就能通过强刷vBIOS来打开被屏蔽的流处理器</p><p>（有时为了让黑苹果免驱（如RX580 2048SP刷RX570），为了变身专业卡（Vega56刷WX8200）等，我们也许也会称这种行为叫开核，但这并不是严格意义上的开核，这顶多算换了个皮</p><h1 id="实践前提"><a href="#实践前提" class="headerlink" title="实践前提"></a>实践前提</h1><h2 id="确认条件"><a href="#确认条件" class="headerlink" title="确认条件"></a>确认条件</h2><p>首先，你先要有一块能够开核（或者开核有实际意义的）显卡</p><p>一般来说，有如下常见型号:（箭头具有传递性，也可以反着刷，只要你愿意XD）</p><ol><li><p>RX470D<a href="%22%E5%8F%AF%E4%BB%A5%E4%BA%A7%E7%94%9F%E9%A2%9D%E5%A4%96%E7%9A%84%E6%B5%81%E5%A4%84%E7%90%86%E5%99%A8%22">^1</a>–&gt;RX470–&gt;RX580 2048SP</p></li><li><p>RX460 –&gt; RX560</p></li><li><p>RX560d<a href="%22%E5%8F%AF%E4%BB%A5%E4%BA%A7%E7%94%9F%E9%A2%9D%E5%A4%96%E7%9A%84%E6%B5%81%E5%A4%84%E7%90%86%E5%99%A8%22">^1</a> –&gt; RX560</p></li><li><p>RX480 –&gt; RX580 –&gt; RX590GME</p></li><li><p>RX Vega56 –&gt; RX Vega64</p></li></ol><h2 id="准备vBIOS"><a href="#准备vBIOS" class="headerlink" title="准备vBIOS"></a>准备vBIOS</h2><p>刷VBIOS具有极高的风险，要随时做好刷黑变砖的准备!</p><p>1.第一步打开<a href="https://www.techpowerup.com/download/techpowerup-gpu-z/">GPU-Z </a>“（如果没有，曾经作为一名图钉，我推荐<a href="http://www.tbtool.cn/">图吧工具箱</a>，doge）</p><p>如果没有问题的话，你应该看到这个界面</p><div class="tag-plugin image"><div class="image-bg"><img src="https://img.keee.top/202212/cdbd0cb24a4c2126ae7fea631d1405b6.webp"/></div></div><p>这是对你现在使用的VBIOS的备份，非常重要！！</p><p>2.点击如图标出的小箭头，选择一个你可以找到的地方保存下来</p><p>（同时记住标红的几个参数，图中“4096MB”处对应你的显存大小，“Hynix”对于你的显存品牌</p><p>3.接下来，进入<a href="https://www.techpowerup.com/vgabios/">VGA Bios Collection | TechPowerUp</a>检索适合你的显卡的VBIOS</p><p>这里简单说下选择VBIOS的原则：</p><ol><li>核心一样（RX480 4G–&gt;RX580 4G是允许的，RX460 –&gt; RX580是不被允许的）</li><li>显存容量，品牌一样（RX480 4G尔必达 –&gt; RX480 4G三星不被允许，RX480 4G海力士 –&gt; RX580 4G海力士 是允许的）</li></ol><p>如图就是RX480 4G（海力士）对应的一个比较好的VBIOS（高亮的地方均符合要求</p><div class="tag-plugin image"><div class="image-bg"><img src="https://img.keee.top/202212/0c0f91c8b63cabf819cb2264bfdb2699.jpg"/></div></div><hr><h1 id="刷入vBIOS"><a href="#刷入vBIOS" class="headerlink" title="刷入vBIOS"></a>刷入vBIOS</h1><ol><li><p>到<a href="https://www.techpowerup.com/download/ati-atiflash/">AMDVBFlash &#x2F; ATI ATIFlash (3.31) Download | TechPowerUp</a>下载软件 AMDVBFlash 并解压至一个你找得到的地方</p></li><li><p>将提前准备的待刷入的vBIOS，与amdvbflash放置在同一文件夹</p></li><li><p>右键，选择“在此处打开命令窗口”，输入</p><p>amdvbflash.exe -p -f 0 xxx.rom</p><p>其中，xxx.rom为准备的vBIOS</p></li><li><p>如果一切正常，他应该会提示你“Restart System To Complete VBIOS Update.”</p><div class="tag-plugin image"><div class="image-bg"><img src="https://i0.hdslb.com/bfs/album/c66ffba0beca04d8bc6d2816544a0ad3c8246cbc.jpg"/></div></div></li><li><p>重启电脑后，打开GPU-Z看看效果如何</p><p>如图，是我用RX480 4G刷的RX580 4G的成品图</p></li></ol><div class="tag-plugin image"><div class="image-bg"><img src="https://img.keee.top/202212/851b780760bcef4a1530a2ac2088c32f.webp"/></div></div><h1 id="刷黑救砖"><a href="#刷黑救砖" class="headerlink" title="刷黑救砖"></a>刷黑救砖</h1><p>刷vBIOS是一件有极大风险的事（失败了显卡直接变砖</p><p>不过一般而言，仅是刷错了vBIOS的话，显卡都还能救回来</p><h2 id="对于有双vBIOS开关的卡"><a href="#对于有双vBIOS开关的卡" class="headerlink" title="对于有双vBIOS开关的卡"></a>对于有双vBIOS开关的卡</h2><p>有双vBIOS开关的卡救卡难度是最低的</p><p>如果你发现刷入vBIOS后开机不过自检&#x2F;黑屏，断电关机，切换vBIOS开关重启</p><p>进入系统后，直接切换vBIOS开关，依照<a href="#%E5%88%B7%E5%85%A5vBIOS">刷入vBIOS</a>的方法再次强刷回先前备份的原vBIOS</p><p>（因此说备份vBIOS很重要！）</p><h2 id="对于没双vBIOS开关的"><a href="#对于没双vBIOS开关的" class="headerlink" title="对于没双vBIOS开关的"></a>对于没双vBIOS开关的</h2><p>可以在DOS环境下盲刷，具体教程：</p><p><a href="https://tieba.baidu.com/p/5500803523">https://tieba.baidu.com/p/5500803523</a></p><p>可以在PE（Windows）环境下盲刷，对电脑要有相当的熟悉才可以做到：</p><p><a href="https://tieba.baidu.com/p/6728462628">https://tieba.baidu.com/p/6728462628</a></p><p>还有一种要用到编程器，这里就不涉及了（我没有也不会</p><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p>刷vBIOS有意思归有意思，但他最后有没有用嘛，就是另一回事了</p><p>如我的RX480 4G刷上RX580 4G后</p><p>待机功耗52W –&gt; 90W</p><p>游戏功耗 90Ww –&gt; 148W</p><p>功耗增加了50%以上，然而性能反而下降了10%左右</p><p>因为虽然RX480 和RX580本质上没什么区别，都是魔改GCN北极星架构</p><p>但是RX480供电为8pin TDP约120W，而RX580为8+6pin TDP约180W</p><p>刷入RX580的vBIOS后，针对RX480设计的供电和散热纷纷撞墙，因此性能不增反减</p><p>不过也不失为一种打发时间的好方法doge</p>]]></content>
    
    
    <summary type="html">开核是A卡的优秀传统，不能丢doge</summary>
    
    
    
    <category term="水文" scheme="https://blog.keee.top/categories/%E6%B0%B4%E6%96%87/"/>
    
    
    <category term="电脑" scheme="https://blog.keee.top/tags/%E7%94%B5%E8%84%91/"/>
    
    <category term="显卡" scheme="https://blog.keee.top/tags/%E6%98%BE%E5%8D%A1/"/>
    
  </entry>
  
  <entry>
    <title>电脑续命四年计划(3)-CPU升级2667v2</title>
    <link href="https://blog.keee.top/posts/62402.html"/>
    <id>https://blog.keee.top/posts/62402.html</id>
    <published>2022-11-17T13:12:05.000Z</published>
    <updated>2025-09-27T14:55:56.000Z</updated>
    
    <content type="html"><![CDATA[<script defer src="https://cdn.jsdmirror.com/npm/echarts@5.4.0/dist/echarts.min.js" data-pjax type="text/javascript"></script><h1 id="写在开头"><a href="#写在开头" class="headerlink" title="写在开头"></a>写在开头</h1><p>这篇水文原本应该很久之前就动笔的，不过因为插进来个可恶的线上半期被迫延期</p><p>实际上，我也不是第一次换这台电脑的CPU了，总的路线图如下</p><p>E5-2670 –&gt; E5-1620v2 –&gt; E5-2667v2</p><p>第一次换呢，是为了提升单核性能，牺牲了多核性能（因为当时玩的游戏多核优化都很烂）</p><p>这一次换就是既要多核性能，还要单核性能（因此2667v2在当时是相当昂贵的U</p><hr><h1 id="CPU-Z参数图"><a href="#CPU-Z参数图" class="headerlink" title="CPU-Z参数图"></a>CPU-Z参数图</h1><h2 id="E5-1620V2"><a href="#E5-1620V2" class="headerlink" title="E5-1620V2"></a>E5-1620V2</h2><img src="https://i0.hdslb.com/bfs/album/9aae0b9ca05d1f30ca864a4883a02b0a284057bb.webp" alt = "1620v2" referrerPolicy="no-referrer" /><p>E5-1620v2参数实际上标得很迷惑，TDP标到了130W，但实际测试中顶天跑个90W（石锤了，1620v2就是i7-3770马甲）</p><h2 id="E5-2667V2"><a href="#E5-2667V2" class="headerlink" title="E5-2667V2"></a>E5-2667V2</h2><div class="tag-plugin image"><div class="image-bg"><img src="https://i0.hdslb.com/bfs/album/ab3cf21546741c92dc6f2d07f2c8de21b51db7c9.webp"/></div></div><p>可以看到实际上两块CPU因为同代产品，都是用的Ivy-bridge架构（也就是3代酷睿架构），因此IPC应该相近</p><p>且2667v2的睿频跑的要比1620v2要低一些（1620v2全核3.7GHz，2667V2全核3.6GHz）</p><p>然而实测下来，2667v2的单线程跑分比1620v2还高</p><p>猜测有可能是因为，2667v2有比1620v2大得多的三级缓存（不过一般来说，三缓只对游戏体验的有较大的影响</p><hr><h1 id="不严谨理论测试"><a href="#不严谨理论测试" class="headerlink" title="不严谨理论测试"></a>不严谨理论测试</h1><div id="cpu-test1" style="width: 85%;height:400px;"></div><script data-pjax>var e1 = function(){  var myChart = echarts.init(document.getElementById('cpu-test1'));var option = {  title: {          text: 'CPU理论性能测试成绩'        },  legend: {},  tooltip: {},  dataset: {    dimensions: ['product', 'E5-1620v2', 'E5-2667v2', 'i5-10400F'],    source: [      {        product: 'CPU-Z单线程',        'E5-1620v2': 372.3,        'E5-2667v2': 376.4,        'i5-10400F': 479.1      },      {        product: 'CPU-Z多线程',        'E5-1620v2': 1862,        'E5-2667v2': 3536.8,        'i5-10400F': 3623.4      },      {        product: 'R15多线程',        'E5-1620v2': 621,        'E5-2667v2': 1141,        'i5-10400F': 1291      },      {        product: '国际象棋(取1/10)',        'E5-1620v2': 1331.4,        'E5-2667v2': 2202.2,        'i5-10400F': 2246.8      }    ]  },  xAxis: { type: 'category' },  yAxis: {},  // Declare several bar series, each will be mapped  // to a column of dataset.source by default.  series: [{ type: 'bar' }, { type: 'bar' }, { type: 'bar' }]}; myChart.setOption(option);  // 刷新调整  window.onresize = function () {    myChart.resize();  }}e1();    document.addEventListener('pjax:complete', function () {        e1();    });</script><p>这里为了方便对比洋垃圾v2与现在CPU性能差距，引入了一个I5-10400F的参考对比数据</p><p>不过不难看出，E5-2667v2几乎可以跟i5-10400f打个五五开（当然IPC是远远不如，尤其是面对新出的13代</p><p>而理论多线程性能约为1620v2的两倍</p><hr><h1 id="不严谨游戏测试"><a href="#不严谨游戏测试" class="headerlink" title="不严谨游戏测试"></a>不严谨游戏测试</h1><h2 id="战地1-64人模式"><a href="#战地1-64人模式" class="headerlink" title="战地1 64人模式"></a>战地1 64人模式</h2><p>画质设置: 高</p><p>环境温度:不知道</p><h3 id="E5-1620v2"><a href="#E5-1620v2" class="headerlink" title="E5-1620v2"></a>E5-1620v2</h3><div class="tag-plugin image"><div class="image-bg"><img src="https://i0.hdslb.com/bfs/album/d6cf9a56ff0e11458243180771a60b1bb66a0fd9.webp"/></div></div><p>在非交战区域，<strong>FPS大约在69帧</strong>左右，勉强能玩</p><p>CPU占用跑到了79%，后台基本上不能挂东西</p><p>之前就某一次游戏全程掉帧，预估平均fps只有20左右<del>（结果发现是后台挂了<a href = "https://oi.saiodgm.gq">@Saiodgm</a>的网站没有休眠，把CPU吃到了99%</del></p><p>GPU跑到了100%，还是很给力的（GPU一般都最好跑满，跑不满要么是优化问题，要么是其他硬件有瓶颈限制了发挥）</p><h3 id="E5-2667V2-1"><a href="#E5-2667V2-1" class="headerlink" title="E5-2667V2"></a>E5-2667V2</h3><div class="tag-plugin image"><div class="image-bg"><img src="https://i0.hdslb.com/bfs/album/51204f2e0537e138d55131495ac9b2eee9673f76.webp"/></div></div><p>在同一场景下，E5-2667v2为<strong>76fps</strong>，要比E5-1620v2高出7fps</p><p>而且CPU的占用仅有33%（缺点是功耗的温度都有显著上升</p><h2 id="战地5-64人线上模式"><a href="#战地5-64人线上模式" class="headerlink" title="战地5 64人线上模式"></a>战地5 64人线上模式</h2><p>战地系列游戏特有的大战场场景非常适合用来测试CPU实际性能（而且优化做的很好，不像某P社只会用CPU0</p><p>在战地5中对CPU性能的要求比前作战地1还要高得多</p><p>画质设置：中（开启DX12和未来帧渲染，关闭垂直同步）</p><p>（原本想开高的，但是开高的话就爆显存了。。。）</p><p>环境温度：不知道</p><h3 id="E5-1620V2-1"><a href="#E5-1620V2-1" class="headerlink" title="E5-1620V2"></a>E5-1620V2</h3><div class="tag-plugin image"><div class="image-bg"><img src="https://i0.hdslb.com/bfs/album/290712973e1b65cab2ecb55c55fc72c7b11a5a16.webp"/></div></div><p>野外非交战区域，<strong>FPS大约为76</strong></p><p>此时CPU占用已经跑到97%了，已经接近满载，后台几乎不能挂东西（否则会严重掉帧</p><p>GPU跑到了98%，也还不错，基本性能是发挥到位了的</p><p>游戏过程偶尔会掉帧，在中心交战区域尤其显著</p><p>（这就是为啥我打战地1却不玩战地5的部分原因</p><p>（当然战地5的画风和武器手感不喜欢也是</p><h3 id="E5-2667V2-2"><a href="#E5-2667V2-2" class="headerlink" title="E5-2667V2"></a>E5-2667V2</h3><div class="tag-plugin image"><div class="image-bg"><img src="https://i0.hdslb.com/bfs/album/45c7f0027e573c4731f11408752c5fdacbc567e9.webp"/></div></div><p>同样野外非交战场景，<strong>FPS大约为100</strong></p><p>遇到对CPU性能要求更高的战地5的时候，2667v2的双倍性能就得到了充分体现</p><p>这里CPU占用率仅为48%（后台可以随便挂了属于是），GPU占用率跑到了100%</p><p>帧数也相比1620v2有很大进步，76FPS –&gt; 100FPS</p><p><del>CPU功耗和温度也获得了显著提升</del></p><h3 id="表格汇总"><a href="#表格汇总" class="headerlink" title="表格汇总"></a>表格汇总</h3><div id="cpu-test2" style="width: 85%;height:400px;"></div><script data-pjax="" type="text/javascript">var myChart = echarts.init(document.getElementById('cpu-test2'));var option = {  title: {          text: 'CPU实际游戏帧率'        },  legend: {},  tooltip: {},  dataset: {    dimensions: ['product', 'E5-1620v2', 'E5-2667v2'],    source: [      {        product: '战地1',        'E5-1620v2': 69,        'E5-2667v2': 78      },      {        product: '战地5',        'E5-1620v2': 76,        'E5-2667v2': 100      }    ]  },  xAxis: { type: 'category' },  yAxis: {},  // Declare several bar series, each will be mapped  // to a column of dataset.source by default.  series: [{ type: 'bar' }, { type: 'bar' }, { type: 'bar' }]}; myChart.setOption(option);  // 刷新调整  window.onresize = function () {    myChart.resize();  }</script><hr><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>总的来说，这次升级还是非常值得的，不过这也仅限于升级来说</p><p>目前1620v2市场价90元左右（市场上需求真的很小，我挂咸鱼很久都卖不出去</p><p>2667v2市场价180元左右（还是最近价格大跳水才有的性价比，几个月前的价格是现在的好几倍</p><p>当然，如果你是全新装机，X79&#x2F;X99这类<strong>洋垃圾一定要划入黑名单</strong>，老平台在最近的新架构面前没有<strong>任何性价比</strong></p>]]></content>
    
    
    <summary type="html">月考前还在折腾这些有的没的...</summary>
    
    
    
    <category term="电脑续命四年计划" scheme="https://blog.keee.top/categories/%E7%94%B5%E8%84%91%E7%BB%AD%E5%91%BD%E5%9B%9B%E5%B9%B4%E8%AE%A1%E5%88%92/"/>
    
    
    <category term="电脑" scheme="https://blog.keee.top/tags/%E7%94%B5%E8%84%91/"/>
    
    <category term="生活" scheme="https://blog.keee.top/tags/%E7%94%9F%E6%B4%BB/"/>
    
    <category term="评测" scheme="https://blog.keee.top/tags/%E8%AF%84%E6%B5%8B/"/>
    
  </entry>
  
  <entry>
    <title>一些奇怪的想法</title>
    <link href="https://blog.keee.top/posts/27613.html"/>
    <id>https://blog.keee.top/posts/27613.html</id>
    <published>2022-10-22T22:05:23.000Z</published>
    <updated>2025-02-23T03:40:45.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写在开头"><a href="#写在开头" class="headerlink" title="写在开头"></a>写在开头</h1><p>​emmm…这个页面呢, 主要是用来记录一些平时脑子里突然产生的一些想法或者说问题 <del>(像什么上课走神的时候)</del></p><p>这些可能有简洁明了的答案, 但也有可能没有,  但我一定尽力去寻找并作一些分享吧</p><h1 id="Part1-摩擦起电的一些思考"><a href="#Part1-摩擦起电的一些思考" class="headerlink" title="Part1 摩擦起电的一些思考"></a>Part1 摩擦起电的一些思考</h1><p>​物理很早以前就已经讲了摩擦起电了, 但是这个内容是在更深层次的化学知识学习之前讲的, 并且对具体原理并没有作要求。而我们在学习了更多化学知识后， 会发现有些内容是难以理解的</p><h2 id="课本原文的引发"><a href="#课本原文的引发" class="headerlink" title="课本原文的引发"></a>课本原文的引发</h2><blockquote><p>两个物体互相摩擦时，因为不同物体的原子核束缚核外电子的本领不同，所以其中必定有一个物体失去一些电子，另一个物体得到多余的电子。</p></blockquote><p>​课本原文似乎在最初学习时是可以理解的, 但学过一点点化学后就不禁会有疑问:</p><ol><li><strong>许多物质是由分子构成的, 这些分子的”对电子的束缚能力”又跟什么有关</strong></li><li><strong>许多物质化学构成中各原子是保持着相对稳定结构的，而摩擦起电的电子得失不会打破这种相对稳定结构引起物质的不稳定吗</strong>（而我们又知道摩擦起电被认为是物理变化）</li></ol><h2 id="摩擦起电的电子得失问题"><a href="#摩擦起电的电子得失问题" class="headerlink" title="摩擦起电的电子得失问题"></a>摩擦起电的电子得失问题</h2><h3 id="Generic-Electron-Cloud-Potential模型"><a href="#Generic-Electron-Cloud-Potential模型" class="headerlink" title="Generic Electron-Cloud-Potential模型"></a>Generic Electron-Cloud-Potential模型</h3><p>这里需要查询一下万能的维基百科 <a href="https://en.wikipedia.org/wiki/Triboelectric_effect#Sparks">摩擦电效应</a></p><blockquote><p>Although the part ‘tribo-‘ comes from the Greek for “rubbing”, <em>τρίβω</em> (τριβή: friction), the two materials only need to come into contact for electrons to be exchanged. After coming into contact, a chemical bond is formed between parts of the two surfaces, called <a href="https://en.wikipedia.org/wiki/Adhesion">adhesion</a>, and charges move from one material to the other to equalize their <a href="https://en.wikipedia.org/wiki/Electrochemical_potential">electrochemical potential</a>. This is what creates the net charge imbalance between the objects. When separated, some of the bonded atoms have a tendency to keep extra electrons, and some a tendency to give them away, though the imbalance will be partially destroyed by <a href="https://en.wikipedia.org/wiki/Quantum_tunneling">tunneling</a> or <a href="https://en.wikipedia.org/wiki/Electrical_breakdown">electrical breakdown</a> (usually <a href="https://en.wikipedia.org/wiki/Corona_discharge">corona discharge</a>). In addition, some materials may exchange ions of differing mobility, or exchange charged fragments of larger molecules.</p></blockquote><blockquote><p>The triboelectric effect is related to <a href="https://en.wikipedia.org/wiki/Friction">friction</a> only because they both involve <a href="https://en.wikipedia.org/wiki/Adhesion">adhesion</a>. However, the effect is greatly enhanced by rubbing the materials together, as they touch and separate many times.[<a href="https://en.wikipedia.org/wiki/Triboelectric_effect#cite_note-DiazFelix-Navarro2004-17">17]</a></p></blockquote><blockquote><p>For surfaces with differing geometry, rubbing may also lead to heating of protrusions, causing <a href="https://en.wikipedia.org/wiki/Pyroelectricity">pyroelectric</a> charge separation which may add to the existing <a href="https://en.wikipedia.org/wiki/Contact_electrification">contact electrification</a>, or which may oppose the existing polarity. Surface nano-effects are not well understood, and the <a href="https://en.wikipedia.org/wiki/Atomic_force_microscope">atomic force microscope</a> has enabled rapid progress in this field of physics.</p></blockquote><p>维基百科大概的意思是说:</p><p>这里有一个解释一般的摩擦起电的模型被称为<strong>generic electron-cloud-potential模型</strong><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.afdelivr.top/npm/cqlkc_img@1.0.14/img/Electron_cloud_model.webp"/></div></div></p><p>讲的就是，两种材料制成的物质只需要紧密接触(并不一定需要摩擦) , 电子即可发生交换</p><p>。在<strong>低于原子平衡距离</strong>接触后，两个表面的部分之间通过<strong>电子云的重叠</strong>形成<strong>化学键</strong> (这里可以是共价键也可以是离子键)。</p><p>而施加的外力，可以进一步<strong>减小</strong>这两材料间两个原子间的距离（也就是键长），这种电子云的高度重叠降低两原子的<strong>能垒</strong>促使其发生电子的转移。</p><p>此时若使两原子分离(摩擦实际上就是不断接触又分离的过程)，转移后的电子就保留了下来，形成了静电荷。</p><hr><h3 id="理论后的思考"><a href="#理论后的思考" class="headerlink" title="理论后的思考"></a>理论后的思考</h3><p>可以看到这个非常高大上的理论解释了为什么会有电子的转移，但这个并没有问答上面的问题</p><p>而且随着研究的深入， 问题的探究深度已经远远超出了我的预期</p><p>这里提供一篇大佬的相关论文 <a href="https://cdn.afdelivr.top/npm/cqlkc_assets@1.0.2/pdf/ce.pdf">On the Electron-Transfer Mechanism in the ContactElectrification Effect</a></p><p>说了这么多， 对于一般的题目来说只需要记住结论就可以了，千万不要想太多🤣</p><h1 id="Part2-未完待续"><a href="#Part2-未完待续" class="headerlink" title="Part2 未完待续"></a>Part2 未完待续</h1>]]></content>
    
    
    <summary type="html">记录那些离谱而有趣的想法</summary>
    
    
    
    <category term="胡扯区" scheme="https://blog.keee.top/categories/%E8%83%A1%E6%89%AF%E5%8C%BA/"/>
    
    
    <category term="奇思妙想" scheme="https://blog.keee.top/tags/%E5%A5%87%E6%80%9D%E5%A6%99%E6%83%B3/"/>
    
    <category term="胡扯" scheme="https://blog.keee.top/tags/%E8%83%A1%E6%89%AF/"/>
    
  </entry>
  
  <entry>
    <title>电脑续命四年计划(2)-PE4010两个月使用体验</title>
    <link href="https://blog.keee.top/posts/36101.html"/>
    <id>https://blog.keee.top/posts/36101.html</id>
    <published>2022-10-16T00:12:05.000Z</published>
    <updated>2025-09-27T14:55:56.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写在开头"><a href="#写在开头" class="headerlink" title="写在开头"></a>写在开头</h1><p>  这个使用体验为什么被划进了四年计划里面?</p><h2 id="实际上是因为这块海力士的PE4010是要顶掉挂掉的机械硬盘之前所扮演的角色-存游戏-主盘480g-实际可用容量不足300G-用起来难受-存不重要文件-毕竟还是块洋垃圾-不敢装重要文件"><a href="#实际上是因为这块海力士的PE4010是要顶掉挂掉的机械硬盘之前所扮演的角色-存游戏-主盘480g-实际可用容量不足300G-用起来难受-存不重要文件-毕竟还是块洋垃圾-不敢装重要文件" class="headerlink" title="实际上是因为这块海力士的PE4010是要顶掉挂掉的机械硬盘之前所扮演的角色:- 存游戏: 主盘480g, 实际可用容量不足300G, 用起来难受- 存不重要文件: 毕竟还是块洋垃圾, 不敢装重要文件(  "></a>实际上是因为这块海力士的PE4010是要顶掉挂掉的机械硬盘之前所扮演的角色:<br>- 存游戏: 主盘480g, 实际可用容量不足300G, 用起来难受<br>- 存不重要文件: 毕竟还是块洋垃圾, 不敢装重要文件(  </h2><h1 id="使用体验"><a href="#使用体验" class="headerlink" title="使用体验"></a>使用体验</h1><h2 id="购入经历"><a href="#购入经历" class="headerlink" title="购入经历"></a>购入经历</h2><p>  这块盘是在2022年8月21号购入 (正好在短短的暑假第二阶段的开头)</p><p>之前, 这台电脑一直是 2TB机械 + 480G SATA固态的搭配</p><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdmirror.com/npm/cqlkc_img@1.0.11/img/qq-zone-1.webp"/></div></div><p>当然机械硬盘上面所有的数据也是全部挂掉了(但是大多都是游戏)</p><p>原来的游戏还需要一块盘来储存, 购入一块新硬盘的需求就很明显了</p><p>经过一些考虑, 最终选择了新靠岸的大船货PE4010:</p><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdmirror.com/npm/cqlkc_img@1.0.9/img/pe4010-1.webp"/></div></div><p>商家说这块盘的写入量10t-20t左右, 通电时间100h以下(是不是清零盘存疑)</p><p>不过据网上的说法, 这块盘采用的主控马牌88SS1093是不能清零的, 无论如何这个价格要什么自行车</p><p>而为什么就写了10t就从服务器流入了市场,网上传言的解释是：</p><blockquote><p>PSA PE4010 和 PE6110 有极为严重的品控问题，具体表现为因焊料和 PCB 选材问题，在相对不够干净的环境下会出现铜绿腐蚀穿 PCB 和 NAND 的情况<br>南方高湿度的气候会显著加速这个过程</p><p>且厂商无妥善解决方案</p></blockquote><hr><h2 id="实物"><a href="#实物" class="headerlink" title="实物"></a>实物</h2><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdmirror.com/npm/cqlkc_img@1.0.10/img/DSC_0379.webp"/></div></div><p>而受限于X79的扩展性 (没有m.2 22110插槽, 也不支持NVME引导)</p><p>所以这块盘的定位就只能是从盘 (从盘性能比主盘好就离谱)</p><p>只能用pcie转接卡, 并且紧贴显卡这一大热源, 而这个马牌主控本身就有惊人的发热量(裸奔情况下温度能破90)</p><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdmirror.com/npm/cqlkc_img@1.0.10/img/DSC_0383.webp"/></div></div><p>为此特地买了散热片专门给主控散热, 日常使用温度理论上就不会撞墙</p><h2 id="不严谨测试"><a href="#不严谨测试" class="headerlink" title="不严谨测试"></a>不严谨测试</h2><p>话不多说, 先看一下基本信息</p><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdmirror.com/npm/cqlkc_img@1.0.10/img/a2.webp"/></div></div><p>由于在此之前, 博主已经用了将近两个月了, 这个写入状况还是很OK的</p><p>再给它来一个测速:</p><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdmirror.com/npm/cqlkc_img@1.0.10/img/a3.webp"/></div></div><p>性能表现实际上很一般, 不过已经比主盘TC10 480G和机械硬盘好太多了(已经知足了</p><p>作为对比, 我们来看一下TC10孱弱的性能表现</p><div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdmirror.com/npm/cqlkc_img@1.0.12/img/tc10.webp"/></div></div><hr><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>  海力士PE4010 960G这块盘在当时250元左右的时候是性价比最高的, 我上车的时候就已经算晚了</p><p>  至于现在更不推荐将PE4010作为 960G 固态仓库盘</p><p>  一是它的2字头价格已经一去不复返了, 二是它稳定性缺乏保障</p><p>  现在一般推荐加个几十上 pdd 的 SN350 1TB, 保修什么的都是实打实的, 而且性能作为仓库盘也足够了</p><h1 id="2023-08更新"><a href="#2023-08更新" class="headerlink" title="2023-08更新"></a>2023-08更新</h1><p>  这下成大怨种了，现在2t的全新全速3.0固态盘也才400<div class="tag-plugin image"><div class="image-bg"><img src="00F3ED01.png"/></div></div></p>]]></content>
    
    
    <summary type="html">PE4010</summary>
    
    
    
    <category term="电脑续命四年计划" scheme="https://blog.keee.top/categories/%E7%94%B5%E8%84%91%E7%BB%AD%E5%91%BD%E5%9B%9B%E5%B9%B4%E8%AE%A1%E5%88%92/"/>
    
    
    <category term="电脑" scheme="https://blog.keee.top/tags/%E7%94%B5%E8%84%91/"/>
    
    <category term="生活" scheme="https://blog.keee.top/tags/%E7%94%9F%E6%B4%BB/"/>
    
    <category term="评测" scheme="https://blog.keee.top/tags/%E8%AF%84%E6%B5%8B/"/>
    
  </entry>
  
  <entry>
    <title>电脑续命四年计划(0)-电脑情况概述</title>
    <link href="https://blog.keee.top/posts/26610.html"/>
    <id>https://blog.keee.top/posts/26610.html</id>
    <published>2022-10-15T18:17:43.000Z</published>
    <updated>2025-09-27T14:55:56.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写在开头"><a href="#写在开头" class="headerlink" title="写在开头"></a>写在开头</h1><p>  不知不觉, 手上这台电脑也已经服役将近6年(2017年1月购入并组装) 但是这台电脑目前的性能和工作状况一言难尽</p><p>且目前来看, 估计一直到高考结束(这期间有4年,故得名”四年计划”), 这台电脑都不可能有更新主要配件的机会</p><p>所以，保证这台电脑正常工作就显得至关重要</p><h1 id="配置概览"><a href="#配置概览" class="headerlink" title="配置概览"></a>配置概览</h1><h2 id="简单介绍"><a href="#简单介绍" class="headerlink" title="简单介绍"></a>简单介绍</h2><p>  先上图<br>  <div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdmirror.com/npm/cqlkc_img@1.0.5/img/a5.webp"/></div></div></p><p>  可以看到这套配置就一纯种洋垃圾配置, 几乎包含了洋垃圾的全部要素:</p><ul><li>E5-1620v2 服务器cpu, 差不多是i7-3770的马甲(不过价格低很多</li><li>HUANAN X79 华南的寨板, 不过这块X79是用的原生X79南桥, 不是用B75魔改的(质量还不错?</li><li>4GB REG ECC DDR3 1333MHz *4  三星的服务器内存, 由于家用主板用不了recc所以价格相当的便宜</li><li>海力士PE4010 960G(HFS9600GD0TEG) 也是捡的服务器SSD</li><li>恺侠tc10 480G 这个属于是没做功课, pdd上随便乱买的, 性价比一般</li></ul><p>  至于为什么要配这样一套配置，就得把时间拉回2017年1月了…(发现自己竟然这么早就在搞这个东西)</p><h2 id="为什么不换平台？"><a href="#为什么不换平台？" class="headerlink" title="为什么不换平台？"></a>为什么不换平台？</h2><p>​你可能会说，怎么2202年了还搁着用X79呢？12代i3什么的不比这个老掉牙的E5香的多？</p><p>实际上，目前如果购入一套新平台的话，没有1000+预算根本拿不下来。（现有所有零件基本均不适配</p><p>并且目前X79的相关二手价格奇低无比（4g内存条价格可能还不够出运费</p><p>奇低的二手价格导致了换平台的高成本，但是如果换一个思路想：</p><p>​那它是不是也降低了我的<strong>升级成本</strong>呢？</p><p>答案是很显然的，目前情况如下：</p><ul><li>16g 1866recc单条只要50（64g内存指日可待？！</li><li>e5-2667v2单价200 （而e5-1620v2二手还能卖100</li></ul><p>所以短期来看，低投入的小修小补应该是最优解</p><h2 id="背景原因"><a href="#背景原因" class="headerlink" title="背景原因"></a>背景原因</h2><p>  在2017年的时候, AMD的锐龙系列还没有发售, 推土机之类的模块化架构IPC一言难尽</p><p>  家用平台基本只能用intel的酷睿系列</p><p>  由于缺乏竞争, 这个板u一套的价格嘛就一言难尽了</p><p>  最为重要的是, 2017年内存市场的爆炸(感谢生产线火灾的馈赠</p>  <div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdmirror.com/npm/cqlkc_img@1.0.6/img/memory-increasing-price.webp"/></div></div><p>  但是随着一批批大船的靠岸, 大量被称为”洋垃圾”的淘汰服务器配件涌入国内市场, 包括但不限于:</p><ul><li>服务器内存(REGECC)</li><li>服务器主板(X79等)</li><li>服务器CPU(E5&#x2F;E3等)</li><li>…</li></ul><p>  博主当时选择的是e5-2670 , 8C16T 花了约420性价比还是很足的(一个缺点是单核性能较为拉跨)</p><p>  4*4G REGECC也是相当的便宜,一根估计也就几十块钱(而且有4通道加成)</p><p>  还有显卡用的是GTX780Ti   不过后来换成了RX480, 下篇文章有讲</p><h2 id="一些小插曲"><a href="#一些小插曲" class="headerlink" title="一些小插曲"></a>一些小插曲</h2><p>不过便宜也有代价， 当时电脑最开始组装好后出现了一个致命问题困扰了我好几个月（且十分难以排查</p><p>这里描述一下现象，看一下你能不能猜出来是什么问题:</p><ul><li>CPU正常鲁大师(均为旧版)跑分应为11.9w，结果实际只有9w</li><li>GPU正常鲁大师跑分应为18.9w，结果只有11w</li><li>游戏内帧数如GTA5只有个位数FPS，MC表现要好一些(至少能上60fps)</li><li>游戏内GPU和CPU都跑不满，既没有爆内存也没有爆显存</li></ul><p>揭秘：有一根<strong>内存条</strong>有问题，他处于一个半正常工作状态(能点亮过自检，但有问题)</p><p>这是在某次开机的时候，这个内存条直接开摆连自检都过不了，我就随便拿了两根家用内存条去测试</p><p>结果开机后跑分时发现：跑分又<strong>恢复正常了?!</strong></p><p>可以直接断定内存条有问题，直接换下来即可（不过这个问题时隔5年又复发了，但我已经有经验也不就慌了…</p><h1 id="运行现状"><a href="#运行现状" class="headerlink" title="运行现状"></a>运行现状</h1><h2 id="一张图就能说明一切"><a href="#一张图就能说明一切" class="headerlink" title="一张图就能说明一切"></a>一张图就能说明一切</h2>  <div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdmirror.com/npm/cqlkc_img@1.0.7/img/DSC_0385.webp"/></div></div><p>  <strong>要素盘点:</strong></p><ul><li>缺乏安全感的水冷(水冷:从入门到索赔无门)</li><li>敞开体系运行(大号吸尘器)</li><li>灵 魂 走 线(哪天开不了机了记得看一下跳线是不是松了)</li><li>装饰兼玩具用光驱(没接SATA数据线,只连了电源线,等开机的时候按着玩..)</li><li>没有螺丝固定的风扇和固态(丑)</li><li>连接不全的跳线(只连了开机和重启跳线)</li></ul><p>以这个运行状况, 这电脑能用5年就已经是奇迹了(逃</p><h1 id="升级计划"><a href="#升级计划" class="headerlink" title="升级计划"></a>升级计划</h1><ul><li><input checked="" disabled="" type="checkbox"> 把CPU换成E5-2667v2(4核e5打战地太捉急了)</li><li><input disabled="" type="checkbox"> 换下令人缺乏安全感的120水冷(已经过了质保期了…)</li><li><input checked="" disabled="" type="checkbox"> 整理一下走线</li><li><input disabled="" type="checkbox"> …</li></ul>]]></content>
    
    
    <summary type="html">努力给电脑续续命</summary>
    
    
    
    <category term="电脑续命四年计划" scheme="https://blog.keee.top/categories/%E7%94%B5%E8%84%91%E7%BB%AD%E5%91%BD%E5%9B%9B%E5%B9%B4%E8%AE%A1%E5%88%92/"/>
    
    
    <category term="电脑" scheme="https://blog.keee.top/tags/%E7%94%B5%E8%84%91/"/>
    
    <category term="生活" scheme="https://blog.keee.top/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>电脑续命四年计划(1)-给老显卡改善一下散热条件</title>
    <link href="https://blog.keee.top/posts/23205.html"/>
    <id>https://blog.keee.top/posts/23205.html</id>
    <published>2022-10-15T17:47:54.000Z</published>
    <updated>2025-09-27T14:55:56.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="写在开头"><a href="#写在开头" class="headerlink" title="写在开头"></a>写在开头</h1><h2 id="为什么要换成RX484"><a href="#为什么要换成RX484" class="headerlink" title="为什么要换成RX484"></a>为什么要换成RX484</h2><p>不知不觉，电脑上的这块RX480 4G也用了快5年了 <del>(能用5年就是奇迹)</del></p><p>实际上这台电脑最开始用的不是RX484, 最开始是用的老卡皇gtx780ti 3G</p><p>这gtx780ti呢, 给人最显著的感受就是: <strong>这功耗真的大啊！！</strong></p><p>为此电源是直接给到了额定700W, 用是可以用了, 但是老开普勒架构的表现也是不尽如人意:</p><ul><li>功耗问题：游戏时可以达到300W的功耗，这电费和温度谁顶得住</li><li>优化问题: 老架构对新游戏支持不够好</li></ul><h2 id="换了RX484后的表现"><a href="#换了RX484后的表现" class="headerlink" title="换了RX484后的表现"></a>换了RX484后的表现</h2><p>综合了一些考虑以后， 果断在咸鱼上面卖掉换了RX484(并小赚几百)</p><p>  至于RX484, 一看它的参数:</p><ul><li>功耗只有100W</li><li>有14nm制程加持(<del>想必这温度表现一定很好吧!</del>)</li></ul><p>结果这块RX484温度表现更为惊人, 正常游戏中就可以跑到780ti都难以企及的80度以上</p><p>权宜之计就是机箱不关侧盖，结果就是变身吸尘器+电热炉</p><p>这样一直用到了2021年…</p><p>  到了2021年的时候, 大家都知道又一轮大规模的矿潮来了, 一时间各平台的显卡价格飞涨</p><p>甚至包括RX480 4G这块挖不了ETH的老兵, 当时挂咸鱼上时价格直接给到了2000元</p><p>但是由于我当时沉迷于游戏之中, 确实不愿意将显卡出手(谁知道什么时候矿难呢?</p><p>结果, 过了一周显卡价格直接跳水, 再过一两个月2000元就能买到新的丐版RX6600XT了</p><p>(追悔莫及中…&#x1F602;)</p><hr><p>不过既然当时没有抛弃它, 未来也很难有机会甩掉它了</p><p>所以,我们的目标肯定不是只用5年就结束了, 既然叫四年计划目标就是尽量让它再战四年, (<del>让高中还能继续打游戏</del>)</p><hr><h1 id="第一阶段-换硅脂"><a href="#第一阶段-换硅脂" class="headerlink" title="第一阶段: 换硅脂"></a>第一阶段: 换硅脂</h1><p>简简单单换个硅脂, 毕竟干其他的, 我条件也有限。</p><p>现在用的硅脂是估计一年前左右买的便宜大碗的高导GD007(几块钱就有十多克), 对比一下7921甚至TFX, 这个性价比简直不能太高</p><p>但是这种便宜的硅脂一个很大的问题就是寿命有限, 越到后面这散热性能就越令人捉急</p><h2 id="初始表现"><a href="#初始表现" class="headerlink" title="初始表现"></a>初始表现</h2><pre><code>测试条件: 敞开体系, 室温19℃</code></pre><p>  驱动日用设置参数如图<br>  <div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdmirror.com/npm/cqlkc_img@1.0.5/img/a6.webp"/></div></div></p><p>  为了对比, 先跑一个甜甜圈看一下GD007的表现<br>  <div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdmirror.com/npm/cqlkc_img@1.0.4/img/a1.webp"/></div></div><br>  <div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdmirror.com/npm/cqlkc_img@1.0.4/img/a7.webp"/></div></div></p><p>  可以看到核心温度基本稳定在79度, 功耗107W左右, 我就很疑惑这真的能用4年吗</p><h2 id="更换硅脂"><a href="#更换硅脂" class="headerlink" title="更换硅脂"></a>更换硅脂</h2><p>  先拆下这块久经沙场的RX480<br>  <div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdmirror.com/npm/cqlkc_img@1.0.5/img/DSC_0377.webp"/></div></div></p><p>  拧掉背板上的几颗螺丝后，就看见PCB板真面目了<br>  <div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdmirror.com/npm/cqlkc_img@1.0.5/img/DSC_0378.webp"/></div></div></p><p>  把核心上原有的硅脂擦干净以后</p><p>  (忽视旁边溢出的硅脂和有些焦黄的显存，这个核心还是很好看的</p><p>  挤上硅脂7921, 插电正常亮机</p><h2 id="7921的表现"><a href="#7921的表现" class="headerlink" title="7921的表现"></a>7921的表现</h2><p>  保持显卡驱动设置不变再跑一次</p>  <div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdmirror.com/npm/cqlkc_img@1.0.5/img/a4.webp"/></div></div><p>  emmmmmm…这个好像并没有什么变化啊</p><p>  不过核心我们一般认为还是很耐艹的, 76度也问题不大(麻痹自己中…)</p><h1 id="第二阶段-降压但不超频"><a href="#第二阶段-降压但不超频" class="headerlink" title="第二阶段: 降压但不超频"></a>第二阶段: 降压但不超频</h1><h2 id="微调电压"><a href="#微调电压" class="headerlink" title="微调电压"></a>微调电压</h2><h3 id="为什么"><a href="#为什么" class="headerlink" title="为什么?"></a>为什么?</h3><p>  我们知道很多玩家拿到显卡后, 最喜欢做的就是看下显卡的体质来波降压超频(甚至是加压超频)</p><p>  根据半导体芯片的功耗公式: (a,b对于同一芯片为常量,F指频率)</p><p>  $$ P&#x3D;a<em>b</em>F*U^2 $$ </p><p>  可以看到电压在其中是二次项, 调整电压的大小对于功耗来说有举足轻重的作用(再辅以降频)<br>  可以达到降低功耗进而 (<del>践行低碳生活</del>) 降低散热压力</p><h3 id="实际操作"><a href="#实际操作" class="headerlink" title="实际操作"></a>实际操作</h3><p>  实际操作起来就是一点点地去降低电压, 比如:</p><p>  我设置1150mV能过压测,我设置1130mV也能过压测,我设置1101mV还能过压测</p><p>  但是如果跳到1100mV显卡终于绷不住了,那你就成功地把握住了显卡的底线1101mV(大雾)</p><p>  不过并不建议就把电压设置为1101mV, 在低负载的时候可能会出问题……</p><p>  这里是我自己测好的最优电压状态<br>  <div class="tag-plugin image"><div class="image-bg"><img src="https://cdn.jsdmirror.com/npm/cqlkc_img@1.0.8/img/test1.webp"/></div></div></p><h2 id="风扇策略"><a href="#风扇策略" class="headerlink" title="风扇策略"></a>风扇策略</h2><p>  这个的话就不展开了, 风扇策略实际上是取决于使用者本身的底线(对噪音的忍耐程度)</p><p>  不过我都把机箱侧盖扔了, 噪音什么的也不在乎, 直接往上拉就行了</p><h1 id="第三阶段-未完待续"><a href="#第三阶段-未完待续" class="headerlink" title="第三阶段:未完待续"></a>第三阶段:未完待续</h1><h1 id="To-Do-List"><a href="#To-Do-List" class="headerlink" title="To Do List:"></a>To Do List:</h1><ul><li><input disabled="" type="checkbox"> 给裸露的显存加一下散热片</li><li><input disabled="" type="checkbox"> 给mos管加导热垫</li></ul>]]></content>
    
    
    <summary type="html">给老显卡降降温</summary>
    
    
    
    <category term="电脑续命四年计划" scheme="https://blog.keee.top/categories/%E7%94%B5%E8%84%91%E7%BB%AD%E5%91%BD%E5%9B%9B%E5%B9%B4%E8%AE%A1%E5%88%92/"/>
    
    
    <category term="电脑" scheme="https://blog.keee.top/tags/%E7%94%B5%E8%84%91/"/>
    
    <category term="生活" scheme="https://blog.keee.top/tags/%E7%94%9F%E6%B4%BB/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://blog.keee.top/posts/4a17b156.html"/>
    <id>https://blog.keee.top/posts/4a17b156.html</id>
    <published>2022-10-02T00:00:00.000Z</published>
    <updated>2024-08-30T08:44:21.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="不弃坑，坚持写"><a href="#不弃坑，坚持写" class="headerlink" title="不弃坑，坚持写"></a>不弃坑，坚持写</h1><p>本站从10月2日也就正式启用了，希望用这个官方生成的helloworld来作为纪念吧。</p><p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">梦开始的地方</summary>
    
    
    
    
  </entry>
  
</feed>
