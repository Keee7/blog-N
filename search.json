[{"title":"GPT-sovits 革命性的TTS开源项目","path":"/posts/23423.html","content":"Demo演示 所需： 5min及以上的人声 一张支持cuda的显卡 成果： Your browser does not support the audio tag. Your browser does not support the audio tag. 未完待续","tags":["AI","整货"],"categories":["水文"]},{"title":"浅谈高考赋分制","path":"/posts/62312.html","content":"前言 不久之前，进入高一下以来也是分科后的第一次考试结束了。最开始听别人说这次考试不赋分，心里面就有些窃喜。因为很早之前在初二就从 zq 口中听说了赋分的威力，后面结果出来后先拿到原始分很开心，觉得这次稳了，结果再选学科一赋分，排名一下子就往后滑了不少(；′⌒`)。 不理性分析 溯其本源 赋分制本身是重庆近几年实行3+1+2新高考模式带来的产物，将原先的大文综、大理综拆成了四个再选学科可供自由选择，但录取时只分物理类和历史类，为保证公平，四个再选学科分数必须进行转换以消除学科间分数差异，于是以排名为基础的赋分制诞生了 算法简述 重庆市高考再选学科转换分满分为100分，赋分起点为30分。将没门选择考再选学科考生的原始分从高到低划分到A、B、C、D、E共五个等级，各个等级人数比例分别为15%、35%、35%、13%和2%，赋分区间以此为100~86、85~71、70~56、55~41和40~30 Influence 注意到，A、B两等级（即是说71~100）分数段的人就占了足足50%的比例，这说起来可能没什么直观感受，但如果再想想自己学校平时月考原始分的中位数大概是多少呢？？在 bz，中间名次大概是在1000名左右，这个时候的分数一般都有点一般，甚至是很一般，但是却能轻松赋到80分的高分，直接带来了20~30分左右的分数跃升（真的有点恐怖了。而且，越到高分段赋分带来的增长越来越弱，在一些学校高考的再选学科甚至有扁平化的趋势。 赋分不会影响在这个再选学科的排名，但是对于总分影响就真的相当大了。记得尊敬的 xy 老师从高一入学前的暑假开始就在强调主科的重要性而且再选学科可以暂时不去管他。当时我还没意识到事情的严重性，觉得自己多摸过几年化学，就搞了本《天利》来刷 （当然最后 xy 布置的任务是一个也没完成 就拿我来说，我化学考试赋分之后大约只涨了有3分，生物也差不多；然而我周围原始分与我相当的同学几乎都有10~20分的涨幅，直接把我吊打了(^_^)。 结语 总之，教训很显然： 主科 comes first.","tags":["高考","赋分","学习"],"categories":["学习"]},{"title":"Caddy -- 一款优秀的Web服务器","path":"/posts/51203.html","content":"前言 这几天一直在折腾家里的旧手机（参照前文），在用传统的 Nginx 搭建https服务的时候，证书问题真的超级麻烦而且 Nginx 的文件也很复杂，对一些新特性支持也一般，对我这种又懒又想折腾的人及其不友好。 结果在网上冲浪的时候，偶然发现了 Caddy 这个宝藏软件 官网：https://caddyserver.com/docs/ 独特之处 首先，最重要的是是它的SSL证书自动申请续期，过程完全自动而且速度快，自己只需要提供token（或者开放80端口） 其次，它对新特性的支持优秀，无需配置便支持 HTTP/3 quic、Markdown自动翻译、ipv6 等特性 最后，配置文件简单，配置三个站点仅用短短几行就能解决 123456789101112131415ipv6.pan.cqlkc.top:29565 &#123; reverse_proxy / 127.0.0.1:5244 encode gzip tls &#123; dns dnspod &quot;ID,Token&quot; &#125;&#125;ipv6.cqlkc.top:443 mirror1.cqlkc.top:23232 &#123; root * /home/cqlkc/cqlkc.github.io file_server encode gzip tls &#123; dns dnspod &quot;ID,Token&quot; &#125;&#125; 但是，Caddy 相比 Nginx 在性能方面仍有劣势，Nginx 资源占用更低，速度更快（但是它更麻烦啊！ 所以小站点可能会更推荐 Caddy，可以大大降低维护成本（利好学生党 配置教程 参照官方文档和我的Caddyfile示例即可 需要注意的是，国内家宽的80端口被封锁，因此 Caddy 默认的 HTTP-01 验证无法正常检验域名所有权 非80端口验证域名所有权 解决方法就是用 XCaddy 编译第三方插件和 Caddy 源码第三方插件即可 第三方插件列表在 https://caddyserver.com/docs/modules/ 里面找 我这里有编译过的 DNSpod 插件的 Caddy 二进制文件（ARM64），可以直接用 总结 Caddy 很好用很好用很好用，懒人必备（笑","tags":["web","caddy"]},{"title":"给老手机部署上Alist服务","path":"/posts/13283.html","content":"家里有一台闲置的小米8（dipper），已经提前解锁Bootloader，中考后就想着在上面架设linux终端跑点东西 准备过程 所需材料: 安卓手机一台 windows电脑一台 安卓手机推荐解锁bl并root，方便后续实现插电运行，避免电池损耗鼓包，后续也以root为准 国内开放解锁bl的手机品牌有：小米、一加、oppo、realme （小米为绑定后7天解锁，一加可以直接解锁，oppo、realme需要申请名额很难） 有些较老安卓机可以直接fastboot解锁另说 刷入合适的刷机包 由于手上的小米8当时更新到了拉胯的MIUI12.5，又卡又费电不适合长期运行，所以决定回滚到MIUI10.3.5 如果手机当前状况良好可以不管 具体过程参照 https://www.coolapk.com/feed/45223331 提前下载所需应用 解锁bl以后会清空手机数据，到时候一个一个下载很麻烦，所以提前下好，节约时间 手机应用列表： Magisk Delta : https://github.com/HuskyDG/magisk-files/releases Termux : https://github.com/termux/termux-app/releases AccA : https://github.com/MatteCarra/AccA/releases MT管理器 : https://www.coolapk.com/apk/bin.mt.plus 电脑所需： Miflash : https://pan.cqlkc.top:29565/123 Fastboot工具箱 : https://pan.cqlkc.top:29565/123 提前准备boot镜像 首先在手机设置中确定系统版本，如MIUI10.3.5 在相关渠道找到该版本的线刷包（fastboot刷机包） 经过几次解压后，打开Image文件夹，找到boot.img拷贝到手机中备用 操作流程 Root 手机（可选） 注：需要解锁Bootloader 安装Magisk 安装Magisk Delta，这是Magisk的一个好用的第三方分支 打开后，在主页找到Magisk 安装 选择选择并修补一个文件，选项不用打钩 在文件管理中找到先前准备的boot.img进行修补 跑码跑到最后提示Done即为成功 再将修补好的boot.img（形如&quot;magisk_patched_XXXXX.img&quot;）拷贝至电脑 将手机关机，同时按住电源键和音量-键，出现Fastboot标志后松手，连接电脑 打开fastboot工具箱中的“打开CMD命令行.bat” 输入fastboot flash boot 修补好的boot镜像 配置AccA、Termux 重启手机，安装Termux、AccA 打开Magisk Delta 在设置中开启Magisk Hide和强制使用超级用户列表 在超级用户列表中勾选系统界面、设置、以及Termux和AccA 打开AccA，授权超级用户权限 在配置一栏启用Default，并编辑开启电池闲置优先模式 配置 Termux 在系统设置中，将Termux的后台管理设为“无限制” （各品牌UI设计不尽相同，不做阐释） 接下来就比较轻松了，Termux完全可以当成正常的Linux终端使用（补：完全不能！！！ （下载软件时注意架构为ARM64） 固定 局域网IP 在手机中WLAN设置中，将IP分配方式设置为静态，记住这一IP 如图 部署 Alist Alist是一个轻量级的网盘管理项目，可以挂载很多网盘 这里尝试部署Alist项目在手机上 首先在Termux中输入 1pkg install alist 接着输入 1alist admin 以确认admin密码 然后启动服务即可 1alist server 这样Alist就运行在5244端口上了 在同一局域网内的设备，可以通过IP:端口的方式打开Alist面板 如192.168.31.77:5244 但是这样只能在内网访问，很不方便，需要将其开放至外网 部署内网穿透 推荐服务商SakuraFrp 提供2条隧道，10Mbps网速，以及内地节点使用 下面以SakuraFrp为例部署内网穿透 SakuraFrp网页端配置 注册账号并进行实名认证（或者不实名使用日本NTT节点也可） 服务-隧道列表创建隧道，在普通节点中选择一个合适的节点 这里我选择了离得比较近的成都电信7节点 隧道类型为TCP隧道，本地IP选择0.0.0.0 本地端口为5244 远程端口随意，之后访问要用到 自动HTTPS一栏要注意，如果选择自动会出现证书错误，影响体验 因此建议输入自己的域名，我这里输入pan.cqlkc.top 到这里就创建成功了 接下来在操作中，选择配置文件，下载配置文件保存，后续要用 SSL证书配置 由于绑定到了自己的域名下，因此需要自己去申请SSL证书 建议使用FreeSSL申请免费证书 如图选择即可，CSR选择离线生成，用他提供的KeyManager软件导出Nginx格式的证书（包含.key和.crt两个格式的文件） 重命名证书为 你的域名.key 和 你的域名.crt 如 pan.cqlkc.top.crt 完成后拷贝到手机备用 Termux文件交互 安装并打开MT管理器，按要求授权后点击左上角，再点击菜单右上角的三个点添加本地储存，选择Termux即可 然后将frpc.ini、网站证书一起复制到根目录 Termux端配置 根据frpc 基本使用指南 | SakuraFrp 帮助文档 (natfrp.com)，我们这里要使用的是Frpc（建议按照下列步骤进行，原指南不适用于Termux环境） 首先我们完善一下Termux组件 1pkg install wget vim aria2 -y 然后下载frpc并授权（可能会遇到TooManyRequests报错，等一会再下载即可） 12wget -O https://getfrp.sh/d/frpc_linux_arm64_noupxchmod 755 frpc 运行frpc 1./frpc 如无误，会在3秒后自动载入配置文件并提示TCP隧道启动成功 并提示你通过某个域名:端口连接隧道 这时回到DNS网站，添加CNAME类型解析，记录值为提示域名 但此时alist服务还没有运行，我们还需要将两者同时运行 回到Termux，按Crtl+C退出frpc 输入 1alist server &amp; ./frpc 大功告成，接下来通过你绑定的域名打开Alist吧 （记得带端口号 2023.8.27更新 Termux 的文件结构是被魔改过的，而且在权限上有些bug 所以有能力刷机或者root手机的建议不再使用 Termux 部署 linux 可以使用 Ubuntu Touch （推荐）或者 PostmarketOS 等原生Linux发行版，体验会好很多 如果原生Linux对于使用的手机缺少驱动支持，再考虑使用 Linux Deploy 等在chroot容器上运行Linux发行版，体验会好很多 注: Docker需要内核支持，Android手机的内核是基于Linux魔改过的，无法运行Docker，因此在Android上就需要自行修改编译内核（Android手机的内核一般都是开源的） 附小米内核源码仓库 https://github.com/MiCode/Xiaomi_Kernel_OpenSource clone以后可以自己先编译测试一下，再添加kernelsu、docker等特性编译（不然容易出问题 sakurafrp也可以选择其他替代品，如mefrp，在实名认证和带宽方面更友好 可以用 caddy 自动配置tls，详见另一篇文章","tags":["瞎搞"]},{"title":"A卡、I卡如何愉快地使用UVR5","path":"/posts/37966.html","content":"DirectML 分支解决方案 UVR5项目在GitHub有人为它做了DirectML分支，能够在支持DX12的GPU上启用GPU加速 项目链接：Aloereed/ultimatevocalremovergui-directml 但是该分支目前仅支持VR Architecture算法 git clone https://github.com/Aloereed/ultimatevocalremovergui-directml.git pip install -r requirements.txt 将已下载的模型拖入model文件夹（或者在GUI中下载） python UVR.py ROCM 解决方案 注意：此方案仅支持A卡，要求Linux环境（推荐Ubuntu20.04） 首先，安装显卡驱动和ROCM 可以通过其他人制作的一键工具，或者根据他人教程安装 AMD显卡 Ubuntu 部署Stable DIffusion WebUI基于Pytorch2.0.0 Rocm5.4.2_Ha7nk的博客-CSDN博客 不过这个教程直接用的自带的python3进行安装（不推荐） 建议使用conda创建一个虚拟环境进行安装 k7212519/ksd-launcher: AMD专用stable-diffusion-webui 图形化安装启动器 KSD-Launcher (github.com) 这个执行到安装完成驱动就行，实测可用 首先下载https://github.com/Anjok07/ultimatevocalremovergui/archive/refs/heads/master.zip 123456sudo apt update &amp;&amp; sudo apt upgradesudo apt-get updatesudo apt install ffmpegsudo apt install python3-pipsudo apt-get -y install python3-tkpip3 install -r requirements.txt","tags":["水文"]},{"title":"红米9A “Windows未识别的USB设备” 深度救砖","path":"/posts/34206.html","content":"前言 用了一年多的低端机Redmi 9a感觉就非常的卡，放假有时间打算刷个qeui官改用用 解锁bootloader的时候，小米的官解当时还要等23h，就选择了mtk强解bl 第一次解很顺利，只是fastboot被阉割了点，问题不大 然而，线刷降级回miui12.5.12时不小心又给bootloader锁上了 当再次强解时，不幸翻车 手机黑屏，长按电源键无反应，电脑显示“Windows未识别的USB设备” （无法进入rec或fastboot 过程 拆后盖 注：该步骤或许可以省略，在保机器最好先别弄，若深刷步骤无法进行再拆后盖也行 取出SIM卡槽，很重要，不取无法撬开后盖 用刀片或者指甲沿着屏幕边缘撬开后盖，塑料后盖直接闭着眼睛撬就行 拧开主板保护盖的螺丝，取下电池排线 半合上后盖，确保可以按到电源键，+/-音量键 深度刷机 准备 链接：https://pan.quark.cn/s/f58efcfa9bfa 解压后先进入 工具–驱动 安装里面的两个驱动 打开SP FLASH TOOL后，会有如图界面 导入DA文件，直接用 SP FLASH TOOL 里的 MTK_AllInOne_DA.bin 即可 导入配置文件，该文件在线刷包中的Image中，形如 MT6765_Android_scatter.txt 字样的文件 最终效果如图 稳深刷端口 mtk的深刷端口是不稳定的，但可以用bypass工具稳定端口 注：此时手机黑屏，先不插数据线 打开 工具–稳深刷模式 点击下方 Disable Auth 按钮，同时按下手机电源键和 **+ - 声量键 **三个键不放约10s后，再插入数据线 出现如图信息，即为成功，可以进行下一步操作 开始刷机 稳定了深刷端口后，在设备管理器中应该能看到mtk端口，没有那就重来上一个步骤 若一切正常，点击SP FLASH TOOL中的 下载 按钮，开始刷机（先跑红条，然后马上跑黄条即为正常） 刷完后会提示一个大绿勾，接着拔掉数据线，安装好电池排线和主板保护盖后合上后盖开机即可 最终成果，顺利开机 遇到过的问题 只跑红条，报错ERROR STATUS_EXT_RAM_EXCEPTION (0xC0050005) 一般为线刷包有问题，推荐使用miui12.5的最早期版本 下载地址去miuirom找对应型号即可 稳深刷端口失败 多试几次就行了（ 总结 搞机有风险，刷机需谨慎 推荐走官解bl锁（非小米机型除外 新手不要在晚上刷机（大雾，不然睡不了觉","tags":["瞎折腾"],"categories":["水文"]},{"title":"a卡视频开启插帧功能","path":"/posts/59508.html","content":"写在开头 月考结束后又是快乐的网课时光，所以决定水一篇文章证明我还活着（大雾 我们知道一般的视频帧率大多约为24fps，而通过 Bluesky Frame Rate Converter 视频滤镜我们可以将24fps补全至60fps ( 甚至更高 ) 以增加视频流畅度 当然，这个有硬件限制，那就是必须是GCN架构的AMD GPU 2024更：RDNA架构也可用 准备 GCN架构的GPU（当然要装驱动 Potplayer播放器 Bluesky Frame Rate Converter 视频滤镜 如何判断我的GPU是不是GCN架构？ 一般来说，AMD的独立显卡系列从HD 7000系列开始 (不会还有人在用这么老的显卡吧，一直到RX 500系列都是用的GCN架构 核心显卡应该是笔记本系列锐龙5000系及其以前的几乎所有型号，台式机系列除锐龙7000系所有型号也都是GCN架构 配置 在准备并安装好上述软件后，就可以开始我们的配置工作了 Bluesky FRC配置 首先，打开刚刚安装的Bluesky FRC 按照如图进行配置即可，部分配置可以自己微调 比如: Output的输出帧率可以根据自身设备情况调，我的显示器是75Hz所以调到了72p，如果是60Hz的用60p即可 AMD驱动配置 首先，桌面找个空白处右键，选择AMD Software: Adrenalin Edition 打开后，直接在右上角搜索框，输入：“音频和视频设置” 在视频配置文件一项中，选择自定义，然后会出现一个&quot;自定义选项&quot; 找到AMD Fluid Motion Video并开启即可 Potplayer 配置 随便打开一个视频，右键找到&quot;选项&quot; 左侧侧边栏选择滤镜–全局滤镜优先权 右侧点击添加系统滤镜，找到&quot;Bluesky Frame Rate Converter&quot;并添加 然后，别忘了优先顺序选择为&quot;强制使用&quot; 效果展示 至此，所有配置工作都结束了，来看一下效果如何 可以看到帧率显示“23.976 -&gt; 71.92”，这就代表插帧成功了 当然这种即时插帧效果比较一般，而且像动漫这些还是得24fps看起来才对味 深度折腾 以上配置都是基于Potplayer进行的，这个播放器很有意思，可以搭配madVR+LAV实现一些很惊艳的视频显示效果 （当然我这种用着廉价显示器的，看着低码率资源的菜鸡就不用折腾就是了``","tags":["插帧"],"categories":["水文"]},{"title":"高考化学易考易错知识点总结","path":"/posts/10471.html","content":"前言 笔者的碎碎念 个人感觉高考化学思维要求不高，很多地方只是机械记忆即可。虽然如此，这里面的坑还是太多了 所以就总结一下自己遇到的易错点（顺便也是复习了 概述 高中化学教学主要使用4本教材 必修一，比较简单，有点初高中衔接的感觉，没有思维障碍（？ 选择性必修一，主讲化学反应理论类，比较抽象（个人认为最难的部分 选择性必修二，主讲结构，需要记忆和一定的空间想象能力 选择性必修三，专讲有机物及有机反应，重推理和记忆能力 正片 选择题 T1 这个题目一般是考察基础概念，没有什么难度 T2-5 考察方程式的书写，一般注意一下几点： 最简单的，配平了没有 考虑反应能否发生，氧化性？酸性？条件？ 其次，离子方程式考虑各物质的存在形式（石灰乳？石灰水？ 产物在该环境下能否存在（酸性？碱性？ 考察阿伏伽德罗常数（感觉易错），注意： 反应可逆与否，诸如合成氨、盐的水解等等 离子共存，没什么特别的 T6 考察有机物，常见已混概念： 同系物，一定要求同类，不是差个(CH2)就可以！ 分子式，记得环要算不饱和度、有N元素存在H的数量会有变化！ 共面共线问题，注意问的是可能还是一定 酯类的水解，注意考虑有酚类生成的情况 未完待续","tags":["学习","化学","总结"],"categories":["学习"]},{"title":"白嫖gpu云服务器部署webui方案汇总","path":"/posts/39808.html","content":"Paperspace方案（不推荐） 官网： https://www.paperspace.com/ 这里是自己写的终端命令全流程，直接CV到终端回车即可 用的anythingv3.0的3.7g模型，也可以用别的，自己改，但不能超过4.5g（数据瞎估的，反正太大存不下 123456git clone https://github.com/AUTOMATIC1111/stable-diffusion-webuicd stable-diffusion-webui/mkdir -p /notebooks/stable-diffusion-webui/models/Stable-diffusion /notebooks/stable-diffusion-webui/models/hypernetworkswget -P /notebooks/stable-diffusion-webui/models/Stable-diffusion/ &quot;https://huggingface.co/Linaqruf/anything-v3.0/resolve/main/Anything-V3.0-pruned.ckpt&quot;COMMANDLINE_ARGS=&quot;--exit&quot; REQS_FILE=&quot;requirements.txt&quot; python launch.pypython lauch.py --share 最后一步的&quot;INFO bore_cli::client: listening at bore.pub:xxxxx&quot;中的pore.pub:xxxxx就是生成的隧道链接，直接打开即可 只能连续用6h用完了重启即可，没有限额 Google Colab方案（不可用） Kaggle（推荐） 官网：https://www.kaggle.com 直接创建一个空白的notebook即可 记得验证手机号以启用GPU（推荐使用T4*2并使用半精度）和 Internet 链接 123456git clone https://github.com/AUTOMATIC1111/stable-diffusion-webuicd stable-diffusion-webui/mkdir -p /kaggle/working/stable-diffusion-webui/models/Stable-diffusion /notebooks/stable-diffusion-webui/models/hypernetworkswget -P /kaggle/working/stable-diffusion-webui/models/Stable-diffusion/ &quot;https://huggingface.co/gsdf/Counterfeit-V3.0/resolve/main/Counterfeit-V3.0_fp16.safetensors&quot;COMMANDLINE_ARGS=&quot;--exit&quot; REQS_FILE=&quot;requirements.txt&quot; python launch.pypython lauch.py --share 注：模型用的是Counterfeit-V3.0_fp16，感觉还不错","tags":["白嫖","GPU云服务器"],"categories":["水文"]},{"title":"给你的A卡换张皮--强刷vBIOS开核","path":"/posts/59890.html","content":"写在开头 开核，一个AMD的产品特有的词汇。 对于CPU而言，在Zen架构之前的系列里，部分特定批次的CPU可以在主板BIOS中打开那些被AMD屏蔽掉的可用核心（都是稀缺货 对于GPU而言，同样也是打开AMD屏蔽掉的那些流处理器，不过显卡不能通过像CPU那样调节BIOS轻松实现，但是它一般具有普适性 即只要是这个核心的显卡，就能通过强刷vBIOS来打开被屏蔽的流处理器 （有时为了让黑苹果免驱（如RX580 2048SP刷RX570），为了变身专业卡（Vega56刷WX8200）等，我们也许也会称这种行为叫开核，但这并不是严格意义上的开核，这顶多算换了个皮 实践前提 确认条件 首先，你先要有一块能够开核（或者开核有实际意义的）显卡 一般来说，有如下常见型号:（箭头具有传递性，也可以反着刷，只要你愿意XD） RX470D^1–&gt;RX470–&gt;RX580 2048SP RX460 --&gt; RX560 RX560d^1 --&gt; RX560 RX480 --&gt; RX580 --&gt; RX590GME RX Vega56 --&gt; RX Vega64 准备vBIOS 刷VBIOS具有极高的风险，要随时做好刷黑变砖的准备! 1.第一步打开GPU-Z &quot;（如果没有，曾经作为一名图钉，我推荐图吧工具箱，doge） 如果没有问题的话，你应该看到这个界面 这是对你现在使用的VBIOS的备份，非常重要！！ 2.点击如图标出的小箭头，选择一个你可以找到的地方保存下来 （同时记住标红的几个参数，图中“4096MB”处对应你的显存大小，“Hynix”对于你的显存品牌 3.接下来，进入VGA Bios Collection | TechPowerUp检索适合你的显卡的VBIOS 这里简单说下选择VBIOS的原则： 核心一样（RX480 4G–&gt;RX580 4G是允许的，RX460 --&gt; RX580是不被允许的） 显存容量，品牌一样（RX480 4G尔必达 --&gt; RX480 4G三星不被允许，RX480 4G海力士 --&gt; RX580 4G海力士 是允许的） 如图就是RX480 4G（海力士）对应的一个比较好的VBIOS（高亮的地方均符合要求 刷入vBIOS 到AMDVBFlash / ATI ATIFlash (3.31) Download | TechPowerUp下载软件 AMDVBFlash 并解压至一个你找得到的地方 将提前准备的待刷入的vBIOS，与amdvbflash放置在同一文件夹 右键，选择“在此处打开命令窗口”，输入 amdvbflash.exe -p -f 0 xxx.rom 其中，xxx.rom为准备的vBIOS 如果一切正常，他应该会提示你“Restart System To Complete VBIOS Update.” 重启电脑后，打开GPU-Z看看效果如何 如图，是我用RX480 4G刷的RX580 4G的成品图 刷黑救砖 刷vBIOS是一件有极大风险的事（失败了显卡直接变砖 不过一般而言，仅是刷错了vBIOS的话，显卡都还能救回来 对于有双vBIOS开关的卡 有双vBIOS开关的卡救卡难度是最低的 如果你发现刷入vBIOS后开机不过自检/黑屏，断电关机，切换vBIOS开关重启 进入系统后，直接切换vBIOS开关，依照刷入vBIOS的方法再次强刷回先前备份的原vBIOS （因此说备份vBIOS很重要！） 对于没双vBIOS开关的 可以在DOS环境下盲刷，具体教程： https://tieba.baidu.com/p/5500803523 可以在PE（Windows）环境下盲刷，对电脑要有相当的熟悉才可以做到： https://tieba.baidu.com/p/6728462628 还有一种要用到编程器，这里就不涉及了（我没有也不会 最后 刷vBIOS有意思归有意思，但他最后有没有用嘛，就是另一回事了 如我的RX480 4G刷上RX580 4G后 待机功耗52W --&gt; 90W 游戏功耗 90Ww --&gt; 148W 功耗增加了50%以上，然而性能反而下降了10%左右 因为虽然RX480 和RX580本质上没什么区别，都是魔改GCN北极星架构 但是RX480供电为8pin TDP约120W，而RX580为8+6pin TDP约180W 刷入RX580的vBIOS后，针对RX480设计的供电和散热纷纷撞墙，因此性能不增反减 不过也不失为一种打发时间的好方法doge","tags":["电脑","显卡"],"categories":["水文"]},{"title":"电脑续命四年计划(3)-CPU升级2667v2","path":"/posts/62402.html","content":"写在开头 这篇水文原本应该很久之前就动笔的，不过因为插进来个可恶的线上半期被迫延期 实际上，我也不是第一次换这台电脑的CPU了，总的路线图如下 E5-2670 --&gt; E5-1620v2 --&gt; E5-2667v2 第一次换呢，是为了提升单核性能，牺牲了多核性能（因为当时玩的游戏多核优化都很烂） 这一次换就是既要多核性能，还要单核性能（因此2667v2在当时是相当昂贵的U CPU-Z参数图 E5-1620V2 E5-1620v2参数实际上标得很迷惑，TDP标到了130W，但实际测试中顶天跑个90W（石锤了，1620v2就是i7-3770马甲） E5-2667V2 可以看到实际上两块CPU因为同代产品，都是用的Ivy-bridge架构（也就是3代酷睿架构），因此IPC应该相近 且2667v2的睿频跑的要比1620v2要低一些（1620v2全核3.7GHz，2667V2全核3.6GHz） 然而实测下来，2667v2的单线程跑分比1620v2还高 猜测有可能是因为，2667v2有比1620v2大得多的三级缓存（不过一般来说，三缓只对游戏体验的有较大的影响 不严谨理论测试 var e1 = function(){ var myChart = echarts.init(document.getElementById('cpu-test1')); var option = { title: { text: 'CPU理论性能测试成绩' }, legend: {}, tooltip: {}, dataset: { dimensions: ['product', 'E5-1620v2', 'E5-2667v2', 'i5-10400F'], source: [ { product: 'CPU-Z单线程', 'E5-1620v2': 372.3, 'E5-2667v2': 376.4, 'i5-10400F': 479.1 }, { product: 'CPU-Z多线程', 'E5-1620v2': 1862, 'E5-2667v2': 3536.8, 'i5-10400F': 3623.4 }, { product: 'R15多线程', 'E5-1620v2': 621, 'E5-2667v2': 1141, 'i5-10400F': 1291 }, { product: '国际象棋(取1/10)', 'E5-1620v2': 1331.4, 'E5-2667v2': 2202.2, 'i5-10400F': 2246.8 } ] }, xAxis: { type: 'category' }, yAxis: {}, // Declare several bar series, each will be mapped // to a column of dataset.source by default. series: [{ type: 'bar' }, { type: 'bar' }, { type: 'bar' }] }; myChart.setOption(option); // 刷新调整 window.onresize = function () { myChart.resize(); } } e1(); document.addEventListener('pjax:complete', function () { e1(); }); 这里为了方便对比洋垃圾v2与现在CPU性能差距，引入了一个I5-10400F的参考对比数据 不过不难看出，E5-2667v2几乎可以跟i5-10400f打个五五开（当然IPC是远远不如，尤其是面对新出的13代 而理论多线程性能约为1620v2的两倍 不严谨游戏测试 战地1 64人模式 画质设置: 高 环境温度:不知道 E5-1620v2 在非交战区域，FPS大约在69帧左右，勉强能玩 CPU占用跑到了79%，后台基本上不能挂东西 之前就某一次游戏全程掉帧，预估平均fps只有20左右~~（结果发现是后台挂了@Saiodgm的网站没有休眠，把CPU吃到了99%~~ GPU跑到了100%，还是很给力的（GPU一般都最好跑满，跑不满要么是优化问题，要么是其他硬件有瓶颈限制了发挥） E5-2667V2 在同一场景下，E5-2667v2为76fps，要比E5-1620v2高出7fps 而且CPU的占用仅有33%（缺点是功耗的温度都有显著上升 战地5 64人线上模式 战地系列游戏特有的大战场场景非常适合用来测试CPU实际性能（而且优化做的很好，不像某P社只会用CPU0 在战地5中对CPU性能的要求比前作战地1还要高得多 画质设置：中（开启DX12和未来帧渲染，关闭垂直同步） （原本想开高的，但是开高的话就爆显存了。。。） 环境温度：不知道 E5-1620V2 野外非交战区域，FPS大约为76 此时CPU占用已经跑到97%了，已经接近满载，后台几乎不能挂东西（否则会严重掉帧 GPU跑到了98%，也还不错，基本性能是发挥到位了的 游戏过程偶尔会掉帧，在中心交战区域尤其显著 （这就是为啥我打战地1却不玩战地5的部分原因 （当然战地5的画风和武器手感不喜欢也是 E5-2667V2 同样野外非交战场景，FPS大约为100 遇到对CPU性能要求更高的战地5的时候，2667v2的双倍性能就得到了充分体现 这里CPU占用率仅为48%（后台可以随便挂了属于是），GPU占用率跑到了100% 帧数也相比1620v2有很大进步，76FPS --&gt; 100FPS CPU功耗和温度也获得了显著提升 表格汇总 var myChart = echarts.init(document.getElementById('cpu-test2')); var option = { title: { text: 'CPU实际游戏帧率' }, legend: {}, tooltip: {}, dataset: { dimensions: ['product', 'E5-1620v2', 'E5-2667v2'], source: [ { product: '战地1', 'E5-1620v2': 69, 'E5-2667v2': 78 }, { product: '战地5', 'E5-1620v2': 76, 'E5-2667v2': 100 } ] }, xAxis: { type: 'category' }, yAxis: {}, // Declare several bar series, each will be mapped // to a column of dataset.source by default. series: [{ type: 'bar' }, { type: 'bar' }, { type: 'bar' }] }; myChart.setOption(option); // 刷新调整 window.onresize = function () { myChart.resize(); } 总结 总的来说，这次升级还是非常值得的，不过这也仅限于升级来说 目前1620v2市场价90元左右（市场上需求真的很小，我挂咸鱼很久都卖不出去 2667v2市场价180元左右（还是最近价格大跳水才有的性价比，几个月前的价格是现在的好几倍 当然，如果你是全新装机，X79/X99这类洋垃圾一定要划入黑名单，老平台在最近的新架构面前没有任何性价比","tags":["电脑","评测","生活"],"categories":["电脑续命四年计划"]},{"title":"一些奇怪的想法","path":"/posts/27613.html","content":"写在开头 ​\temmm…这个页面呢, 主要是用来记录一些平时脑子里突然产生的一些想法或者说问题 (像什么上课走神的时候) 这些可能有简洁明了的答案, 但也有可能没有, 但我一定尽力去寻找并作一些分享吧 Part1 摩擦起电的一些思考 ​\t物理很早以前就已经讲了摩擦起电了, 但是这个内容是在更深层次的化学知识学习之前讲的, 并且对具体原理并没有作要求。而我们在学习了更多化学知识后， 会发现有些内容是难以理解的 课本原文的引发 两个物体互相摩擦时，因为不同物体的原子核束缚核外电子的本领不同，所以其中必定有一个物体失去一些电子，另一个物体得到多余的电子。 ​\t课本原文似乎在最初学习时是可以理解的, 但学过一点点化学后就不禁会有疑问: 许多物质是由分子构成的, 这些分子的&quot;对电子的束缚能力&quot;又跟什么有关 许多物质化学构成中各原子是保持着相对稳定结构的，而摩擦起电的电子得失不会打破这种相对稳定结构引起物质的不稳定吗（而我们又知道摩擦起电被认为是物理变化） 摩擦起电的电子得失问题 Generic Electron-Cloud-Potential模型 这里需要查询一下万能的维基百科 摩擦电效应 Although the part ‘tribo-’ comes from the Greek for “rubbing”, τρίβω (τριβή: friction), the two materials only need to come into contact for electrons to be exchanged. After coming into contact, a chemical bond is formed between parts of the two surfaces, called adhesion, and charges move from one material to the other to equalize their electrochemical potential. This is what creates the net charge imbalance between the objects. When separated, some of the bonded atoms have a tendency to keep extra electrons, and some a tendency to give them away, though the imbalance will be partially destroyed by tunneling or electrical breakdown (usually corona discharge). In addition, some materials may exchange ions of differing mobility, or exchange charged fragments of larger molecules. The triboelectric effect is related to friction only because they both involve adhesion. However, the effect is greatly enhanced by rubbing the materials together, as they touch and separate many times.[17] For surfaces with differing geometry, rubbing may also lead to heating of protrusions, causing pyroelectric charge separation which may add to the existing contact electrification, or which may oppose the existing polarity. Surface nano-effects are not well understood, and the atomic force microscope has enabled rapid progress in this field of physics. 维基百科大概的意思是说: 这里有一个解释一般的摩擦起电的模型被称为generic electron-cloud-potential模型 讲的就是，两种材料制成的物质只需要紧密接触(并不一定需要摩擦) , 电子即可发生交换 。在低于原子平衡距离接触后，两个表面的部分之间通过电子云的重叠形成化学键 (这里可以是共价键也可以是离子键)。 而施加的外力，可以进一步减小这两材料间两个原子间的距离（也就是键长），这种电子云的高度重叠降低两原子的能垒促使其发生电子的转移。 此时若使两原子分离(摩擦实际上就是不断接触又分离的过程)，转移后的电子就保留了下来，形成了静电荷。 理论后的思考 可以看到这个非常高大上的理论解释了为什么会有电子的转移，但这个并没有问答上面的问题 而且随着研究的深入， 问题的探究深度已经远远超出了我的预期 这里提供一篇大佬的相关论文 On the Electron-Transfer Mechanism in the ContactElectrification Effect 说了这么多， 对于一般的题目来说只需要记住结论就可以了，千万不要想太多🤣 Part2 未完待续","tags":["奇思妙想","胡扯"],"categories":["胡扯区"]},{"title":"电脑续命四年计划(2)-PE4010两个月使用体验","path":"/posts/36101.html","content":"写在开头 这个使用体验为什么被划进了四年计划里面? 实际上是因为这块海力士的PE4010是要顶掉挂掉的机械硬盘之前所扮演的角色: 存游戏: 主盘480g, 实际可用容量不足300G, 用起来难受 存不重要文件: 毕竟还是块洋垃圾, 不敢装重要文件( 使用体验 购入经历 这块盘是在2022年8月21号购入 (正好在短短的暑假第二阶段的开头) 之前, 这台电脑一直是 2TB机械 + 480G SATA固态的搭配 其中2TB机械自从2020年以后, 工作状态就极为令人担忧, 比如: 当你打开游戏与网友联机时, 突然机械硬盘处传来一阵&quot;滋滋&quot;的掉盘声, 这个时候轻则卡顿掉线, 重则蓝屏, 然后你的队友的屏幕上缓缓升起: 接着就在等待机械硬盘令人捉急的加载时长中, 被网友们QQ轰炸吧( 所以当这个硬盘终于挂掉的时候, 我甚至发了条说说来庆祝o(*￣▽￣*)ブ5 当然机械硬盘上面所有的数据也是全部挂掉了(但是大多都是游戏) 原来的游戏还需要一块盘来储存, 购入一块新硬盘的需求就很明显了 经过一些考虑, 最终选择了新靠岸的大船货PE4010: 商家说这块盘的写入量10t-20t左右, 通电时间100h以下(是不是清零盘存疑) 不过据网上的说法, 这块盘采用的主控马牌88SS1093是不能清零的, 无论如何这个价格要什么自行车 而为什么就写了10t就从服务器流入了市场,网上传言的解释是： PSA PE4010 和 PE6110 有极为严重的品控问题，具体表现为因焊料和 PCB 选材问题，在相对不够干净的环境下会出现铜绿腐蚀穿 PCB 和 NAND 的情况 南方高湿度的气候会显著加速这个过程 且厂商无妥善解决方案 实物 而受限于X79的扩展性 (没有m.2 22110插槽, 也不支持NVME引导) 所以这块盘的定位就只能是从盘 (从盘性能比主盘好就离谱) 只能用pcie转接卡, 并且紧贴显卡这一大热源, 而这个马牌主控本身就有惊人的发热量(裸奔情况下温度能破90) 为此特地买了散热片专门给主控散热(还涂了一堆硅脂), 日常使用温度就不会撞温度墙了 不严谨测试 话不多说, 先看一下基本信息 由于在此之前, 博主已经用了将近两个月了, 减去过后这个状况还是很令人满意的 再给它来一个测速: 性能表现实际上很一般, 不过已经比主盘TC10 480G和机械硬盘好太多了(已经知足了 作为对比, 我们来看一下TC10孱弱的性能表现 总结 海力士PE4010 960G这块盘在当时250元左右的时候是性价比最高的, 我上车的时候就已经算晚了 至于现在960G 固态仓库盘的选择肯定不会推荐PE4010了 一是它的2字头价格已经一去不复返了, 二是它缺乏保障的稳定性 现在一般推荐加个几十上 pdd 的 SN350 1TB, 保修什么的都是实打实的, 而且性能作为仓库盘也足够了 2023-08更新 这下成大怨种了，现在2t的全新全速3.0固态盘也才400","tags":["电脑","评测","生活"],"categories":["电脑续命四年计划"]},{"title":"电脑续命四年计划(0)-电脑情况概述","path":"/posts/26610.html","content":"写在开头 不知不觉, 手上这台电脑也已经服役将近6年(2017年1月购入并组装) 但是这台电脑目前的性能和工作状况一言难尽 且目前来看, 估计一直到高考结束(这期间有4年,故得名&quot;四年计划&quot;), 这台电脑都不可能有更新主要配件的机会 所以，保证这台电脑正常工作就显得至关重要 配置概览 简单介绍 先上图 可以看到这套配置就一纯种洋垃圾配置, 几乎包含了洋垃圾的全部要素: E5-1620v2 服务器cpu, 差不多是i7-3770的马甲(不过价格低很多 HUANAN X79 华南的寨板, 不过这块X79是用的原生X79南桥, 不是用B75魔改的(质量还不错? 4GB REG ECC DDR3 1333MHz *4 三星的服务器内存, 由于家用主板用不了recc所以价格相当的便宜 海力士PE4010 960G(HFS9600GD0TEG) 也是捡的服务器SSD 恺侠tc10 480G 这个属于是没做功课, pdd上随便乱买的, 性价比一般 至于为什么要配这样一套配置，就得把时间拉回2017年1月了…(发现自己竟然这么早就在搞这个东西) 为什么不换平台？ ​\t你可能会说，怎么2202年了还搁着用X79呢？12代i3什么的不比这个老掉牙的E5香的多？ 实际上，目前如果购入一套新平台的话，没有1000+预算根本拿不下来。（现有所有零件基本均不适配 并且目前X79的相关二手价格奇低无比（4g内存条价格可能还不够出运费 奇低的二手价格导致了换平台的高成本，但是如果换一个思路想： ​\t那它是不是也降低了我的升级成本呢？ 答案是很显然的，目前情况如下： 16g 1866recc单条只要50（64g内存指日可待？！ e5-2667v2单价200 （而e5-1620v2二手还能卖100 所以短期来看，低投入的小修小补应该是最优解 背景原因 在2017年的时候, AMD的锐龙系列还没有发售, 推土机之类的模块化架构IPC一言难尽 家用平台基本只能用intel的酷睿系列 由于缺乏竞争, 这个板u一套的价格嘛就一言难尽了 最为重要的是, 2017年内存市场的爆炸(感谢生产线火灾的馈赠 但是随着一批批大船的靠岸, 大量被称为&quot;洋垃圾&quot;的淘汰服务器配件涌入国内市场, 包括但不限于: 服务器内存(REGECC) 服务器主板(X79等) 服务器CPU(E5/E3等) … 博主当时选择的是e5-2670 , 8C16T 花了约420性价比还是很足的(一个缺点是单核性能较为拉跨) 4*4G REGECC也是相当的便宜,一根估计也就几十块钱(而且有4通道加成) 还有显卡用的是GTX780Ti 不过后来换成了RX480, 下篇文章有讲 一些小插曲 不过便宜也有代价， 当时电脑最开始组装好后出现了一个致命问题困扰了我好几个月（且十分难以排查 这里描述一下现象，看一下你能不能猜出来是什么问题: CPU正常鲁大师(均为旧版)跑分应为11.9w，结果实际只有9w GPU正常鲁大师跑分应为18.9w，结果只有11w 游戏内帧数如GTA5只有个位数FPS，MC表现要好一些(至少能上60fps) 游戏内GPU和CPU都跑不满，既没有爆内存也没有爆显存 揭秘：有一根内存条有问题，他处于一个半正常工作状态(能点亮过自检，但有问题) 这是在某次开机的时候，这个内存条直接开摆连自检都过不了，我就随便拿了两根家用内存条去测试 结果开机后跑分时发现：跑分又恢复正常了?! 可以直接断定内存条有问题，直接换下来即可（不过这个问题时隔5年又复发了，但我已经有经验也不就慌了… 运行现状 一张图就能说明一切 要素盘点: 缺乏安全感的水冷(水冷:从入门到索赔无门) 敞开体系运行(大号吸尘器) 灵 魂 走 线(哪天开不了机了记得看一下跳线是不是松了) 装饰兼玩具用光驱(没接SATA数据线,只连了电源线,等开机的时候按着玩…) 没有螺丝固定的风扇和固态(丑) 连接不全的跳线(只连了开机和重启跳线) 以这个运行状况, 这电脑能用5年就已经是奇迹了(逃 升级计划 [x] 把CPU换成E5-2667v2(4核e5打战地太捉急了) [ ] 换下令人缺乏安全感的120水冷(已经过了质保期了…) [x] 整理一下走线 [ ] …","tags":["电脑","生活"],"categories":["电脑续命四年计划"]},{"title":"电脑续命四年计划(1)-给老显卡改善一下散热条件","path":"/posts/23205.html","content":"写在开头 为什么要换成RX484 不知不觉，电脑上的这块RX480 4G也用了快5年了 (能用5年就是奇迹) 实际上这台电脑最开始用的不是RX484, 最开始是用的老卡皇gtx780ti 3G 这gtx780ti呢, 给人最显著的感受就是: 这功耗真的大啊！！ 为此电源是直接给到了额定700W, 用是可以用了, 但是老开普勒架构的表现也是不尽如人意: 功耗问题：游戏时可以达到300W的功耗，这电费和温度谁顶得住 优化问题: 老架构对新游戏支持不够好 换了RX484后的表现 综合了一些考虑以后， 果断在咸鱼上面卖掉换了RX484(并小赚几百) 至于RX484, 一看它的参数: 功耗只有100W 有14nm制程加持(想必这温度表现一定很好吧!) 结果这块RX484温度表现更为惊人, 正常游戏中就可以跑到780ti都难以企及的80度以上 权宜之计就是机箱不关侧盖，结果就是变身吸尘器+电热炉 这样一直用到了2021年… 到了2021年的时候, 大家都知道又一轮大规模的矿潮来了, 一时间各平台的显卡价格飞涨 甚至包括RX480 4G这块挖不了ETH的老兵, 当时挂咸鱼上时价格直接给到了2000元 但是由于我当时沉迷于游戏之中, 确实不愿意将显卡出手(谁知道什么时候矿难呢? 结果, 过了一周显卡价格直接跳水, 再过一两个月2000元就能买到新的丐版RX6600XT了 (追悔莫及中…😂) 不过既然当时没有抛弃它, 未来也很难有机会甩掉它了 所以,我们的目标肯定不是只用5年就结束了, 既然叫四年计划目标就是尽量让它再战四年, (让高中还能继续打游戏) 第一阶段: 换硅脂 简简单单换个硅脂, 毕竟干其他的, 我条件也有限。 现在用的硅脂是估计一年前左右买的便宜大碗的高导GD007(几块钱就有十多克), 对比一下7921甚至TFX, 这个性价比简直不能太高 但是这种便宜的硅脂一个很大的问题就是寿命有限, 越到后面这散热性能就越令人捉急 初始表现 测试条件: 敞开体系, 室温19℃ 驱动日用设置参数如图 为了对比, 先跑一个甜甜圈看一下GD007的表现 可以看到核心温度基本稳定在79度, 功耗107W左右, 我就很疑惑这真的能用4年吗 更换硅脂 先拆下这块久经沙场的RX480 拧掉背板上的几颗螺丝后，就看见PCB板真面目了 把核心上原有的硅脂擦干净以后 (忽视旁边溢出的硅脂和有些焦黄的显存，这个核心还是很好看的 挤上硅脂7921, 插电正常亮机 7921的表现 保持显卡驱动设置不变再跑一次 emmmmmm…这个好像并没有什么变化啊 不过核心我们一般认为还是很耐艹的, 76度也问题不大(麻痹自己中…) 第二阶段: 降压但不超频 微调电压 为什么? 我们知道很多玩家拿到显卡后, 最喜欢做的就是看下显卡的体质来波降压超频(甚至是加压超频) 根据半导体芯片的功耗公式: (a,b对于同一芯片为常量,F指频率) $$ P=abF*U^2 $$ 可以看到电压在其中是二次项, 调整电压的大小对于功耗来说有举足轻重的作用(再辅以降频) 可以达到降低功耗进而 (践行低碳生活) 降低散热压力 实际操作 实际操作起来就是一点点地去降低电压, 比如: 我设置1150mV能过压测,我设置1130mV也能过压测,我设置1101mV还能过压测 但是如果跳到1100mV显卡终于绷不住了,那你就成功地把握住了显卡的底线1101mV(大雾) 不过并不建议就把电压设置为1101mV, 在低负载的时候可能会出问题… 这里是我自己测好的最优电压状态 风扇策略 这个的话就不展开了, 风扇策略实际上是取决于使用者本身的底线(对噪音的忍耐程度) 不过我都把机箱侧盖扔了, 噪音什么的也不在乎, 直接往上拉就行了 第三阶段:未完待续 To Do List: [ ] 给裸露的显存加一下散热片 [ ] 给mos管加导热垫","tags":["电脑","生活"],"categories":["电脑续命四年计划"]},{"title":"Hello World","path":"/posts/4a17b156.html","content":"不弃坑，坚持写 本站从10月2日也就正式启用了，希望用这个官方生成的helloworld来作为纪念吧。 Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick Start Create a new post 1$ hexo new &quot;My New Post&quot; More info: Writing Run server 1$ hexo server More info: Server Generate static files 1$ hexo generate More info: Generating Deploy to remote sites 1$ hexo deploy More info: Deployment"},{"path":"/manifest.json","content":"{\"lang\":\"en\",\"dir\":\"ltr\",\"name\":\"cqlkc的博客\",\"description\":\"cqlkc.top\",\"display\":\"standalone\",\"short_name\":\"cqlkc\",\"scope\":\"/\",\"start_url\":\"/\",\"theme_color\":\"#212121\",\"background_color\":\"#212121\",\"icons\":[{\"src\":\"/img/siteicon/16.png\",\"sizes\":\"16x16\",\"type\":\"image/png\"},{\"src\":\"/img/siteicon/32.png\",\"sizes\":\"32x32\",\"type\":\"image/png\"},{\"src\":\"/img/siteicon/64.png\",\"sizes\":\"64x64\",\"type\":\"image/png\"},{\"src\":\"/img/siteicon/512.png\",\"sizes\":\"512x512\",\"type\":\"image/png\"}]}"},{"path":"/package.json","content":"{\"name\":\"cqlkc-mirror\",\"version\":\"1.3.17\",\"description\":\"\",\"main\":\"sw.js\",\"directories\":{\"test\":\"test\"},\"scripts\":{\"test\":\"echo \\\"Error: no test specified\\\" && exit 1\"},\"author\":\"cqlkc\",\"license\":\"ISC\"}"},{"path":"/sw-old.js","content":"const CACHE_NAME = 'ICDNCache'; let cachelist = []; self.addEventListener('install', async function (installEvent) { self.skipWaiting(); installEvent.waitUntil( caches.open(CACHE_NAME) .then(function (cache) { console.log('Opened cache'); return cache.addAll(cachelist); }) ); }); self.addEventListener('fetch', async event => { try { event.respondWith(handle(event.request)) } catch (msg) { event.respondWith(handleerr(event.request, msg)) } }); const handleerr = async (req, msg) => { return new Response(`sw挂了 ${msg}`, { headers: { \"content-type\": \"text/html; charset=utf-8\" } }) } let cdn = {//镜像列表 \"gh\": { jsdelivr: { \"url\": \"https://cdn.jsdelivr.net/gh\" }, tianli: { \"url\": \"https://cdn1.tianli0.top/gh\" } }, \"combine\": { jsdelivr: { \"url\": \"https://cdn.jsdelivr.net/combine\" }, jsdelivr_fastly: { \"url\": \"https://fastly.jsdelivr.net/combine\" } }, \"npm\": { afdelivr: { \"url\": \"https://cdn.afdelivr.top/npm\" }, eleme: { \"url\": \"https://npm.elemecdn.com\" }, jsdelivr: { \"url\": \"https://cdn.jsdelivr.net/npm\" }, jsdelivr_fastly: { \"url\": \"https://fastly.jsdelivr.net/npm\" }, zhimg: { \"url\": \"https://unpkg.zhimg.com\" }, unpkg: { \"url\": \"https://unpkg.com\" }, tianli: { \"url\": \"https://cdn1.tianli0.top/npm\" } } } //主控函数 const handle = async function (req) { const urlStr = req.url const domain = (urlStr.split('/'))[2] const urlObj = new URL(urlStr); const urlPath = urlObj.pathname; const pathname = urlObj.href.substr(urlObj.origin.length); let urls = [] if (pathname.match(/\\/sw\\.js/g)) { return fetch(req) } if(domain === \"cqlkc.top\"){ return lfetch(generate_blog_urls('cqlkc-mirror',await db.read('blog_version') || '1.0.1',fullpath(urlPath))) .then(res=>res.arrayBuffer())//arrayBuffer最科学也是最快的返回 .then(buffer=>new Response(buffer,{headers:{\"Content-Type\":\"text/html;charset=utf-8\"}}))//重新定义header } for (let i in cdn) { for (let j in cdn[i]) { if (domain == cdn[i][j].url.split('https://')[1].split('/')[0] && urlStr.match(cdn[i][j].url)) { urls = [] for (let k in cdn[i]) { urls.push(urlStr.replace(cdn[i][j].url, cdn[i][k].url)) } if (urlStr.indexOf('@latest/') > -1) { return lfetch(urls, urlStr) } else { return caches.match(req).then(function (resp) { return resp || lfetch(urls, urlStr).then(function (res) { return caches.open(CACHE_NAME).then(function (cache) { cache.put(req, res.clone()); return res; }); }); }) } } } } return fetch(req) } const lfetch = async (urls, url) => { let controller = new AbortController(); const PauseProgress = async (res) => { return new Response(await (res).arrayBuffer(), { status: res.status, headers: res.headers }); }; if (!Promise.any) { Promise.any = function (promises) { return new Promise((resolve, reject) => { promises = Array.isArray(promises) ? promises : [] let len = promises.length let errs = [] if (len === 0) return reject(new AggregateError('All promises were rejected')) promises.forEach((promise) => { promise.then(value => { resolve(value) }, err => { len-- errs.push(err) if (len === 0) { reject(new AggregateError(errs)) } }) }) }) } } return Promise.any(urls.map(urls => { return new Promise((resolve, reject) => { fetch(urls, { signal: controller.signal }) .then(PauseProgress) .then(res => { if (res.status == 200) { controller.abort(); resolve(res) } else { reject(res) } }) }) })) } /* 2022-11-30新增all-site-npm */ const fullpath = (path) => { path = path.split('?')[0].split('#')[0] if (path.match(/\\/$/)) { path += 'index' } if (!path.match(/\\.[a-zA-Z]+$/)) { path += '.html' } return path } const generate_blog_urls = (packagename, blogversion, path) => { const npmmirror = [ `https://cdn.afdelivr.top/npm/${packagename}@${blogversion}`, `https://unpkg.com/${packagename}@${blogversion}`, `https://npm.elemecdn.com/${packagename}@${blogversion}`, `https://cdn.jsdelivr.net/npm/${packagename}@${blogversion}`, `https://npm.sourcegcdn.com/npm/${packagename}@${blogversion}`, `https://cdn1.tianli0.top/npm/${packagename}@${blogversion}` ] for (var i in npmmirror) { npmmirror[i] += path } return npmmirror } const mirror = [ `https://registry.npmmirror.com/cqlkc-mirror/latest`, `https://registry.npmjs.org/cqlkc-mirror/latest`, `https://mirrors.cloud.tencent.com/npm/cqlkc-mirror/latest` ] const get_newest_version = async (mirror) => { return lfetch(mirror, mirror[0]) .then(res => res.json()) .then(res.version) } self.db = { //全局定义db,只要read和write,看不懂可以略过 read: (key, config) => { if (!config) { config = { type: \"text\" } } return new Promise((resolve, reject) => { caches.open(CACHE_NAME).then(cache => { cache.match(new Request(`https://LOCALCACHE/${encodeURIComponent(key)}`)).then(function (res) { if (!res) resolve(null) res.text().then(text => resolve(text)) }).catch(() => { resolve(null) }) }) }) }, write: (key, value) => { return new Promise((resolve, reject) => { caches.open(CACHE_NAME).then(function (cache) { cache.put(new Request(`https://LOCALCACHE/${encodeURIComponent(key)}`), new Response(value)); resolve() }).catch(() => { reject() }) }) } } const set_newest_version = async (mirror) => { //改为最新版本写入数据库 return lfetch(mirror, mirror[0]) .then(res => res.json()) //JSON Parse .then(async res => { await db.write('blog_version', res.version) //写入 return; }) } setInterval(async() => { await set_newest_version(mirror) //定时更新,一分钟一次 }, 60*1000); setTimeout(async() => { await set_newest_version(mirror)//打开五秒后更新,避免堵塞 },5000)"},{"path":"/sw.js","content":"const CACHE_NAME = 'cqlkc-sw'; let cachelist = []; self.cons = { s: (m) => { console.log(`%c[SUCCESS]%c ${m}`, 'color:white;background:green;', '') }, w: (m) => { console.log(`%c[WARNING]%c ${m}`, 'color:brown;background:yellow;', '') }, i: (m) => { console.log(`%c[INFO]%c ${m}`, 'color:white;background:blue;', '') }, e: (m) => { console.log(`%c[ERROR]%c ${m}`, 'color:white;background:red;', '') }, d: (m) => { console.log(`%c[DEBUG]%c ${m}`, 'color:white;background:black;', '') } } const generate_uuid = () => { return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) { var r = Math.random() * 16 | 0, v = c == 'x' ? r : (r & 0x3 | 0x8); return v.toString(16); }); } self.db = { read: (key, config) => { if (!config) { config = { type: \"text\" } } return new Promise((resolve, reject) => { caches.open(CACHE_NAME).then(cache => { cache.match(new Request(`https://LOCALCACHE/${encodeURIComponent(key)}`)).then(function (res) { if (!res) resolve(null) res.text().then(text => resolve(text)) }).catch(() => { resolve(null) }) }) }) }, write: (key, value) => { return new Promise((resolve, reject) => { caches.open(CACHE_NAME).then(function (cache) { cache.put(new Request(`https://LOCALCACHE/${encodeURIComponent(key)}`), new Response(value)); resolve() }).catch(() => { reject() }) }) } } self.addEventListener('activate', async function (installEvent) { self.clients.claim() }) self.addEventListener('install', async function (installEvent) { self.skipWaiting(); installEvent.waitUntil( caches.open(CACHE_NAME) .then(async function (cache) { if (!await db.read('uuid')) { await db.write('uuid', generate_uuid()) } return cache.addAll(cachelist); }) ); }); const handleerr = async (req, msg) => { return new Response(`sw挂了 ${msg}`, { headers: { \"content-type\": \"text/html; charset=utf-8\" } }) } let cdn = { \"gh\": { zzko: { \"url\": \"https://jsd.cdn.zzko.cn/gh\" }, jsdelivr: { \"url\": \"https://cdn.jsdelivr.net/gh\" } }, \"npm\": { eleme: { \"url\": \"https://npm.elemecdn.com\" }, zzko: { \"url\": \"https://jsd.cdn.zzko.cn/npm\" }, jsdelivr: { \"url\": \"https://cdn.jsdelivr.net/npm\" } //oplog: { // \"url\": \"https://cdn.oplog.cn/npm\" //}, } } const cache_url_list = [] const blog_default_version = '2.0.0' const handle = async function (req) { set_blog_config(await db.read('blog_version') || blog_default_version) const reqdata = await req.clone() // try { // if (!wsc.OPEN) wsc.onclose() // } catch (e) { } const urlStr = req.url let urlObj = new URL(urlStr) const uuid = await db.read('uuid') const pathname = urlObj.href.substr(urlObj.origin.length) const port = urlObj.port const domain = (urlStr.split('/'))[2] if (pathname.match(/\\/sw\\.js/g)) { return fetch(req) } if (pathname.match(/\\/null/g)) { return null } if (pathname.match(/\\/undefined/g)) { return null } const path = pathname.split('?')[0] const query = q => urlObj.searchParams.get(q) let urls = [] let msg = JSON.parse(await db.read('msg')) || (async () => { await db.write('msg', '[]'); return '[]' })() const nqurl = urlStr.split('?')[0] const nqreq = new Request(nqurl) const cache_delete = async (url) => { const cache = await caches.open(CACHE_NAME) await cache.delete(url) } if (query('nosw') == 'true') { return fetch(req) } if (query('delete') == 'true') { cache_delete(nqreq); msg.push( { \"name\": \"文件已删除\", \"time\": new Date(), \"info\": `已删除${nqurl}` } ) await db.write('msg', JSON.stringify(msg)) return new Response(JSON.stringify({ ok: 1 })) } if (query('forceupdate') == 'true') { //update cache msg.push( { \"name\": \"文件已强制更新\", \"time\": new Date(), \"info\": `已更新${nqurl}` } ) await db.write('msg', JSON.stringify(msg)) await fetch(req).then(function (res) { return caches.open(CACHE_NAME).then(function (cache) { cache_delete(nqreq); cache.put(req, res.clone()); return res; }); }); return new Response(JSON.stringify({ ok: 1 })) } for (let i in cdn) { for (let j in cdn[i]) { if (domain == cdn[i][j].url.split('https://')[1].split('/')[0] && urlStr.match(cdn[i][j].url)) { urls = [] for (let k in cdn[i]) { urls.push(urlStr.replace(cdn[i][j].url, cdn[i][k].url)) } return caches.match(req).then(function (resp) { return resp || lfetch(urls, urlStr).then(function (res) { return caches.open(CACHE_NAME).then(function (cache) { cache.put(req, res.clone()); return res; }); }); }) } } } for (var i in blog.origin) { if (domain.split(\":\")[0] == blog.origin[i].split(\":\")[0]) { // if (typeof wsc !== \"undefined\") { // if (wsc.readyState != 1) { // await db.write('disconnect', '1') // } else { // await db.write('disconnect', '0') // } // } if (blog.local) { return fetch(req) } setTimeout(async () => { await set_newest_blogver() }, 30 * 1000); urls = [] for (let k in blog.plus) { //urls.push(urlStr.replace(domain, blog.plus[k]).replace(domain + \":\" + port, blog.plus[k]).replace('http://', \"https://\")) urls.push(`https://${blog.plus[k]}` + fullpath(pathname)) } for (let k in blog.npmmirror) { urls.push(blog.npmmirror[k] + fullpath(pathname)) } const generate_blog_html = async (res) => { return new Response(await res.arrayBuffer(), { headers: { 'Content-Type': 'text/html;charset=utf-8' }, status: res.status, statusText: res.statusText }) } return new Promise((resolve, reject) => { setTimeout(() => { caches.match(req).then(function (resp) { if (!!resp) { cons.s(`Cache Hited! | Origin:${urlStr}`) setTimeout(() => { resolve(resp) }, 200); setTimeout(() => { lfetch(urls, urlStr).then(async function (res) { return caches.open(CACHE_NAME).then(async function (cache) { cache.delete(req); cons.s(`Cache Updated! | Origin:${urlStr}`) if (fullpath(pathname).match(/\\.html$/g)) { const NewRes = await generate_blog_html(res) cache.put(req, NewRes.clone()); resolve(NewRes) } else { cache.put(req, res.clone()); resolve(res) } }); }); }, 0); } else { cons.w(`Cache Missed! | Origin:${urlStr}`) setTimeout(() => { lfetch(urls, urlStr).then(async function (res) { return caches.open(CACHE_NAME).then(async function (cache) { if (fullpath(pathname).match(/\\.html$/g)) { const NewRes = await generate_blog_html(res) cache.put(req, NewRes.clone()); resolve(NewRes) } else { cache.put(req, res.clone()); resolve(res) } }); }).catch(function (err) { resolve(caches.match(new Request('/offline.html'))) }) }, 0); setTimeout(() => { resolve(caches.match(new Request('/offline.html'))) }, 5000); } }) }, 0); }) } } for (var i in cache_url_list) { if (urlStr.match(cache_url_list[i])) { return caches.match(req).then(function (resp) { return resp || fetch(req).then(function (res) { return caches.open(CACHE_NAME).then(function (cache) { cache.put(req, res.clone()); return res; }); }); }) } } return fetch(req) } const lfetch = async (urls, url) => { cons.i(`LFetch Handled! | Mirrors Count:${urls.length} | Origin: ${url}`) const t1 = new Date().getTime() const uuid = await db.read('uuid') if (!Promise.any) { Promise.any = function (promises) { return new Promise((resolve, reject) => { promises = Array.isArray(promises) ? promises : [] let len = promises.length let errs = [] if (len === 0) return reject(new AggregateError('All promises were rejected')) promises.forEach((promise) => { promise.then(value => { resolve(value) }, err => { len-- errs.push(err) if (len === 0) { reject(new AggregateError(errs)) } }) }) }) } } let controller = new AbortController(); const PauseProgress = async (res) => { return new Response(await (res).arrayBuffer(), { status: res.status, headers: res.headers }); }; let results = Promise.any(urls.map(async urls => { return new Promise(async (resolve, reject) => { fetch(urls, { signal: controller.signal }) .then(PauseProgress) .then(async res => { const resn = res.clone() if (resn.status == 200) { controller.abort(); cons.s(`LFetch Success! | Time: ${new Date().getTime() - t1}ms | Origin: ${url} `) resolve(resn) } else { reject(null) } }).catch((e) => { if (String(e).match('The user aborted a request') || String(e).match('Failed to fetch')) { console.log() } else if (String(e).match('been blocked by CORS policy')) { cons.e(`LFetch Blocked by CORS policy! | Origin: ${url}`) } else { cons.e(`LFetch Error! | Origin: ${url} | Resean: ${e}`) } reject(null) }) } ) } )).then(res => { return res }).catch(() => { return null }) return results } const fullpath = (path) => { path = path.split('?')[0].split('#')[0] if (path.match(/\\/$/)) { path += 'index' } if (!path.match(/\\.[a-zA-Z0-9]+$/)) { path += '.html' } return path } const set_blog_config = (version) => { self.packagename = \"cqlkc-mirror\" self.blogversion = version self.blog = { local: 0, origin: [ \"cqlkc.top\", ], plus: [ //\"cqlkc.top\", //\"tkserver.cqlkc.top:47819\", \"cqlkc.4everland.app\", \"vc.cqlkc.top\", ], npmmirror: [ //`https://cdn1.tianli0.top/npm/${packagename}@${blogversion}`, `https://jsd.cdn.zzko.cn/npm/${packagename}@${blogversion}`, //`https://cdn.afdelivr.top/npm/${packagename}@${blogversion}`, //`https://npm.elemecdn.com/${packagename}@${blogversion}`, //`https://unpkg.com/${packagename}@${blogversion}`, //`https://cdn.jsdelivr.net/npm/${packagename}@${blogversion}`, //`https://cdn-jsd.pigax.cn/npm/${packagename}@${blogversion}`, //`https://cdn.oplog.cn/npm/${packagename}@${blogversion}/public` ] }; } const set_newest_blogver = async () => { self.packagename = \"cqlkc-mirror\" const mirror = [ `https://registry.npmmirror.com/${packagename}/latest`, `https://registry.npmjs.org/${packagename}/latest`, `https://mirrors.cloud.tencent.com/npm/${packagename}/latest` ] cons.i(`Searching For The Newest Version...`) return lfetch(mirror, mirror[0]) .then(res => res.json()) .then(async res => { if (!res.version) throw ('No Version Found!') const gVer = choose_the_newest_version(res.version, await db.read('blog_version') || blog_default_version) cons.d(`Newest Version: ${res.version} ; Local Version: ${await db.read('blog_version')} | Update answer: ${gVer}`) cons.s(`Update Blog Version To ${gVer}`); if (gVer !== await db.read('blog_version') && gVer !== blog_default_version){ function a() { return self.clients.matchAll() .then(function (clients) { if (clients && clients.length) { clients.forEach(function (client) { client.postMessage('sw.update'); }) } }) } a(); } await db.write('blog_version', gVer) set_blog_config(gVer) }) .catch(e => { cons.e(`Get Blog Newest Version Erorr!Reseon:${e}`); set_blog_config(blog_default_version) }) } const choose_the_newest_version = (g1, g2) => { const spliter = (v) => { const fpart = v.split('.')[0] return [parseInt(fpart), v.replace(fpart + '.', '')] } const compare_npmversion = (v1, v2) => { const [n1, s1] = spliter(v1) const [n2, s2] = spliter(v2) cons.d(`n1:${n1} s1:${s1} n2:${n2} s2:${s2}`) if (n1 > n2) { return g1 } else if (n1 < n2) { return g2 } else if (!s1.match(/\\./) && !s2.match(/\\./)) { if (parseInt(s1) > parseInt(s2)) return g1 else return g2 } else { return compare_npmversion(s1, s2) } } return compare_npmversion(g1, g2) } setInterval(async () => { cons.i('Trying to fetch the newest version...') await set_newest_blogver() }, 120 * 1000); setTimeout(async () => { await set_newest_blogver() }, 1000); self.addEventListener('fetch', async event => { try { event.respondWith(handle(event.request)) } catch (msg) { event.respondWith(handleerr(event.request, msg)) } });"},{"title":"about","path":"/about/index.html","content":"一个无聊至极的人"},{"title":"说说","path":"/bbtalk/index.html","content":"ipseak加载中"},{"title":"Speak","path":"/bbtalk/info.html","content":"const searchParams = new URLSearchParams(window.location.search); const speakId = searchParams.get('q'); const path = window.location.pathname; const apiURL = 'https://kkapi.cqlkc.top/api/ispeak'; const markedRender = (body, loading_img='https://bu.dusays.com/2022/05/01/626e88f349943.gif') => { const renderer = { image(href, title, text) { return ` ` } } marked.setOptions({ renderer: new marked.Renderer(), highlight: function (code) { if (hljs) { return hljs.highlightAuto(code).value } else { return code } }, pedantic: false, gfm: true, tables: true, breaks: true, sanitize: false, smartLists: true, smartypants: false, xhtml: false }) marked.use({ renderer }) return marked.parse(body) } fetch(`${apiURL}/get/${speakId}`) .then(response => response.json()) .then(res => { const data = res.data; if(data){ const {title,content} = data; const contentSub = content.substring(0, 30); document.querySelector('.content').innerHTML = markedRender(content); if(title){ document.title = title; } twikoo.init({ envId: 'https://vercel.cqlkc.top', // 腾讯云环境填 envId；Vercel 环境填地址（https://xxx.vercel.app） pageTitle: title || contentSub, // 手动传入当前speak的标题(由于content可能过长，因此截取前30个字符) site: 'bbtalk', el: '.ispeak-comment', // 容器元素 // region: 'ap-guangzhou', // 环境地域，默认为 ap-shanghai，腾讯云环境填 ap-shanghai 或 ap-guangzhou；Vercel 环境不填 path: '/bbtalk/info.html?q=' + _id, // 用于区分不同文章的自定义 js 路径，如果您的文章路径不是 location.pathname，需传此参数'/bbtalk/info.html?q=' + // lang: 'zh-CN', // 用于手动设定评论区语言，支持的语言列表 https://github.com/imaegoo/twikoo/blob/main/src/client/utils/i18n/index.js }) } });"},{"title":"friends","path":"/friends/index.html","content":"Liynw"},{"path":"/js/aha.js","content":"(function () { 'use strict'; document.onkeydown = function (event) { event = (event || window.event); if (event.keyCode == 123) { iziToast.info({ title: '已开启开发者模式', message: '请遵守MIT协议', timeout: 2000, backgroundColor: '#e5f7ff', icon: 'Fontawesome', icon: 'far fa-copyright', position: 'topRight' }); } } })(); document.body.oncopy = function () { iziToast.info({ timeout: 2000, icon: 'Fontawesome', closeOnEscape: 'true', transitionIn: 'bounceInLeft', transitionOut: 'fadeOutRight', layout: '2', position: 'topRight', icon: 'far fa-copy', backgroundColor: '#e5f7ff', title: '复制成功', message: '请遵守 CC BY-NC-SA 4.0 协议' }); } // 老旧浏览器提示 function browserTC() { iziToast.warning({ title: '检测到您的浏览器版本过低', message: '这可能会导致网站样式错乱', timeout: 5000, position: 'topRight' }); } function browserVersion() { var userAgent = navigator.userAgent; //取得浏览器的userAgent字符串 var isIE = userAgent.indexOf(\"compatible\") > -1 && userAgent.indexOf(\"MSIE\") > -1; //判断是否IE -1 && userAgent.indexOf(\"rv:11.0\") > -1; var isEdge = userAgent.indexOf(\"Edge\") > -1 && !isIE; //Edge浏览器 var isFirefox = userAgent.indexOf(\"Firefox\") > -1; //Firefox浏览器 var isOpera = userAgent.indexOf(\"Opera\")>-1 || userAgent.indexOf(\"OPR\")>-1 ; //Opera浏览器 var isChrome = userAgent.indexOf(\"Chrome\")>-1 && userAgent.indexOf(\"Safari\")>-1 && userAgent.indexOf(\"Edge\")==-1 && userAgent.indexOf(\"OPR\")==-1; //Chrome浏览器 var isSafari = userAgent.indexOf(\"Safari\")>-1 && userAgent.indexOf(\"Chrome\")==-1 && userAgent.indexOf(\"Edge\")==-1 && userAgent.indexOf(\"OPR\")==-1; //Safari浏览器 if(isEdge) { if(userAgent.split('Edge/')[1].split('.')[0]"},{"path":"/js/artalk-plugin-lightbox.js","content":"var __defProp=Object.defineProperty,__getOwnPropSymbols=Object.getOwnPropertySymbols,__hasOwnProp=Object.prototype.hasOwnProperty,__propIsEnum=Object.prototype.propertyIsEnumerable,__defNormalProp=(t,e,o)=>e in t?__defProp(t,e,{enumerable:!0,configurable:!0,writable:!0,value:o}):t[e]=o,__spreadValues=(t,e)=>{for(var o in e||(e={}))__hasOwnProp.call(e,o)&&__defNormalProp(t,o,e[o]);if(__getOwnPropSymbols)for(var o of __getOwnPropSymbols(e))__propIsEnum.call(e,o)&&__defNormalProp(t,o,e[o]);return t};!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?e(require(\"artalk\")):\"function\"==typeof define&&define.amd?define([\"artalk\"],e):e((t=\"undefined\"!=typeof globalThis?globalThis:t||self).Artalk)}(this,(function(t){\"use strict\";function e(t){return t&&\"object\"==typeof t&&\"default\"in t?t:{default:t}}e(t).default.use((t=>{const e=\"atk-lightbox-loaded\",o=\"atk-lightbox-img\",r=\".atk-lightbox-img\",n=window.ATK_LIGHTBOX_TYPE,a=t=>!n&&window[t]||(n||\"\").toLowerCase()===t.toLowerCase();t.on(\"list-loaded\",(()=>{const n=[];t.getCommentList().forEach((t=>{const l=t.getRender().$content;l.querySelectorAll(`img:not([atk-emoticon]):not([${e}])`).forEach((t=>{t.setAttribute(e,\"\");const r=document.createElement(\"a\");r.setAttribute(\"class\",o),r.setAttribute(\"href\",t.src),r.setAttribute(\"data-src\",t.src),r.append(t.cloneNode()),t.replaceWith(r),n.push(r)})),a(\"lightGallery\")&&window.lightGallery(l,__spreadValues({selector:r},window.ATK_LIGHTBOX_CONF||{}))})),a(\"lightbox\")&&n.forEach((t=>{window.$(t).attr(\"data-title\",window.$(t).find(\"img\").attr(\"alt\")),window.$(t).attr(\"rel\",\"lightbox\"),t.onclick=e=>{e.preventDefault(),window.lightbox.start(window.$(t))}}))})),a(\"Fancybox\")&&window.Fancybox.bind(\".artalk .atk-list .atk-lightbox-img\",window.ATK_LIGHTBOX_CONF)}))}));"},{"path":"/js/bbtalk.js","content":"let jsonUrl = 'https://kkapi.cqlkc.top/api/ispeak?author=633aaa45d0d52c818b1cf9c1&page=1' // 在这修改api document.getElementById('bber-talk').addEventListener('click', () => { pjax.loadUrl(\"/bbtalk/\")// 在这修改你的哔哔页面地址 }) bbtalk(); document.addEventListener('pjax:complete', () => { bbtalk(); }) function bbtalk() { let data = JSON.parse(localStorage.getItem('bibi')); let nowTime = Date.now(); let ls; if (data == null || nowTime - data.time >= 1800000) { // 设置缓存时长，单位毫秒，默认30分钟，建议10分钟以上，不能为0，想不缓存自己改代码。 getData(); return } else { ls = JSON.parse(data.ls) }; let bberHtml = '' ls.forEach((item, i) => { let br = /[\\s\\uFEFF\\xA0]+/g; item.content = item.content.replace(br, '') let d = new Date(item.createdAt) let date = d.getFullYear() + '/' + (d.getMonth() + 1) + '/' + d.getDate() + ' ' + d.getHours() + ':' + d.getMinutes() + ':' + d.getSeconds() let dataTime = timeago.format(date, 'zh_CN'); let newdataTime = '' + dataTime + '' bberHtml += '' + newdataTime + '： ' + urlToLink(item.content) + '' }); document.getElementById(\"bber-talk\").innerHTML += '' + bberHtml + '' } function getData() { fetch(jsonUrl) .then(res => res.json()) .then((data) => { data = { time: Date.now(), ls: JSON.stringify(data.data.items) } localStorage.setItem('bibi', JSON.stringify(data)) }).then(() => { bbtalk(); }).catch(() => { console.log('获取哔哔数据失败！'); }); } function urlToLink(str) { let re_forimg = /"},{"path":"/js/bibi.js","content":"let svg = '' let total = 0 let nowNum = 0 let items = [] let page = 1 let Url = 'https://kkapi.cqlkc.top/api/ispeak?author=633aaa45d0d52c818b1cf9c1&page=' // 修改api，记得带参数page window.addEventListener('DOMContentLoaded', () => { getNew(); }); // 获取数据 function getNew() { let bibi = document.getElementById('bibi'); try { bibi.removeChild(document.getElementById('more')) } catch (error) {} bibi.innerHTML += '' // loading图片可以f12在我网站源码下载，也可以使用其他图片。 fetch(Url + page).then(res => res.json()).then((res) => { total = res.data.total items = res.data.items nowNum += items.length if (page == 1) { document.querySelector('.bb-info').innerHTML = ' My bibi(' + total + ')' } page += 1 }).then(() => { bb(); if (nowNum < total) { document.getElementById('bibi').innerHTML += '下一页' } document.getElementById('bibi').removeChild(document.getElementById('loading')) }) } // 渲染数据 function bb() { let bb = document.getElementById('bb-main') items.forEach((item) => { let time = item.createdAt.substring(0, 10); let div = document.createElement('div') item.content = contentFormat(item.content) div.className = 'bb-card' div.innerHTML = '' + item.author.nickName + '' + svg + '' + time + '' + item.content + '' + item.tag.name + '' bb.appendChild(div) }) } // content格式化 function contentFormat(s) { let br = /^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g; let re_forimg = /"},{"path":"/js/biggerimg.js","content":"// 如果当前页有评论就执行函数 function pjaxbigger(){ if (document.getElementById('post-comment')) owoBig(); // 表情放大 function owoBig() { let flag = 1, // 设置节流阀 owo_time = '', // 设置计时器 m = 3; // 设置放大倍数 // 创建盒子 let div = document.createElement('div'), body = document.querySelector('body'); // 设置ID div.id = 'owo-big'; // 插入盒子 body.appendChild(div) // 构造observer let observer = new MutationObserver(mutations => { for (let i = 0; i < mutations.length; i++) { let dom = mutations[i].addedNodes, owo_body = ''; if (dom.length == 2 && dom[1].className == 'OwO-body') owo_body = dom[1]; // 如果需要在评论内容中启用此功能请解除下面的注释 else if (dom.length == 1 && dom[0].className == 'tk-comment') owo_body = dom[0]; else continue; // 禁用右键（手机端长按会出现右键菜单，为了体验给禁用掉） if (document.body.clientWidth e.preventDefault()); // 鼠标移入 owo_body.onmouseover = (e) => { if (flag && e.target.tagName == 'IMG') { flag = 0; // 移入300毫秒后显示盒子 owo_time = setTimeout(() => { let height = e.path[0].clientHeight * m, // 盒子高 width = e.path[0].clientWidth * m, // 盒子宽 left = (e.x - e.offsetX) - (width - e.path[0].clientWidth) / 2, // 盒子与屏幕左边距离 top = e.y - e.offsetY; // 盒子与屏幕顶部距离 if ((left + width) > body.clientWidth) left -= ((left + width) - body.clientWidth + 10); // 右边缘检测，防止超出屏幕 if (left < 0) left = 10; // 左边缘检测，防止超出屏幕 // 设置盒子样式 div.style.cssText = `display:flex; height:${height}px; width:${width}px; left:${left}px; top:${top}px;`; // 在盒子中插入图片 div.innerHTML = `` }, 300); } }; // 鼠标移出隐藏盒子 owo_body.onmouseout = () => { div.style.display = 'none', flag = 1, clearTimeout(owo_time); } } }) observer.observe(document.getElementById('post-comment'), { subtree: true, childList: true }) // 监听的 元素 和 配置项 } } pjaxbigger(); document.addEventListener('pjax:complete', () => { pjaxbigger(); })"},{"path":"/js/ispeak.js","content":"function pia(){ var head = document.getElementsByTagName('head')[0] var meta = document.createElement('meta') meta.name = 'referrer' meta.content = 'no-referrer' head.appendChild(meta) if (ispeak) { ispeak .init({ el: '#ispeak', api: 'https://kkapi.cqlkc.top/', author: '633aaa45d0d52c818b1cf9c1', pageSize: 10, loading_img: 'https://bu.dusays.com/2022/05/01/626e88f349943.gif', comment: function (speak) { // 4.4.0 之后在此回调函数中初始化评论 const { _id, title, content } = speak const contentSub = content.substring(0, 30) twikoo.init({ envId: 'https://vercel.cqlkc.top', // 腾讯云环境填 envId；Vercel 环境填地址（https://xxx.vercel.app） pageTitle: title || contentSub, // 手动传入当前speak的标题(由于content可能过长，因此截取前30个字符) site: 'bbtalk', el: '.ispeak-comment', // 容器元素 // region: 'ap-guangzhou', // 环境地域，默认为 ap-shanghai，腾讯云环境填 ap-shanghai 或 ap-guangzhou；Vercel 环境不填 path: '/bbtalk/info.html?q=' + _id, // 用于区分不同文章的自定义 js 路径，如果您的文章路径不是 location.pathname，需传此参数'/bbtalk/info.html?q=' + // lang: 'zh-CN', // 用于手动设定评论区语言，支持的语言列表 https://github.com/imaegoo/twikoo/blob/main/src/client/utils/i18n/index.js onCommentLoaded: function () { } }) } }) .then(function () { console.log('ispeak 加载完成') document.getElementById('tip').style.display = 'none' }) } else { document.getElementById('tip').innerHTML = 'ipseak依赖加载失败！' } } pia(); document.addEventListener('pjax:complete', () => { pia(); })"},{"path":"/js/pjax.js","content":"/*document.addEventListener(\"pjax:complete\", function () { load_twikoo(); window.lazyLoadInstance?.update(); });*/ document.addEventListener('pjax:complete', function () { document.querySelectorAll('script[data-pjax]').forEach(item => { const newScript = document.createElement('script') const content = item.text || item.textContent || item.innerHTML || \"\" Array.from(item.attributes).forEach(attr => newScript.setAttribute(attr.name, attr.value)) newScript.appendChild(document.createTextNode(content)) item.parentNode.replaceChild(newScript, item) }) load_twikoo(); window.lazyLoadInstance?.update(); }); document.addEventListener('pjax:error', (e) => { if (e.request.status === 404) { pjax.loadUrl('/404.html') } })"},{"path":"/js/pwa.js","content":"//重定向浏览器地址 pjax.site_handleResponse = pjax.handleResponse; pjax.handleResponse = function(responseText, request, href, options){ Object.defineProperty(request,'responseURL',{ value: href }); pjax.site_handleResponse(responseText,request,href,options); }"},{"path":"/js/timeago.min.js","content":"!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?t(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],t):t((e=e||self).timeago={})}(this,function(e){\"use strict\";var r=[\"second\",\"minute\",\"hour\",\"day\",\"week\",\"month\",\"year\"];var a=[\"秒\",\"分钟\",\"小时\",\"天\",\"周\",\"个月\",\"年\"];function t(e,t){n[e]=t}function i(e){return n[e]||n.en_US}var n={},f=[60,60,24,7,365/7/12,12];function o(e){return e instanceof Date?e:!isNaN(e)||/^\\d+$/.test(e)?new Date(parseInt(e)):(e=(e||\"\").trim().replace(/\\.\\d+/,\"\").replace(/-/,\"/\").replace(/-/,\"/\").replace(/(\\d)T(\\d)/,\"$1 $2\").replace(/Z/,\" UTC\").replace(/([+-]\\d\\d):?(\\d\\d)/,\" $1$2\"),new Date(e))}function d(e,t){for(var n=e=f[a]&&a"},{"path":"/js/universe.js","content":"function dark() { window.requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || window.msRequestAnimationFrame; var n, e, i, h, t = .05, s = document.getElementById(\"universe\"), o = !0, a = \"180,184,240\", r = \"226,225,142\", d = \"226,225,224\", c = []; function f() { n = window.innerWidth, e = window.innerHeight, i = .216 * n, s.setAttribute(\"width\", n), s.setAttribute(\"height\", e) } function u() { h.clearRect(0, 0, n, e); for (var t = c.length, i = 0; i < t; i++) { var s = c[i]; s.move(), s.fadeIn(), s.fadeOut(), s.draw() } } function y() { this.reset = function() { this.giant = m(3), this.comet = !this.giant && !o && m(10), this.x = l(0, n - 10), this.y = l(0, e), this.r = l(1.1, 2.6), this.dx = l(t, 6 * t) + (this.comet + 1 - 1) * t * l(50, 120) + 2 * t, this.dy = -l(t, 6 * t) - (this.comet + 1 - 1) * t * l(50, 120), this.fadingOut = null, this.fadingIn = !0, this.opacity = 0, this.opacityTresh = l(.2, 1 - .4 * (this.comet + 1 - 1)), this.do = l(5e-4, .002) + .001 * (this.comet + 1 - 1) }, this.fadeIn = function() { this.fadingIn && (this.fadingIn = !(this.opacity > this.opacityTresh), this.opacity += this.do) }, this.fadeOut = function() { this.fadingOut && (this.fadingOut = !(this.opacity < 0), this.opacity -= this.do /2,(this.x>n||this.y"},{"title":"朋友文章","path":"/link/index.html","content":""},{"title":"留言板","path":"/liuyan/index.html","content":"有什么想说的都可以在这里评论哦！"}]